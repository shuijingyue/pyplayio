getClassLoad,是否需要,如需要，请补充理由,,,,,,,,,,,,,,,,,
Landroid/accessibilityservice/AccessibilityServiceInfo;->setCapabilities(I)V,,,,,,,,,,,,,,,,,,,
Landroid/accounts/Account;->accessId:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/accounts/AccountManager;->confirmCredentialsAsUser(Landroid/accounts/Account;Landroid/os/Bundle;Landroid/app/Activity;Landroid/accounts/AccountManagerCallback;Landroid/os/Handler;Landroid/os/UserHandle;)Landroid/accounts/AccountManagerFuture;,,,,,,,,,,,,,,,,,,,
Landroid/accounts/AccountManager;->getAccountsByTypeAsUser(Ljava/lang/String;Landroid/os/UserHandle;)[Landroid/accounts/Account;,,,,,,,,,,,,,,,,,,,
Landroid/accounts/AccountManager;-><init>(Landroid/content/Context;Landroid/accounts/IAccountManager;Landroid/os/Handler;)V,,,,,,,,,,,,,,,,,,,
Landroid/accounts/Account;->TAG:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/animation/Animator;->reverse()V,,,,,,,,,,,,,,,,,,,
Landroid/app/Activity;->attach(Landroid/content/Context;Landroid/app/ActivityThread;Landroid/app/Instrumentation;Landroid/os/IBinder;ILandroid/app/Application;Landroid/content/Intent;Landroid/content/pm/ActivityInfo;Ljava/lang/CharSequence;Landroid/app/Activity;Ljava/lang/String;Landroid/app/Activity$NonConfigurationInstances;Landroid/content/res/Configuration;Ljava/lang/String;Lcom/android/internal/app/IVoiceInteractor;Landroid/view/Window;Landroid/view/ViewRootImpl$ActivityConfigCallback;Landroid/os/IBinder;)V,,,,,,,,,,,,,,,,,,,
Landroid/app/Activity;->dispatchActivityResult(Ljava/lang/String;IILandroid/content/Intent;Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Landroid/app/Activity;->finish(I)V,,,,,,,,,,,,,,,,,,,
Landroid/app/Activity;->FRAGMENTS_TAG:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/app/Activity;->managedQuery(Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;,,,,,,,,,,,,,,,,,,,
Landroid/app/ActivityManager$MemoryInfo;->hiddenAppThreshold:J,,,,,,,,,,,,,,,,,,,
Landroid/app/ActivityManager$MemoryInfo;->secondaryServerThreshold:J,,,,,,,,,,,,,,,,,,,
Landroid/app/ActivityManager$MemoryInfo;->visibleAppThreshold:J,,,,,,,,,,,,,,,,,,,
Landroid/app/ActivityManager$RunningAppProcessInfo;->FLAG_HAS_ACTIVITIES:I,,,,,,,,,,,,,,,,,,,
Landroid/app/ActivityManager$RunningAppProcessInfo;->FLAG_PERSISTENT:I,,,,,,,,,,,,,,,,,,,
Landroid/app/ActivityManager$RunningAppProcessInfo;->IMPORTANCE_CANT_SAVE_STATE_PRE_26:I,,,,,,,,,,,,,,,,,,,
Landroid/app/ActivityManager$RunningAppProcessInfo;->procStateToImportance(I)I,,,,,,,,,,,,,,,,,,,
Landroid/app/ActivityManager$TaskSnapshot;->getTaskSize()Landroid/graphics/Point;,,,,,,,,,,,,,,,,,,,
Landroid/app/ActivityManager;->PROCESS_STATE_BOUND_FOREGROUND_SERVICE:I,,,,,,,,,,,,,,,,,,,
Landroid/app/ActivityManager;->PROCESS_STATE_CACHED_ACTIVITY:I,,,,,,,,,,,,,,,,,,,
Landroid/app/ActivityManager;->PROCESS_STATE_FOREGROUND_SERVICE:I,,,,,,,,,,,,,,,,,,,
Landroid/app/ActivityManager;->PROCESS_STATE_HOME:I,,,,,,,,,,,,,,,,,,,
Landroid/app/ActivityManager;->PROCESS_STATE_IMPORTANT_BACKGROUND:I,,,,,,,,,,,,,,,,,,,
Landroid/app/ActivityManager;->PROCESS_STATE_RECEIVER:I,,,,,,,,,,,,,,,,,,,
Landroid/app/ActivityManager;->PROCESS_STATE_SERVICE:I,,,,,,,,,,,,,,,,,,,
Landroid/app/ActivityManager;->switchUser(I)Z,,,,,,,,,,,,,,,,,,,
Landroid/app/Activity;->onMovedToDisplay(ILandroid/content/res/Configuration;)V,,,,,,,,,,,,,,,,,,,
Landroid/app/Activity;->performCreate(Landroid/os/Bundle;Landroid/os/PersistableBundle;)V,,,,,,,,,,,,,,,,,,,
Landroid/app/Activity;->startActivityForResult(Ljava/lang/String;Landroid/content/Intent;ILandroid/os/Bundle;)V,,,,,,,,,,,,,,,,,,,
Landroid/app/ActivityTaskManager;->IActivityTaskManagerSingleton:Landroid/util/Singleton;,,,,,,,,,,,,,,,,,,,
Landroid/app/ActivityThread$AppBindData;->persistent:Z,,,,,,,,,,,,,,,,,,,
Landroid/app/ActivityThread;->getPackageInfo(Landroid/content/pm/ApplicationInfo;Landroid/content/res/CompatibilityInfo;I)Landroid/app/LoadedApk;,是,"【应用商店】影响的业务：商店提供给系统的安装服务，
即检查可以卸载的预装应用是否存在可安装的apk包。
如果有就安装，如果没有引流到商店。这里检查包信息需要用到反射。",,,,,,,,,,,,,,,,,
Landroid/app/ActivityThread;->mCurDefaultDisplayDpi:I,,,,,,,,,,,,,,,,,,,
Landroid/app/ActivityThread;->registerOnActivityPausedListener(Landroid/app/Activity;Landroid/app/OnActivityPausedListener;)V,,,,,,,,,,,,,,,,,,,
Landroid/app/ActivityThread;->unregisterOnActivityPausedListener(Landroid/app/Activity;Landroid/app/OnActivityPausedListener;)V,,,,,,,,,,,,,,,,,,,
Landroid/app/admin/DeviceAdminInfo;->getUsedPolicies()Ljava/util/ArrayList;,,,,,,,,,,,,,,,,,,,
Landroid/app/admin/DevicePolicyManager;->ACTION_DEVICE_POLICY_MANAGER_STATE_CHANGED:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/app/admin/DevicePolicyManager;->getMaximumTimeToLock(Landroid/content/ComponentName;I)J,,,,,,,,,,,,,,,,,,,
Landroid/app/admin/DevicePolicyManager;->getProfileOwnerAsUser(I)Landroid/content/ComponentName;,,,,,,,,,,,,,,,,,,,
Landroid/app/admin/DevicePolicyManager;->getRequiredStrongAuthTimeout(Landroid/content/ComponentName;I)J,,,,,,,,,,,,,,,,,,,
Landroid/app/admin/DevicePolicyManager;->getTrustAgentConfiguration(Landroid/content/ComponentName;Landroid/content/ComponentName;I)Ljava/util/List;,,,,,,,,,,,,,,,,,,,
Landroid/app/admin/DevicePolicyManager;->setActiveAdmin(Landroid/content/ComponentName;ZI)V,,,,,,,,,,,,,,,,,,,
Landroid/app/admin/DevicePolicyManager;->setGlobalProxy(Landroid/content/ComponentName;Ljava/net/Proxy;Ljava/util/List;)Landroid/content/ComponentName;,,,,,,,,,,,,,,,,,,,
Landroid/app/admin/DevicePolicyManager;->throwIfParentInstance(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Landroid/app/admin/SecurityLog$SecurityEvent;-><init>([B)V,,,,,,,,,,,,,,,,,,,
Landroid/app/Application;->dispatchActivityPostCreated(Landroid/app/Activity;Landroid/os/Bundle;)V,,,,,,,,,,,,,,,,,,,
Landroid/app/Application;->dispatchActivityPostDestroyed(Landroid/app/Activity;)V,,,,,,,,,,,,,,,,,,,
Landroid/app/Application;->dispatchActivityPostPaused(Landroid/app/Activity;)V,,,,,,,,,,,,,,,,,,,
Landroid/app/Application;->dispatchActivityPostResumed(Landroid/app/Activity;)V,,,,,,,,,,,,,,,,,,,
Landroid/app/Application;->dispatchActivityPostSaveInstanceState(Landroid/app/Activity;Landroid/os/Bundle;)V,,,,,,,,,,,,,,,,,,,
Landroid/app/Application;->dispatchActivityPostStarted(Landroid/app/Activity;)V,,,,,,,,,,,,,,,,,,,
Landroid/app/Application;->dispatchActivityPostStopped(Landroid/app/Activity;)V,,,,,,,,,,,,,,,,,,,
Landroid/app/Application;->dispatchActivityPreCreated(Landroid/app/Activity;Landroid/os/Bundle;)V,,,,,,,,,,,,,,,,,,,
Landroid/app/Application;->dispatchActivityPreDestroyed(Landroid/app/Activity;)V,,,,,,,,,,,,,,,,,,,
Landroid/app/Application;->dispatchActivityPrePaused(Landroid/app/Activity;)V,,,,,,,,,,,,,,,,,,,
Landroid/app/Application;->dispatchActivityPreResumed(Landroid/app/Activity;)V,,,,,,,,,,,,,,,,,,,
Landroid/app/Application;->dispatchActivityPreSaveInstanceState(Landroid/app/Activity;Landroid/os/Bundle;)V,,,,,,,,,,,,,,,,,,,
Landroid/app/Application;->dispatchActivityPreStarted(Landroid/app/Activity;)V,,,,,,,,,,,,,,,,,,,
Landroid/app/Application;->dispatchActivityPreStopped(Landroid/app/Activity;)V,,,,,,,,,,,,,,,,,,,
Landroid/app/ApplicationPackageManager;->getPackageCurrentVolume(Landroid/content/pm/ApplicationInfo;)Landroid/os/storage/VolumeInfo;,,,,,,,,,,,,,,,,,,,
Landroid/app/ApplicationPackageManager;->setInstantAppCookie([B)Z,,,,,,,,,,,,,,,,,,,
Landroid/app/AppOpsManager;->_NUM_OP:I,,,,,,,,,,,,,,,,,,,
Landroid/app/AppOpsManager;->OP_NONE:I,,,,,,,,,,,,,,,,,,,
Landroid/app/AppOpsManager;->opToName(I)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/app/AppOpsManager;->opToPermission(I)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/app/AppOpsManager;->resetAllModes()V,,,,,,,,,,,,,,,,,,,
Landroid/app/backup/BackupDataOutput;->mBackupWriter:J,,,,,,,,,,,,,,,,,,,
Landroid/app/backup/FullBackup;->backupToTar(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/app/backup/FullBackupDataOutput;)I,,,,,,,,,,,,,,,,,,,
Landroid/app/backup/FullBackupDataOutput;->addSize(J)V,,,,,,,,,,,,,,,,,,,
Landroid/app/backup/IBackupManager;->acknowledgeFullBackupOrRestore(IZLjava/lang/String;Ljava/lang/String;Landroid/app/backup/IFullBackupRestoreObserver;)V,,,,,,,,,,,,,,,,,,,
Landroid/app/backup/IBackupManager;->clearBackupData(Ljava/lang/String;Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Landroid/app/backup/IBackupManager;->isBackupEnabled()Z,,,,,,,,,,,,,,,,,,,
Landroid/app/backup/IBackupManager;->isBackupServiceActive(I)Z,,,,,,,,,,,,,,,,,,,
Landroid/app/backup/IBackupManager;->listAllTransports()[Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/app/backup/IBackupManager;->selectBackupTransport(Ljava/lang/String;)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/app/backup/IBackupManager;->setAutoRestore(Z)V,,,,,,,,,,,,,,,,,,,
Landroid/app/backup/IBackupManager;->setBackupEnabled(Z)V,,,,,,,,,,,,,,,,,,,
Landroid/app/ContextImpl;->createActivityContext(Landroid/app/ActivityThread;Landroid/app/LoadedApk;Landroid/content/pm/ActivityInfo;Landroid/os/IBinder;ILandroid/content/res/Configuration;)Landroid/app/ContextImpl;,,,,,,,,,,,,,,,,,,,
Landroid/app/DialogFragment;->mBackStackId:I,,,,,,,,,,,,,,,,,,,
Landroid/app/DialogFragment;->mViewDestroyed:Z,,,,,,,,,,,,,,,,,,,
Landroid/app/DownloadManager;->getWhereArgsForIds([J)[Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/app/DownloadManager;->getWhereClauseForIds([J)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/app/DownloadManager;->UNDERLYING_COLUMNS:[Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/app/FragmentController;->mHost:Landroid/app/FragmentHostCallback;,,,,,,,,,,,,,,,,,,,
Landroid/app/Fragment;->mAdded:Z,,,,,,,,,,,,,,,,,,,
Landroid/app/FragmentManagerImpl;->loadAnimator(Landroid/app/Fragment;IZI)Landroid/animation/Animator;,,,,,,,,,,,,,,,,,,,
Landroid/app/IActivityManager$Stub$Proxy;->setActivityController(Landroid/app/IActivityController;Z)V,,,,,,,,,,,,,,,,,,,
Landroid/app/IActivityManager$Stub$Proxy;->updatePersistentConfiguration(Landroid/content/res/Configuration;)V,,,,,,,,,,,,,,,,,,,
Landroid/app/IActivityManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/app/IActivityManager;,,,,,,,,,,,,,,,,,,,
Landroid/app/IActivityManager;->finishHeavyWeightApp()V,,,,,,,,,,,,,,,,,,,
Landroid/app/IActivityManager;->getTaskBounds(I)Landroid/graphics/Rect;,,,,,,,,,,,,,,,,,,,
Landroid/app/IActivityManager;->hang(Landroid/os/IBinder;Z)V,,,,,,,,,,,,,,,,,,,
Landroid/app/IActivityManager;->isInLockTaskMode()Z,,,,,,,,,,,,,,,,,,,
Landroid/app/IActivityManager;->isTopOfTask(Landroid/os/IBinder;)Z,,,,,,,,,,,,,,,,,,,
Landroid/app/IActivityManager;->killAllBackgroundProcesses()V,,,,,,,,,,,,,,,,,,,
Landroid/app/IActivityManager;->profileControl(Ljava/lang/String;IZLandroid/app/ProfilerInfo;I)Z,,,,,,,,,,,,,,,,,,,
Landroid/app/IActivityManager;->removeContentProviderExternal(Ljava/lang/String;Landroid/os/IBinder;)V,,,,,,,,,,,,,,,,,,,
Landroid/app/IActivityManager;->resizeTask(ILandroid/graphics/Rect;I)V,,,,,,,,,,,,,,,,,,,
Landroid/app/IActivityManager;->restart()V,,,,,,,,,,,,,,,,,,,
Landroid/app/IActivityManager;->sendIdleJobTrigger()V,,,,,,,,,,,,,,,,,,,
Landroid/app/IActivityManager;->setActivityController(Landroid/app/IActivityController;Z)V,,,,,,,,,,,,,,,,,,,
Landroid/app/IActivityManager;->setDebugApp(Ljava/lang/String;ZZ)V,,,,,,,,,,,,,,,,,,,
Landroid/app/IActivityManager;->setDumpHeapDebugLimit(Ljava/lang/String;IJLjava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Landroid/app/IActivityManager;->setPackageScreenCompatMode(Ljava/lang/String;I)V,,,,,,,,,,,,,,,,,,,
Landroid/app/IActivityManager;->setProcessMemoryTrimLevel(Ljava/lang/String;II)Z,,,,,,,,,,,,,,,,,,,
Landroid/app/IActivityManager;->startBinderTracking()Z,,,,,,,,,,,,,,,,,,,
Landroid/app/IActivityManager;->startInstrumentation(Landroid/content/ComponentName;Ljava/lang/String;ILandroid/os/Bundle;Landroid/app/IInstrumentationWatcher;Landroid/app/IUiAutomationConnection;ILjava/lang/String;)Z,,,,,,,,,,,,,,,,,,,
Landroid/app/IActivityManager;->stopBinderTrackingAndDump(Landroid/os/ParcelFileDescriptor;)Z,,,,,,,,,,,,,,,,,,,
Landroid/app/IActivityManager;->stopUser(IZLandroid/app/IStopUserCallback;)I,,,,,,,,,,,,,,,,,,,
Landroid/app/IActivityManager;->suppressResizeConfigChanges(Z)V,,,,,,,,,,,,,,,,,,,
Landroid/app/IActivityManager;->unhandledBack()V,,,,,,,,,,,,,,,,,,,
Landroid/app/IActivityManager;->unlockUser(I[B[BLandroid/os/IProgressListener;)Z,,,,,,,,,,,,,,,,,,,
Landroid/app/IActivityManager;->updateConfiguration(Landroid/content/res/Configuration;)Z,,,,,,,,,,,,,,,,,,,
Landroid/app/IAlarmManager;->getNextAlarmClock(I)Landroid/app/AlarmManager$AlarmClockInfo;,,,,,,,,,,,,,,,,,,,
Landroid/app/IAlarmManager;->set(Ljava/lang/String;IJJJILandroid/app/PendingIntent;Landroid/app/IAlarmListener;Ljava/lang/String;Landroid/os/WorkSource;Landroid/app/AlarmManager$AlarmClockInfo;)V,,,,,,,,,,,,,,,,,,,
Landroid/app/IAlarmManager;->setTime(J)Z,,,,,,,,,,,,,,,,,,,
Landroid/app/IAppTask;->getTaskInfo()Landroid/app/ActivityManager$RecentTaskInfo;,,,,,,,,,,,,,,,,,,,
Landroid/app/IAssistDataReceiver;->onHandleAssistData(Landroid/os/Bundle;)V,,,,,,,,,,,,,,,,,,,
Landroid/app/IAssistDataReceiver;->onHandleAssistScreenshot(Landroid/graphics/Bitmap;)V,,,,,,,,,,,,,,,,,,,
Landroid/app/IInstrumentationWatcher$Stub;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/app/INotificationManager$Stub;->TRANSACTION_enqueueNotificationWithTag:I,,,,,,,,,,,,,,,,,,,
Landroid/app/INotificationManager;->getHistoricalNotifications(Ljava/lang/String;IZ)[Landroid/service/notification/StatusBarNotification;,,,,,,,,,,,,,,,,,,,
Landroid/app/Instrumentation;->callActivityOnNewIntent(Landroid/app/Activity;Lcom/android/internal/content/ReferrerIntent;)V,,,,,,,,,,,,,,,,,,,
Landroid/app/Instrumentation;->execStartActivitiesAsUser(Landroid/content/Context;Landroid/os/IBinder;Landroid/os/IBinder;Landroid/app/Activity;[Landroid/content/Intent;Landroid/os/Bundle;I)I,,,,,,,,,,,,,,,,,,,
Landroid/app/Instrumentation;->execStartActivityAsCaller(Landroid/content/Context;Landroid/os/IBinder;Landroid/os/IBinder;Landroid/app/Activity;Landroid/content/Intent;ILandroid/os/Bundle;Landroid/os/IBinder;ZI)Landroid/app/Instrumentation$ActivityResult;,,,,,,,,,,,,,,,,,,,
Landroid/app/Instrumentation;->execStartActivityFromAppTask(Landroid/content/Context;Landroid/os/IBinder;Landroid/app/IAppTask;Landroid/content/Intent;Landroid/os/Bundle;)V,,,,,,,,,,,,,,,,,,,
Landroid/app/IStopUserCallback;->userStopped(I)V,,,,,,,,,,,,,,,,,,,
Landroid/app/ITransientNotification;->show(Landroid/os/IBinder;)V,,,,,,,,,,,,,,,,,,,
Landroid/app/IWallpaperManager;->getWallpaperInfo(I)Landroid/app/WallpaperInfo;,,,,,,,,,,,,,,,,,,,
Landroid/app/job/JobInfo$Builder;->setFlags(I)Landroid/app/job/JobInfo$Builder;,,,,,,,,,,,,,,,,,,,
Landroid/app/job/JobInfo$Builder;->setPriority(I)Landroid/app/job/JobInfo$Builder;,,,,,,,,,,,,,,,,,,,
Landroid/app/job/JobInfo;->FLAG_WILL_BE_FOREGROUND:I,,,,,,,,,,,,,,,,,,,
Landroid/app/job/JobInfo;->PRIORITY_FOREGROUND_APP:I,,,,,,,,,,,,,,,,,,,
Landroid/app/job/JobInfo;->PRIORITY_FOREGROUND_SERVICE:I,,,,,,,,,,,,,,,,,,,
Landroid/app/KeyguardManager;->isDeviceSecure(I)Z,,,,,,,,,,,,,,,,,,,
Landroid/app/LoadedApk$ServiceDispatcher;->getIServiceConnection()Landroid/app/IServiceConnection;,,,,,,,,,,,,,,,,,,,
Landroid/app/LoadedApk$ServiceDispatcher;-><init>(Landroid/content/ServiceConnection;Landroid/content/Context;Landroid/os/Handler;I)V,,,,,,,,,,,,,,,,,,,
Landroid/app/LoadedApk$ServiceDispatcher;->mConnection:Landroid/content/ServiceConnection;,,,,,,,,,,,,,,,,,,,
Landroid/app/LoadedApk;->getCompatibilityInfo()Landroid/content/res/CompatibilityInfo;,,,,,,,,,,,,,,,,,,,
Landroid/app/LoadedApk;->lookupServiceDispatcher(Landroid/content/ServiceConnection;Landroid/content/Context;)Landroid/app/IServiceConnection;,,,,,,,,,,,,,,,,,,,
Landroid/app/LoadedApk;->mLibDir:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/app/NativeActivity;->hideIme(I)V,,,,,,,,,,,,,,,,,,,
Landroid/app/NativeActivity;->loadNativeCode(Ljava/lang/String;Ljava/lang/String;Landroid/os/MessageQueue;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILandroid/content/res/AssetManager;[BLjava/lang/ClassLoader;Ljava/lang/String;)J,,,,,,,,,,,,,,,,,,,
Landroid/app/NativeActivity;->mNativeHandle:J,,,,,,,,,,,,,,,,,,,
Landroid/app/NativeActivity;->setWindowFlags(II)V,,,,,,,,,,,,,,,,,,,
Landroid/app/NativeActivity;->setWindowFormat(I)V,,,,,,,,,,,,,,,,,,,
Landroid/app/NativeActivity;->showIme(I)V,,,,,,,,,,,,,,,,,,,
Landroid/app/Notification$Builder;->loadHeaderAppName()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/app/NotificationManager;->getZenModeConfig()Landroid/service/notification/ZenModeConfig;,,,,,,,,,,,,,,,,,,,
Landroid/app/PackageDeleteObserver;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/app/PendingIntent;->setOnMarshaledListener(Landroid/app/PendingIntent$OnMarshaledListener;)V,,,,,,,,,,,,,,,,,,,
Landroid/app/Presentation;->createPresentationContext(Landroid/content/Context;Landroid/view/Display;I)Landroid/content/Context;,,,,,,,,,,,,,,,,,,,
Landroid/app/QueuedWork;->queue(Ljava/lang/Runnable;Z)V,,,,,,,,,,,,,,,,,,,
Landroid/app/SearchManager;->isVisible()Z,,,,,,,,,,,,,,,,,,,
Landroid/app/servertransaction/ActivityResultItem;->mResultInfoList:Ljava/util/List;,,,,,,,,,,,,,,,,,,,
Landroid/app/servertransaction/NewIntentItem;->mIntents:Ljava/util/List;,,,,,,,,,,,,,,,,,,,
Landroid/app/SharedPreferencesImpl;->startLoadFromDisk()V,,,,,,,,,,,,,,,,,,,
Landroid/app/StatusBarManager;->DISABLE_NOTIFICATION_TICKER:I,,,,,,,,,,,,,,,,,,,
Landroid/app/StatusBarManager;->expandSettingsPanel(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Landroid/app/StatusBarManager;->removeIcon(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Landroid/app/StatusBarManager;->setIcon(Ljava/lang/String;IILjava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Landroid/app/StatusBarManager;->setIconVisibility(Ljava/lang/String;Z)V,,,,,,,,,,,,,,,,,,,
Landroid/app/TaskInfo;->userId:I,,,,,,,,,,,,,,,,,,,
Landroid/app/TaskStackListener;->onActivityDismissingDockedStack()V,,,,,,,,,,,,,,,,,,,
Landroid/app/TaskStackListener;->onActivityForcedResizable(Ljava/lang/String;II)V,,,,,,,,,,,,,,,,,,,
Landroid/app/TaskStackListener;->onActivityLaunchOnSecondaryDisplayFailed()V,,,,,,,,,,,,,,,,,,,
Landroid/app/TaskStackListener;->onActivityLaunchOnSecondaryDisplayRerouted(Landroid/app/ActivityManager$RunningTaskInfo;I)V,,,,,,,,,,,,,,,,,,,
Landroid/app/TaskStackListener;->onActivityPinned(Ljava/lang/String;III)V,,,,,,,,,,,,,,,,,,,
Landroid/app/TaskStackListener;->onActivityRequestedOrientationChanged(II)V,,,,,,,,,,,,,,,,,,,
Landroid/app/TaskStackListener;->onActivityRestartAttempt(Landroid/app/ActivityManager$RunningTaskInfo;ZZZ)V,,,,,,,,,,,,,,,,,,,
Landroid/app/TaskStackListener;->onActivityUnpinned()V,,,,,,,,,,,,,,,,,,,
Landroid/app/TaskStackListener;->onSizeCompatModeActivityChanged(ILandroid/os/IBinder;)V,,,,,,,,,,,,,,,,,,,
Landroid/app/TaskStackListener;->onTaskMovedToFront(I)V,,,,,,,,,,,,,,,,,,,
Landroid/app/TaskStackListener;->onTaskProfileLocked(II)V,,,,,,,,,,,,,,,,,,,
Landroid/app/TaskStackListener;->onTaskRemoved(I)V,,,,,,,,,,,,,,,,,,,
Landroid/app/TaskStackListener;->onTaskSnapshotChanged(ILandroid/app/ActivityManager$TaskSnapshot;)V,,,,,,,,,,,,,,,,,,,
Landroid/app/TaskStackListener;->onTaskStackChanged()V,,,,,,,,,,,,,,,,,,,
Landroid/app/UiAutomationConnection;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/app/usage/IUsageStatsManager;->isAppInactive(Ljava/lang/String;ILjava/lang/String;)Z,,,,,,,,,,,,,,,,,,,
Landroid/app/usage/IUsageStatsManager;->queryConfigurationStats(IJJLjava/lang/String;)Landroid/content/pm/ParceledListSlice;,,,,,,,,,,,,,,,,,,,
Landroid/app/usage/IUsageStatsManager;->queryUsageStats(IJJLjava/lang/String;)Landroid/content/pm/ParceledListSlice;,,,,,,,,,,,,,,,,,,,
Landroid/app/usage/IUsageStatsManager;->setAppInactive(Ljava/lang/String;ZI)V,,,,,,,,,,,,,,,,,,,
Landroid/app/usage/NetworkStatsManager;-><init>(Landroid/content/Context;)V,,,,,,,,,,,,,,,,,,,
Landroid/app/usage/NetworkStatsManager;->setPollForce(Z)V,,,,,,,,,,,,,,,,,,,
Landroid/app/VrManager;->mService:Landroid/service/vr/IVrManager;,,,,,,,,,,,,,,,,,,,
Landroid/app/WallpaperManager;->openDefaultWallpaper(Landroid/content/Context;I)Ljava/io/InputStream;,,,,,,,,,,,,,,,,,,,
Landroid/appwidget/AppWidgetHost;->HANDLE_VIEW_DATA_CHANGED:I,,,,,,,,,,,,,,,,,,,
Landroid/appwidget/AppWidgetHost;-><init>(Landroid/content/Context;ILandroid/widget/RemoteViews$OnClickHandler;Landroid/os/Looper;)V,,,,,,,,,,,,,,,,,,,
Landroid/appwidget/AppWidgetHostView;->updateAppWidgetSize(Landroid/os/Bundle;IIIIZ)V,,,,,,,,,,,,,,,,,,,
Landroid/appwidget/AppWidgetManager;->bindAppWidgetId(ILandroid/content/ComponentName;Landroid/os/Bundle;)V,,,,,,,,,,,,,,,,,,,
Landroid/appwidget/AppWidgetManager;->bindRemoteViewsService(Landroid/content/Context;ILandroid/content/Intent;Landroid/app/IServiceConnection;I)Z,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothA2dp;->ACTION_ACTIVE_DEVICE_CHANGED:Ljava/lang/String;,是,小爱同学app的蓝牙设备模块有使用。用来切换使用中的蓝牙设备,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothA2dp;->ACTION_CODEC_CONFIG_CHANGED:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothA2dp;->disableOptionalCodecs(Landroid/bluetooth/BluetoothDevice;)V,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothA2dp;->enableOptionalCodecs(Landroid/bluetooth/BluetoothDevice;)V,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothA2dp;->getActiveDevice()Landroid/bluetooth/BluetoothDevice;,是,小爱同学app的蓝牙设备模块有使用。用来切换使用中的蓝牙设备,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothA2dp;->getCodecStatus(Landroid/bluetooth/BluetoothDevice;)Landroid/bluetooth/BluetoothCodecStatus;,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothA2dp;->isOptionalCodecsEnabled(Landroid/bluetooth/BluetoothDevice;)I,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothA2dp;->isOptionalCodecsSupported(Landroid/bluetooth/BluetoothDevice;)I,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothA2dp;->setActiveDevice(Landroid/bluetooth/BluetoothDevice;)Z,是,小爱同学app的蓝牙设备模块有使用。用来切换使用中的蓝牙设备,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothA2dp;->setCodecConfigPreference(Landroid/bluetooth/BluetoothDevice;Landroid/bluetooth/BluetoothCodecConfig;)V,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothA2dp;->setOptionalCodecsEnabled(Landroid/bluetooth/BluetoothDevice;I)V,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothA2dpSink;->disconnect(Landroid/bluetooth/BluetoothDevice;)Z,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothAdapter;->disable(Z)Z,是,Used by ShareMe app to disable Bluetooth after transfer is completed,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothAdapter;->factoryReset()Z,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothAdapter;->listenUsingEncryptedRfcommWithServiceRecord(Ljava/lang/String;Ljava/util/UUID;)Landroid/bluetooth/BluetoothServerSocket;,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothCodecStatus;->EXTRA_CODEC_STATUS:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothCodecStatus;->getCodecConfig()Landroid/bluetooth/BluetoothCodecConfig;,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothCodecStatus;->getCodecsLocalCapabilities()[Landroid/bluetooth/BluetoothCodecConfig;,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothCodecStatus;->getCodecsSelectableCapabilities()[Landroid/bluetooth/BluetoothCodecConfig;,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothDevice;->ACTION_SDP_RECORD:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothDevice;->connectGatt(Landroid/content/Context;ZLandroid/bluetooth/BluetoothGattCallback;IZILandroid/os/Handler;)Landroid/bluetooth/BluetoothGatt;,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothDevice;->EXTRA_SDP_SEARCH_STATUS:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothDevice;->setAlias(Ljava/lang/String;)Z,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothDevice;->setPin(Ljava/lang/String;)Z,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothDevice;->UNBOND_REASON_AUTH_FAILED:I,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothDevice;->UNBOND_REASON_AUTH_REJECTED:I,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothDevice;->UNBOND_REASON_AUTH_TIMEOUT:I,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothDevice;->UNBOND_REASON_DISCOVERY_IN_PROGRESS:I,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothDevice;->UNBOND_REASON_REMOTE_AUTH_CANCELED:I,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothDevice;->UNBOND_REASON_REMOTE_DEVICE_DOWN:I,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothDevice;->UNBOND_REASON_REPEATED_ATTEMPTS:I,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothGatt;->connect(Ljava/lang/Boolean;Landroid/bluetooth/BluetoothGattCallback;Landroid/os/Handler;)Z,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothGatt;->mDeviceBusy:Ljava/lang/Boolean;,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothGatt;->mTransport:I,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothGattService;->setAdvertisePreferred(Z)V,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothHeadset;->ACTION_ACTIVE_DEVICE_CHANGED:Ljava/lang/String;,是,小爱同学app的蓝牙设备模块有使用。用来切换使用中的蓝牙设备,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothHeadsetClient;->acceptCall(Landroid/bluetooth/BluetoothDevice;I)Z,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothHeadsetClientCall;->getId()I,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothHeadsetClientCall;->getNumber()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothHeadsetClientCall;->getState()I,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothHeadsetClientCall;->isMultiParty()Z,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothHeadsetClientCall;->isOutgoing()Z,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothHeadsetClient;->connect(Landroid/bluetooth/BluetoothDevice;)Z,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothHeadsetClient;->disconnect(Landroid/bluetooth/BluetoothDevice;)Z,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothHeadsetClient;->getAudioState(Landroid/bluetooth/BluetoothDevice;)I,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothHeadsetClient;->rejectCall(Landroid/bluetooth/BluetoothDevice;)Z,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothHeadset;->getActiveDevice()Landroid/bluetooth/BluetoothDevice;,是,小爱同学app的蓝牙设备模块有使用。用来切换使用中的蓝牙设备,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothHeadset;->getAudioState(Landroid/bluetooth/BluetoothDevice;)I,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothHeadset;->getPriority(Landroid/bluetooth/BluetoothDevice;)I,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothHeadset;->phoneStateChanged(IIILjava/lang/String;ILjava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothHeadset;->setActiveDevice(Landroid/bluetooth/BluetoothDevice;)Z,是,小爱同学app的蓝牙设备模块有使用。用来切换使用中的蓝牙设备,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothHearingAid;->ACTION_ACTIVE_DEVICE_CHANGED:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothHearingAid;->getActiveDevices()Ljava/util/List;,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothHearingAid;->setActiveDevice(Landroid/bluetooth/BluetoothDevice;)Z,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothMapClient;->sendMessage(Landroid/bluetooth/BluetoothDevice;[Landroid/net/Uri;Ljava/lang/String;Landroid/app/PendingIntent;Landroid/app/PendingIntent;)Z,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothMap;->disconnect(Landroid/bluetooth/BluetoothDevice;)Z,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothPan;->connect(Landroid/bluetooth/BluetoothDevice;)Z,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothPbap;->disconnect(Landroid/bluetooth/BluetoothDevice;)Z,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothProfile;->PRIORITY_AUTO_CONNECT:I,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothSap;->disconnect(Landroid/bluetooth/BluetoothDevice;)Z,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/BluetoothSocket;->EADDRINUSE:I,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/IBluetooth$Stub$Proxy;->getConnectionState(Landroid/bluetooth/BluetoothDevice;)I,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/IBluetooth$Stub;->TRANSACTION_enable:I,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/IBluetoothManager$Stub;->TRANSACTION_enable:I,,,,,,,,,,,,,,,,,,,
Landroid/bluetooth/le/ScanRecord;->parseFromBytes([B)Landroid/bluetooth/le/ScanRecord;,,,,,,,,,,,,,,,,,,,
Landroid/companion/AssociationRequest;->getDeviceFilters()Ljava/util/List;,,,,,,,,,,,,,,,,,,,
Landroid/companion/AssociationRequest;->isSingleDevice()Z,,,,,,,,,,,,,,,,,,,
Landroid/companion/BluetoothDeviceFilter;->getAddress()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/companion/BluetoothDeviceFilterUtils;->getDeviceDisplayNameInternal(Landroid/bluetooth/BluetoothDevice;)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/companion/BluetoothDeviceFilterUtils;->getDeviceDisplayNameInternal(Landroid/net/wifi/ScanResult;)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/companion/BluetoothDeviceFilterUtils;->getDeviceMacAddress(Landroid/os/Parcelable;)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/companion/BluetoothLeDeviceFilter;->getScanFilter()Landroid/bluetooth/le/ScanFilter;,,,,,,,,,,,,,,,,,,,
Landroid/companion/DeviceFilter;->getDeviceDisplayName(Landroid/os/Parcelable;)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/companion/DeviceFilter;->matches(Landroid/os/Parcelable;)Z,,,,,,,,,,,,,,,,,,,
Landroid/companion/ICompanionDeviceDiscoveryService$Stub;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/companion/IFindDeviceCallback;->onSuccess(Landroid/app/PendingIntent;)V,,,,,,,,,,,,,,,,,,,
Landroid/content/ComponentName;->appendShortString(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Landroid/content/ComponentName;->printShortString(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Landroid/content/ContentProvider;->attachInfoForTesting(Landroid/content/Context;Landroid/content/pm/ProviderInfo;)V,,,,,,,,,,,,,,,,,,,
Landroid/content/ContentProvider;->mAuthorities:[Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/content/ContentResolver;->getSyncStatusAsUser(Landroid/accounts/Account;Ljava/lang/String;I)Landroid/content/SyncStatusInfo;,,,,,,,,,,,,,,,,,,,
Landroid/content/ContentResolver;->SYNC_ERROR_SYNC_ALREADY_IN_PROGRESS:I,,,,,,,,,,,,,,,,,,,
Landroid/content/ContentResolver;->SYNC_OBSERVER_TYPE_STATUS:I,,,,,,,,,,,,,,,,,,,
Landroid/content/Context;->canStartActivityForResult()Z,,,,,,,,,,,,,,,,,,,
Landroid/content/Context;->checkPermission(Ljava/lang/String;IILandroid/os/IBinder;)I,,,,,,,,,,,,,,,,,,,
Landroid/content/Context;->sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;Ljava/lang/String;I)V,,,,,,,,,,,,,,,,,,,
Landroid/content/Context;->sendOrderedBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;Ljava/lang/String;ILandroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V,,,,,,,,,,,,,,,,,,,
Landroid/content/ContextWrapper;->createApplicationContext(Landroid/content/pm/ApplicationInfo;I)Landroid/content/Context;,,,,,,,,,,,,,,,,,,,
Landroid/content/ContextWrapper;->startForegroundServiceAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)Landroid/content/ComponentName;,,,,,,,,,,,,,,,,,,,
Landroid/content/CursorLoader;->mCancellationSignal:Landroid/os/CancellationSignal;,,,,,,,,,,,,,,,,,,,
Landroid/content/CursorLoader;->mObserver:Landroid/content/Loader$ForceLoadContentObserver;,,,,,,,,,,,,,,,,,,,
Landroid/content/IContentProvider;->QUERY_TRANSACTION:I,,,,,,,,,,,,,,,,,,,
Landroid/content/IContentService;->cancelSync(Landroid/accounts/Account;Ljava/lang/String;Landroid/content/ComponentName;)V,,,,,,,,,,,,,,,,,,,
Landroid/content/IContentService;->isSyncActive(Landroid/accounts/Account;Ljava/lang/String;Landroid/content/ComponentName;)Z,,,,,,,,,,,,,,,,,,,
Landroid/content/Intent;->ACTION_ALARM_CHANGED:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/content/Intent;->ACTION_USER_SWITCHED:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/content/IntentFilter;->hasDataAuthority(Landroid/content/IntentFilter$AuthorityEntry;)Z,,,,,,,,,,,,,,,,,,,
Landroid/content/IntentFilter;->hasDataPath(Landroid/os/PatternMatcher;)Z,,,,,,,,,,,,,,,,,,,
Landroid/content/IntentFilter;->hasDataSchemeSpecificPart(Landroid/os/PatternMatcher;)Z,,,,,,,,,,,,,,,,,,,
Landroid/content/IntentFilter;->hasExactDataType(Ljava/lang/String;)Z,,,,,,,,,,,,,,,,,,,
Landroid/content/IntentFilter;->setAutoVerify(Z)V,,,,,,,,,,,,,,,,,,,
Landroid/content/Intent;->parseCommandArgs(Landroid/os/ShellCommand;Landroid/content/Intent$CommandOptionHandler;)Landroid/content/Intent;,,,,,,,,,,,,,,,,,,,
Landroid/content/Intent;->prepareToLeaveProcess(Landroid/content/Context;)V,,,,,,,,,,,,,,,,,,,
Landroid/content/Intent;->printIntentArgsHelp(Ljava/io/PrintWriter;Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Landroid/content/Intent;->setAllowFds(Z)V,,,,,,,,,,,,,,,,,,,
Landroid/content/Intent;->toInsecureString()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/content/ISyncAdapter;->onUnsyncableAccount(Landroid/content/ISyncAdapterUnsyncableAccountCallback;)V,,,,,,,,,,,,,,,,,,,
Landroid/content/om/IOverlayManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/content/om/IOverlayManager;,,,,,,,,,,,,,,,,,,,
Landroid/content/om/IOverlayManager;->getAllOverlays(I)Ljava/util/Map;,,,,,,,,,,,,,,,,,,,
Landroid/content/om/IOverlayManager;->getOverlayInfo(Ljava/lang/String;I)Landroid/content/om/OverlayInfo;,,,,,,,,,,,,,,,,,,,
Landroid/content/om/OverlayInfo;->state:I,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/ActivityInfo;->activityInfoConfigJavaToNative(I)I,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/ActivityInfo;->FLAG_ALLOW_EMBEDDED:I,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/ActivityInfo;->FLAG_SHOW_FOR_ALL_USERS:I,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/ApplicationInfo;->fullBackupContent:I,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/ApplicationInfo;->getCodePath()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/BaseParceledListSlice;->getList()Ljava/util/List;,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/BaseParceledListSlice;->writeParcelableCreator(Ljava/lang/Object;Landroid/os/Parcel;)V,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/ComponentInfo;->getComponentName()Landroid/content/ComponentName;,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/IPackageInstaller;->uninstall(Landroid/content/pm/VersionedPackage;Ljava/lang/String;ILandroid/content/IntentSender;I)V,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/IPackageManager$Stub;->TRANSACTION_getApplicationInfo:I,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/IPackageManager;->checkPermission(Ljava/lang/String;Ljava/lang/String;I)I,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/IPackageManager;->getAppOpPermissionPackages(Ljava/lang/String;)[Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/IPackageManager;->getInstalledApplications(II)Landroid/content/pm/ParceledListSlice;,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/IPackageManager;->getPackageInstaller()Landroid/content/pm/IPackageInstaller;,是,"【应用商店】我们安装业务需要通过反射实例化已安装的PackageInstaller
我们的安装业务都依赖与这个数据结构
【游戏中心】同商店",,,,,,,,,,,,,,,,,
Landroid/content/pm/IPackageManager;->getPermissionControllerPackageName()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/IPackageManager;->getServicesSystemSharedLibraryPackageName()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/IPackageManager;->getSharedSystemSharedLibraryPackageName()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/IPackageManager;->grantRuntimePermission(Ljava/lang/String;Ljava/lang/String;I)V,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/IPackageManager;->isPackageAvailable(Ljava/lang/String;I)Z,是,【游戏中心】需要检测游戏在分身空间的安装状态,,,,,,,,,,,,,,,,,
Landroid/content/pm/IPackageManager;->queryInstrumentation(Ljava/lang/String;I)Landroid/content/pm/ParceledListSlice;,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/IPackageManager;->queryIntentActivities(Landroid/content/Intent;Ljava/lang/String;II)Landroid/content/pm/ParceledListSlice;,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/IPackageManager;->querySyncProviders(Ljava/util/List;Ljava/util/List;)V,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/PackageInstaller$SessionInfo;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/PackageInstaller$SessionInfo;->resolvedBaseCodePath:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/PackageInstaller$SessionInfo;->sealed:Z,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/PackageInstaller$SessionParams;->appIcon:Landroid/graphics/Bitmap;,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/PackageInstaller$SessionParams;->originatingUid:I,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/PackageInstaller$SessionParams;->sizeBytes:J,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/PackageManager;->getPackageCandidateVolumes(Landroid/content/pm/ApplicationInfo;)Ljava/util/List;,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/PackageManager;->getPackageCurrentVolume(Landroid/content/pm/ApplicationInfo;)Landroid/os/storage/VolumeInfo;,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/PackageManager;->installStatusToString(ILjava/lang/String;)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/PackageManager;->MOVE_EXTERNAL_MEDIA:I,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/PackageManager;->MOVE_INTERNAL:I,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/PackageManager;->movePackage(Ljava/lang/String;Landroid/os/storage/VolumeInfo;)I,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/PackageManager;->SYSTEM_SHARED_LIBRARY_SERVICES:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/PackageManager;->SYSTEM_SHARED_LIBRARY_SHARED:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/PackageParser$Package;->mKeySetMapping:Landroid/util/ArrayMap;,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/PackageParser$Package;->mUpgradeKeySets:Landroid/util/ArraySet;,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/PackageParser$SigningDetails$Builder;->setPastSigningCertificates([Landroid/content/pm/Signature;)Landroid/content/pm/PackageParser$SigningDetails$Builder;,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/PackageParser;->collectCertificates(Landroid/content/pm/PackageParser$Package;Ljava/io/File;Z)V,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/PackageParser;->mCallback:Landroid/content/pm/PackageParser$Callback;,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/ParceledListSlice;->writeParcelableCreator(Landroid/os/Parcelable;Landroid/os/Parcel;)V,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/PermissionInfo;->protectionToString(I)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/ResolveInfo;->getComponentInfo()Landroid/content/pm/ComponentInfo;,,,,,,,,,,,,,,,,,,,
Landroid/content/pm/VerifierInfo;-><init>(Ljava/lang/String;Ljava/security/PublicKey;)V,,,,,,,,,,,,,,,,,,,
Landroid/content/res/AssetManager;->applyStyle(JIILandroid/content/res/XmlBlock$Parser;[IJJ)V,,,,,,,,,,,,,,,,,,,
Landroid/content/res/AssetManager;->openNonAsset(ILjava/lang/String;)Ljava/io/InputStream;,,,,,,,,,,,,,,,,,,,
Landroid/content/res/AssetManager;->openNonAsset(Ljava/lang/String;I)Ljava/io/InputStream;,,,,,,,,,,,,,,,,,,,
Landroid/content/res/AssetManager;->resolveAttrs(JII[I[I[I[I)Z,,,,,,,,,,,,,,,,,,,
Landroid/content/res/AssetManager;->retrieveAttributes(Landroid/content/res/XmlBlock$Parser;[I[I[I)Z,,,,,,,,,,,,,,,,,,,
Landroid/content/res/AssetManager;->setThemeTo(JLandroid/content/res/AssetManager;J)V,,,,,,,,,,,,,,,,,,,
Landroid/content/res/ColorStateList;->obtainForTheme(Landroid/content/res/Resources$Theme;)Landroid/content/res/ColorStateList;,,,,,,,,,,,,,,,,,,,
Landroid/content/res/ColorStateList;->onColorsChanged()V,,,,,,,,,,,,,,,,,,,
Landroid/content/res/CompatibilityInfo;->computeCompatibleScaling(Landroid/util/DisplayMetrics;Landroid/util/DisplayMetrics;)F,,,,,,,,,,,,,,,,,,,
Landroid/content/res/Configuration;->assetsSeq:I,,,,,,,,,,,,,,,,,,,
Landroid/content/res/Configuration;->resourceQualifierString(Landroid/content/res/Configuration;)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/content/res/DrawableCache;->getInstance(JLandroid/content/res/Resources;Landroid/content/res/Resources$Theme;)Landroid/graphics/drawable/Drawable;,,,,,,,,,,,,,,,,,,,
Landroid/content/res/ObbInfo;->salt:[B,,,,,,,,,,,,,,,,,,,
Landroid/content/res/Resources;->getDisplayAdjustments()Landroid/view/DisplayAdjustments;,,,,,,,,,,,,,,,,,,,
Landroid/content/res/Resources;->getDrawableInflater()Landroid/graphics/drawable/DrawableInflater;,,,,,,,,,,,,,,,,,,,
Landroid/content/res/ResourcesImpl;->getDisplayMetrics()Landroid/util/DisplayMetrics;,,,,,,,,,,,,,,,,,,,
Landroid/content/res/ResourcesImpl;->getValue(ILandroid/util/TypedValue;Z)V,,,,,,,,,,,,,,,,,,,
Landroid/content/res/ResourcesImpl;-><init>(Landroid/content/res/AssetManager;Landroid/util/DisplayMetrics;Landroid/content/res/Configuration;Landroid/view/DisplayAdjustments;)V,,,,,,,,,,,,,,,,,,,
Landroid/content/res/ResourcesImpl;->mConfiguration:Landroid/content/res/Configuration;,,,,,,,,,,,,,,,,,,,
Landroid/content/res/ResourcesImpl;->mPreloading:Z,,,,,,,,,,,,,,,,,,,
Landroid/content/res/ResourcesImpl;->TRACE_FOR_MISS_PRELOAD:Z,,,,,,,,,,,,,,,,,,,
Landroid/content/res/ResourcesImpl;->TRACE_FOR_PRELOAD:Z,,,,,,,,,,,,,,,,,,,
Landroid/content/res/Resources;-><init>(Ljava/lang/ClassLoader;)V,,,,,,,,,,,,,,,,,,,
Landroid/content/res/Resources;->loadDrawable(Landroid/util/TypedValue;IILandroid/content/res/Resources$Theme;)Landroid/graphics/drawable/Drawable;,,,,,,,,,,,,,,,,,,,
Landroid/content/res/TypedArray;->mAssets:Landroid/content/res/AssetManager;,,,,,,,,,,,,,,,,,,,
Landroid/content/res/TypedArray;->mMetrics:Landroid/util/DisplayMetrics;,,,,,,,,,,,,,,,,,,,
Landroid/content/res/TypedArray;->mRecycled:Z,,,,,,,,,,,,,,,,,,,
Landroid/content/res/TypedArray;->mTheme:Landroid/content/res/Resources$Theme;,,,,,,,,,,,,,,,,,,,
Landroid/content/res/XmlBlock$Parser;->mParseState:J,,,,,,,,,,,,,,,,,,,
Landroid/content/SyncAdapterType;->allowParallelSyncs:Z,,,,,,,,,,,,,,,,,,,
Landroid/content/SyncAdapterType;->isAlwaysSyncable:Z,,,,,,,,,,,,,,,,,,,
Landroid/content/SyncAdapterType;->settingsActivity:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/content/UndoManager;->addOperation(Landroid/content/UndoOperation;I)V,,,,,,,,,,,,,,,,,,,
Landroid/content/UndoManager;->beginUpdate(Ljava/lang/CharSequence;)V,,,,,,,,,,,,,,,,,,,
Landroid/content/UndoManager;->commitState(Landroid/content/UndoOwner;)I,,,,,,,,,,,,,,,,,,,
Landroid/content/UndoManager;->countRedos([Landroid/content/UndoOwner;)I,,,,,,,,,,,,,,,,,,,
Landroid/content/UndoManager;->countUndos([Landroid/content/UndoOwner;)I,,,,,,,,,,,,,,,,,,,
Landroid/content/UndoManager;->endUpdate()V,,,,,,,,,,,,,,,,,,,
Landroid/content/UndoManager;->forgetRedos([Landroid/content/UndoOwner;I)I,,,,,,,,,,,,,,,,,,,
Landroid/content/UndoManager;->forgetUndos([Landroid/content/UndoOwner;I)I,,,,,,,,,,,,,,,,,,,
Landroid/content/UndoManager;->getLastOperation(Ljava/lang/Class;Landroid/content/UndoOwner;I)Landroid/content/UndoOperation;,,,,,,,,,,,,,,,,,,,
Landroid/content/UndoManager;->getOwner(Ljava/lang/String;Ljava/lang/Object;)Landroid/content/UndoOwner;,,,,,,,,,,,,,,,,,,,
Landroid/content/UndoManager;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/content/UndoManager;->isInUndo()Z,,,,,,,,,,,,,,,,,,,
Landroid/content/UndoManager;->redo([Landroid/content/UndoOwner;I)I,,,,,,,,,,,,,,,,,,,
Landroid/content/UndoManager;->restoreInstanceState(Landroid/os/Parcel;Ljava/lang/ClassLoader;)V,,,,,,,,,,,,,,,,,,,
Landroid/content/UndoManager;->saveInstanceState(Landroid/os/Parcel;)V,,,,,,,,,,,,,,,,,,,
Landroid/content/UndoManager;->setUndoLabel(Ljava/lang/CharSequence;)V,,,,,,,,,,,,,,,,,,,
Landroid/content/UndoManager;->undo([Landroid/content/UndoOwner;I)I,,,,,,,,,,,,,,,,,,,
Landroid/content/UndoOperation;-><init>(Landroid/content/UndoOwner;)V,,,,,,,,,,,,,,,,,,,
Landroid/content/UndoOperation;-><init>(Landroid/os/Parcel;Ljava/lang/ClassLoader;)V,,,,,,,,,,,,,,,,,,,
Landroid/database/AbstractWindowedCursor;->closeWindow()V,,,,,,,,,,,,,,,,,,,
Landroid/database/CursorWindow;->printStats()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/database/sqlite/SQLiteCustomFunction;->dispatchCallback([Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Landroid/database/sqlite/SQLiteCustomFunction;->numArgs:I,,,,,,,,,,,,,,,,,,,
Landroid/database/sqlite/SQLiteDatabase;->mThreadSession:Ljava/lang/ThreadLocal;,,,,,,,,,,,,,,,,,,,
Landroid/database/sqlite/SQLiteDebug$PagerStats;->pageCacheOverflow:I,,,,,,,,,,,,,,,,,,,
Landroid/database/sqlite/SQLiteProgram;->mBindArgs:[Ljava/lang/Object;,,,,,,,,,,,,,,,,,,,
Landroid/database/sqlite/SQLiteStatement;-><init>(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;[Ljava/lang/Object;)V,,,,,,,,,,,,,,,,,,,
Landroid/ddm/DdmHandleAppName;->getNames()Landroid/ddm/DdmHandleAppName$Names;,,,,,,,,,,,,,,,,,,,
Landroid/ddm/DdmHandleAppName;->setAppName(Ljava/lang/String;Ljava/lang/String;I)V,,,,,,,,,,,,,,,,,,,
Landroid/graphics/BitmapFactory;->nativeDecodeAsset(JLandroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;JJ)Landroid/graphics/Bitmap;,,,,,,,,,,,,,,,,,,,
Landroid/graphics/Bitmap;->mNinePatchInsets:Landroid/graphics/NinePatch$InsetStruct;,,,,,,,,,,,,,,,,,,,
Landroid/graphics/Bitmap;->reinit(IIZ)V,,,,,,,,,,,,,,,,,,,
Landroid/graphics/Canvas;->freeTextLayoutCaches()V,,,,,,,,,,,,,,,,,,,
Landroid/graphics/CanvasProperty;->createFloat(F)Landroid/graphics/CanvasProperty;,,,,,,,,,,,,,,,,,,,
Landroid/graphics/CanvasProperty;->createPaint(Landroid/graphics/Paint;)Landroid/graphics/CanvasProperty;,,,,,,,,,,,,,,,,,,,
Landroid/graphics/Canvas;->release()V,,,,,,,,,,,,,,,,,,,
Landroid/graphics/ColorMatrixColorFilter;->setColorMatrixArray([F)V,,,,,,,,,,,,,,,,,,,
Landroid/graphics/drawable/AnimatedStateListDrawable$AnimatedStateListState;->mStateIds:Landroid/util/SparseIntArray;,,,,,,,,,,,,,,,,,,,
Landroid/graphics/drawable/AnimatedStateListDrawable$AnimatedStateListState;->mTransitions:Landroid/util/LongSparseLongArray;,,,,,,,,,,,,,,,,,,,
Landroid/graphics/drawable/AnimatedVectorDrawable$VectorDrawableAnimatorRT;->callOnFinished(Landroid/graphics/drawable/AnimatedVectorDrawable$VectorDrawableAnimatorRT;I)V,,,,,,,,,,,,,,,,,,,
Landroid/graphics/drawable/AnimatedVectorDrawable;->mAnimatedVectorState:Landroid/graphics/drawable/AnimatedVectorDrawable$AnimatedVectorDrawableState;,,,,,,,,,,,,,,,,,,,
Landroid/graphics/drawable/ColorDrawable;->mPaint:Landroid/graphics/Paint;,,,,,,,,,,,,,,,,,,,
Landroid/graphics/drawable/DrawableInflater;->mClassLoader:Ljava/lang/ClassLoader;,,,,,,,,,,,,,,,,,,,
Landroid/graphics/drawable/Drawable;->parseBlendMode(ILandroid/graphics/BlendMode;)Landroid/graphics/BlendMode;,,,,,,,,,,,,,,,,,,,
Landroid/graphics/drawable/DrawableWrapper;->mState:Landroid/graphics/drawable/DrawableWrapper$DrawableWrapperState;,,,,,,,,,,,,,,,,,,,
Landroid/graphics/drawable/Icon;->createWithResource(Landroid/content/res/Resources;I)Landroid/graphics/drawable/Icon;,,,,,,,,,,,,,,,,,,,
Landroid/graphics/drawable/Icon;->getDataLength()I,,,,,,,,,,,,,,,,,,,
Landroid/graphics/drawable/Icon;->hasTint()Z,,,,,,,,,,,,,,,,,,,
Landroid/graphics/drawable/InsetDrawable;->mState:Landroid/graphics/drawable/InsetDrawable$InsetState;,,,,,,,,,,,,,,,,,,,
Landroid/graphics/drawable/LayerDrawable;->addLayer(Landroid/graphics/drawable/LayerDrawable$ChildDrawable;)I,,,,,,,,,,,,,,,,,,,
Landroid/graphics/drawable/RippleDrawable$RippleState;->mColor:Landroid/content/res/ColorStateList;,,,,,,,,,,,,,,,,,,,
Landroid/graphics/drawable/RippleDrawable;->mDensity:I,,,,,,,,,,,,,,,,,,,
Landroid/graphics/drawable/RippleDrawable;->mState:Landroid/graphics/drawable/RippleDrawable$RippleState;,,,,,,,,,,,,,,,,,,,
Landroid/graphics/drawable/ScaleDrawable;->mState:Landroid/graphics/drawable/ScaleDrawable$ScaleState;,,,,,,,,,,,,,,,,,,,
Landroid/graphics/drawable/StateListDrawable;->extractStateSet(Landroid/util/AttributeSet;)[I,,,,,,,,,,,,,,,,,,,
Landroid/graphics/drawable/StateListDrawable;->updateStateFromTypedArray(Landroid/content/res/TypedArray;)V,,,,,,,,,,,,,,,,,,,
Landroid/graphics/drawable/VectorDrawable;->mTintFilter:Landroid/graphics/PorterDuffColorFilter;,,,,,,,,,,,,,,,,,,,
Landroid/graphics/FontListParser;->parse(Ljava/io/InputStream;)Landroid/text/FontConfig;,,,,,,,,,,,,,,,,,,,
Landroid/graphics/fonts/FontVariationAxis;->mStyleValue:F,,,,,,,,,,,,,,,,,,,
Landroid/graphics/GraphicBuffer;-><init>(IIIIJ)V,,,,,,,,,,,,,,,,,,,
Landroid/graphics/GraphicBuffer;->mNativeObject:J,,,,,,,,,,,,,,,,,,,
Landroid/graphics/LightingColorFilter;->setColorAdd(I)V,,,,,,,,,,,,,,,,,,,
Landroid/graphics/LightingColorFilter;->setColorMultiply(I)V,,,,,,,,,,,,,,,,,,,
Landroid/graphics/LinearGradient;->mColor1:I,,,,,,,,,,,,,,,,,,,
Landroid/graphics/LinearGradient;->mPositions:[F,,,,,,,,,,,,,,,,,,,
Landroid/graphics/LinearGradient;->mTileMode:Landroid/graphics/Shader$TileMode;,,,,,,,,,,,,,,,,,,,
Landroid/graphics/LinearGradient;->mX0:F,,,,,,,,,,,,,,,,,,,
Landroid/graphics/LinearGradient;->mX1:F,,,,,,,,,,,,,,,,,,,
Landroid/graphics/LinearGradient;->mY0:F,,,,,,,,,,,,,,,,,,,
Landroid/graphics/LinearGradient;->mY1:F,,,,,,,,,,,,,,,,,,,
Landroid/graphics/Movie;->mNativeMovie:J,,,,,,,,,,,,,,,,,,,
Landroid/graphics/Paint;->mNativePaint:J,,,,,,,,,,,,,,,,,,,
Landroid/graphics/Path;->isSimplePath:Z,,,,,,,,,,,,,,,,,,,
Landroid/graphics/Path;->rects:Landroid/graphics/Region;,,,,,,,,,,,,,,,,,,,
Landroid/graphics/pdf/PdfRenderer;->doClose()V,,,,,,,,,,,,,,,,,,,
Landroid/graphics/pdf/PdfRenderer;->mCurrentPage:Landroid/graphics/pdf/PdfRenderer$Page;,,,,,,,,,,,,,,,,,,,
Landroid/graphics/PorterDuffColorFilter;->getMode()Landroid/graphics/PorterDuff$Mode;,,,,,,,,,,,,,,,,,,,
Landroid/graphics/RadialGradient;->mCenterColor:I,,,,,,,,,,,,,,,,,,,
Landroid/graphics/RadialGradient;->mColors:[I,,,,,,,,,,,,,,,,,,,
Landroid/graphics/RadialGradient;->mEdgeColor:I,,,,,,,,,,,,,,,,,,,
Landroid/graphics/RadialGradient;->mPositions:[F,,,,,,,,,,,,,,,,,,,
Landroid/graphics/RadialGradient;->mRadius:F,,,,,,,,,,,,,,,,,,,
Landroid/graphics/RadialGradient;->mTileMode:Landroid/graphics/Shader$TileMode;,,,,,,,,,,,,,,,,,,,
Landroid/graphics/RadialGradient;->mX:F,,,,,,,,,,,,,,,,,,,
Landroid/graphics/RadialGradient;->mY:F,,,,,,,,,,,,,,,,,,,
Landroid/graphics/Region;-><init>(JI)V,,,,,,,,,,,,,,,,,,,
Landroid/graphics/Region;->mNativeRegion:J,,,,,,,,,,,,,,,,,,,
Landroid/graphics/Region;->recycle()V,,,,,,,,,,,,,,,,,,,
Landroid/graphics/SurfaceTexture;->mFrameAvailableListener:J,,,,,,,,,,,,,,,,,,,
Landroid/graphics/SurfaceTexture;->mOnFrameAvailableHandler:Landroid/os/Handler;,,,,,,,,,,,,,,,,,,,
Landroid/graphics/SurfaceTexture;->mProducer:J,,,,,,,,,,,,,,,,,,,
Landroid/graphics/SurfaceTexture;->mSurfaceTexture:J,,,,,,,,,,,,,,,,,,,
Landroid/graphics/SurfaceTexture;->postEventFromNative(Ljava/lang/ref/WeakReference;)V,,,,,,,,,,,,,,,,,,,
Landroid/graphics/SweepGradient;->mColor0:I,,,,,,,,,,,,,,,,,,,
Landroid/graphics/SweepGradient;->mColor1:I,,,,,,,,,,,,,,,,,,,
Landroid/graphics/SweepGradient;->mColors:[I,,,,,,,,,,,,,,,,,,,
Landroid/graphics/SweepGradient;->mCx:F,,,,,,,,,,,,,,,,,,,
Landroid/graphics/SweepGradient;->mCy:F,,,,,,,,,,,,,,,,,,,
Landroid/graphics/SweepGradient;->mPositions:[F,,,,,,,,,,,,,,,,,,,
Landroid/graphics/Typeface;->nativeCreateFromArray([JII)J,,,,,,,,,,,,,,,,,,,
Landroid/graphics/Typeface;->sSystemFallbackMap:Ljava/util/Map;,,,,,,,,,,,,,,,,,,,
Landroid/graphics/Xfermode;->porterDuffMode:I,,,,,,,,,,,,,,,,,,,
Landroid/hardware/biometrics/BiometricConstants;->BIOMETRIC_ERROR_VENDOR_BASE:I,,,,,,,,,,,,,,,,,,,
Landroid/hardware/biometrics/BiometricFingerprintConstants;->FINGERPRINT_ERROR_VENDOR_BASE:I,,,,,,,,,,,,,,,,,,,
Landroid/hardware/Camera$Parameters;->splitArea(Ljava/lang/String;)Ljava/util/ArrayList;,,,,,,,,,,,,,,,,,,,
Landroid/hardware/camera2/CameraCharacteristics$Key;-><init>(Ljava/lang/String;Ljava/lang/Class;J)V,,,,,,,,,,,,,,,,,,,
Landroid/hardware/camera2/CameraCharacteristics;->mProperties:Landroid/hardware/camera2/impl/CameraMetadataNative;,,,,,,,,,,,,,,,,,,,
Landroid/hardware/camera2/CameraMetadata;->getNativeMetadataPtr()J,,,,,,,,,,,,,,,,,,,
Landroid/hardware/camera2/CaptureRequest$Key;-><init>(Ljava/lang/String;Ljava/lang/Class;J)V,,,,,,,,,,,,,,,,,,,
Landroid/hardware/camera2/CaptureRequest;->mLogicalCameraSettings:Landroid/hardware/camera2/impl/CameraMetadataNative;,,,,,,,,,,,,,,,,,,,
Landroid/hardware/camera2/CaptureResult$Key;-><init>(Ljava/lang/String;Ljava/lang/Class;J)V,,,,,,,,,,,,,,,,,,,
Landroid/hardware/camera2/impl/CameraMetadataNative$Key;->cacheTag(I)V,,,,,,,,,,,,,,,,,,,
Landroid/hardware/camera2/impl/CameraMetadataNative$Key;->hasTag()Z,,,,,,,,,,,,,,,,,,,
Landroid/hardware/camera2/impl/CameraMetadataNative;->mMetadataPtr:J,,,,,,,,,,,,,,,,,,,
Landroid/hardware/camera2/impl/CameraMetadataNative;->nativeGetTagFromKeyLocal(JLjava/lang/String;)I,,,,,,,,,,,,,,,,,,,
Landroid/hardware/camera2/impl/CameraMetadataNative;->nativeGetTypeFromTagLocal(JI)I,,,,,,,,,,,,,,,,,,,
Landroid/hardware/camera2/impl/CameraMetadataNative;->nativeReadValues(IJ)[B,,,,,,,,,,,,,,,,,,,
Landroid/hardware/camera2/utils/HashCodeHelpers;->hashCode([I)I,,,,,,,,,,,,,,,,,,,
Landroid/hardware/Camera;->CAMERA_HAL_API_VERSION_1_0:I,,,,,,,,,,,,,,,,,,,
Landroid/hardware/Camera;->postEventFromNative(Ljava/lang/Object;IIILjava/lang/Object;)V,,,,,,,,,,,,,,,,,,,
Landroid/hardware/display/DisplayManager;->ACTION_WIFI_DISPLAY_STATUS_CHANGED:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/hardware/display/DisplayManager;->EXTRA_WIFI_DISPLAY_STATUS:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/hardware/display/WifiDisplayStatus;->DISPLAY_STATE_CONNECTED:I,,,,,,,,,,,,,,,,,,,
Landroid/hardware/display/WifiDisplayStatus;->DISPLAY_STATE_CONNECTING:I,,,,,,,,,,,,,,,,,,,
Landroid/hardware/display/WifiDisplayStatus;->DISPLAY_STATE_NOT_CONNECTED:I,,,,,,,,,,,,,,,,,,,
Landroid/hardware/display/WifiDisplayStatus;->FEATURE_STATE_ON:I,,,,,,,,,,,,,,,,,,,
Landroid/hardware/display/WifiDisplayStatus;->mActiveDisplay:Landroid/hardware/display/WifiDisplay;,,,,,,,,,,,,,,,,,,,
Landroid/hardware/display/WifiDisplayStatus;->mDisplays:[Landroid/hardware/display/WifiDisplay;,,,,,,,,,,,,,,,,,,,
Landroid/hardware/display/WifiDisplayStatus;->SCAN_STATE_NOT_SCANNING:I,,,,,,,,,,,,,,,,,,,
Landroid/hardware/fingerprint/FingerprintManager;->getEnrolledFingerprints(I)Ljava/util/List;,,,,,,,,,,,,,,,,,,,
Landroid/hardware/HardwareBuffer;->mNativeObject:J,,,,,,,,,,,,,,,,,,,
Landroid/hardware/ICameraService$Stub;->asInterface(Landroid/os/IBinder;)Landroid/hardware/ICameraService;,,,,,,,,,,,,,,,,,,,
Landroid/hardware/input/IInputManager$Stub;->TRANSACTION_injectInputEvent:I,,,,,,,,,,,,,,,,,,,
Landroid/hardware/input/InputManager;->INJECT_INPUT_EVENT_MODE_WAIT_FOR_FINISH:I,,,,,,,,,,,,,,,,,,,
Landroid/hardware/location/GeofenceHardware;-><init>(Landroid/hardware/location/IGeofenceHardware;)V,,,,,,,,,,,,,,,,,,,
Landroid/hardware/location/IActivityRecognitionHardwareClient$Stub;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/hardware/location/IActivityRecognitionHardwareClient;->onAvailabilityChanged(ZLandroid/hardware/location/IActivityRecognitionHardware;)V,,,,,,,,,,,,,,,,,,,
Landroid/hardware/Sensor;->TYPE_DEVICE_ORIENTATION:I,,,,,,,,,,,,,,,,,,,
Landroid/hardware/Sensor;->TYPE_PICK_UP_GESTURE:I,,,,,,,,,,,,,,,,,,,
Landroid/hardware/SerialManager;->getSerialPorts()[Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/hardware/SerialManager;->openSerialPort(Ljava/lang/String;I)Landroid/hardware/SerialPort;,,,,,,,,,,,,,,,,,,,
Landroid/hardware/SerialPort;->close()V,,,,,,,,,,,,,,,,,,,
Landroid/hardware/SerialPort;->mNativeContext:I,,,,,,,,,,,,,,,,,,,
Landroid/hardware/SerialPort;->write(Ljava/nio/ByteBuffer;I)V,,,,,,,,,,,,,,,,,,,
Landroid/hardware/soundtrigger/SoundTrigger$GenericRecognitionEvent;-><init>(IIZIIIZLandroid/media/AudioFormat;[B)V,,,,,,,,,,,,,,,,,,,
Landroid/hardware/soundtrigger/SoundTrigger$KeyphraseRecognitionEvent;-><init>(IIZIIIZLandroid/media/AudioFormat;[B[Landroid/hardware/soundtrigger/SoundTrigger$KeyphraseRecognitionExtra;)V,,,,,,,,,,,,,,,,,,,
Landroid/hardware/soundtrigger/SoundTrigger$KeyphraseRecognitionExtra;->recognitionModes:I,,,,,,,,,,,,,,,,,,,
Landroid/hardware/soundtrigger/SoundTrigger$RecognitionConfig;->captureRequested:Z,,,,,,,,,,,,,,,,,,,
Landroid/hardware/soundtrigger/SoundTrigger$RecognitionConfig;->data:[B,,,,,,,,,,,,,,,,,,,
Landroid/hardware/soundtrigger/SoundTrigger$RecognitionConfig;->keyphrases:[Landroid/hardware/soundtrigger/SoundTrigger$KeyphraseRecognitionExtra;,,,,,,,,,,,,,,,,,,,
Landroid/hardware/soundtrigger/SoundTrigger$RecognitionEvent;->data:[B,,,,,,,,,,,,,,,,,,,
Landroid/hardware/soundtrigger/SoundTrigger$RecognitionEvent;-><init>(IIZIIIZLandroid/media/AudioFormat;[B)V,,,,,,,,,,,,,,,,,,,
Landroid/hardware/soundtrigger/SoundTrigger$SoundModelEvent;-><init>(II[B)V,,,,,,,,,,,,,,,,,,,
Landroid/hardware/soundtrigger/SoundTriggerModule;->mId:I,,,,,,,,,,,,,,,,,,,
Landroid/hardware/SystemSensorManager$BaseEventQueue;->dispatchAdditionalInfoEvent(III[F[I)V,,,,,,,,,,,,,,,,,,,
Landroid/hardware/SystemSensorManager$BaseEventQueue;->dispatchFlushCompleteEvent(I)V,,,,,,,,,,,,,,,,,,,
Landroid/hardware/SystemSensorManager$BaseEventQueue;->dispatchSensorEvent(I[FIJ)V,,,,,,,,,,,,,,,,,,,
Landroid/hardware/usb/IUsbManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/hardware/usb/IUsbManager;,,,,,,,,,,,,,,,,,,,
Landroid/hardware/usb/UsbDeviceConnection;->mNativeContext:J,,,,,,,,,,,,,,,,,,,
Landroid/hardware/usb/UsbManager;->isFunctionEnabled(Ljava/lang/String;)Z,,,,,,,,,,,,,,,,,,,
Landroid/hardware/usb/UsbManager;->USB_DATA_UNLOCKED:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/hardware/usb/UsbRequest;->mNativeContext:J,,,,,,,,,,,,,,,,,,,
Landroid/icu/impl/CurrencyData;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/icu/impl/IllegalIcuArgumentException;-><init>(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Landroid/icu/text/DateFormatSymbols;->getLocale(Landroid/icu/util/ULocale$Type;)Landroid/icu/util/ULocale;,,,,,,,,,,,,,,,,,,,
Landroid/icu/text/DateIntervalFormat;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/icu/text/DateTimePatternGenerator$DistanceInfo;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/icu/text/DecimalFormatSymbols;->getLocale(Landroid/icu/util/ULocale$Type;)Landroid/icu/util/ULocale;,,,,,,,,,,,,,,,,,,,
Landroid/icu/text/RuleBasedCollator;->getLocale(Landroid/icu/util/ULocale$Type;)Landroid/icu/util/ULocale;,,,,,,,,,,,,,,,,,,,
Landroid/icu/text/SpoofChecker$ScriptSet;->and(I)V,,,,,,,,,,,,,,,,,,,
Landroid/icu/text/SpoofChecker$ScriptSet;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/icu/text/SpoofChecker$ScriptSet;->isFull()Z,,,,,,,,,,,,,,,,,,,
Landroid/icu/text/SpoofChecker$ScriptSet;->setAll()V,,,,,,,,,,,,,,,,,,,
Landroid/icu/text/TimeZoneNames$DefaultTimeZoneNames$FactoryImpl;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/icu/text/UFormat;->getLocale(Landroid/icu/util/ULocale$Type;)Landroid/icu/util/ULocale;,,,,,,,,,,,,,,,,,,,
Landroid/inputmethodservice/InputMethodService$SettingsObserver;->shouldShowImeWithHardKeyboard()Z,,,,,,,,,,,,,,,,,,,
Landroid/inputmethodservice/InputMethodService;->mSettingsObserver:Landroid/inputmethodservice/InputMethodService$SettingsObserver;,,,,,,,,,,,,,,,,,,,
Landroid/location/ICountryDetector$Stub;->asInterface(Landroid/os/IBinder;)Landroid/location/ICountryDetector;,,,,,,,,,,,,,,,,,,,
Landroid/location/IGeofenceProvider$Stub;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/location/IGeofenceProvider;->setGeofenceHardware(Landroid/hardware/location/IGeofenceHardware;)V,,,,,,,,,,,,,,,,,,,
Landroid/location/ILocationManager$Stub;->TRANSACTION_getAllProviders:I,,,,,,,,,,,,,,,,,,,
Landroid/location/Location;->mElapsedRealtimeNanos:J,,,,,,,,,,,,,,,,,,,
Landroid/Manifest$permission;->CAPTURE_SECURE_VIDEO_OUTPUT:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/Manifest$permission;->CAPTURE_VIDEO_OUTPUT:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/Manifest$permission;->READ_FRAME_BUFFER:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/media/AudioAttributes;->mFormattedTags:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/media/AudioAttributes;->mUsage:I,,,,,,,,,,,,,,,,,,,
Landroid/media/AudioDevicePortConfig;-><init>(Landroid/media/AudioDevicePort;IIILandroid/media/AudioGainConfig;)V,,,,,,,,,,,,,,,,,,,
Landroid/media/AudioDevicePort;-><init>(Landroid/media/AudioHandle;Ljava/lang/String;[I[I[I[I[Landroid/media/AudioGain;ILjava/lang/String;[I[I)V,,,,,,,,,,,,,,,,,,,
Landroid/media/AudioFormat;-><init>(IIII)V,,,,,,,,,,,,,,,,,,,
Landroid/media/AudioFormat;->mChannelMask:I,,,,,,,,,,,,,,,,,,,
Landroid/media/AudioFormat;->mEncoding:I,,,,,,,,,,,,,,,,,,,
Landroid/media/AudioFormat;->mSampleRate:I,,,,,,,,,,,,,,,,,,,
Landroid/media/audiofx/AudioEffect;->getParameter([I[B)I,,,,,,,,,,,,,,,,,,,
Landroid/media/audiofx/AudioEffect;->getParameter([I[I)I,,,,,,,,,,,,,,,,,,,
Landroid/media/AudioGain;-><init>(IIIIIIIII)V,,,,,,,,,,,,,,,,,,,
Landroid/media/AudioHandle;-><init>(I)V,,,,,,,,,,,,,,,,,,,
Landroid/media/AudioManager;->abandonAudioFocusForCall()V,,,,,,,,,,,,,,,,,,,
Landroid/media/AudioManager;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/media/AudioManager;->isMusicActiveRemotely()Z,,,,,,,,,,,,,,,,,,,
Landroid/media/AudioManager;->isValidRingerMode(I)Z,,,,,,,,,,,,,,,,,,,
Landroid/media/AudioManager;->NUM_SOUND_EFFECTS:I,,,,,,,,,,,,,,,,,,,
Landroid/media/AudioManager;->reloadAudioSettings()V,,,,,,,,,,,,,,,,,,,
Landroid/media/AudioManager;->requestAudioFocusForCall(II)V,,,,,,,,,,,,,,,,,,,
Landroid/media/AudioManager;->setMicrophoneMuteFromSwitch(Z)V,,,,,,,,,,,,,,,,,,,
Landroid/media/AudioManager;->startBluetoothScoVirtualCall()V,,,,,,,,,,,,,,,,,,,
Landroid/media/AudioMixPortConfig;-><init>(Landroid/media/AudioMixPort;IIILandroid/media/AudioGainConfig;)V,,,,,,,,,,,,,,,,,,,
Landroid/media/AudioMixPort;-><init>(Landroid/media/AudioHandle;IILjava/lang/String;[I[I[I[I[Landroid/media/AudioGain;)V,,,,,,,,,,,,,,,,,,,
Landroid/media/AudioMixPort;->ioHandle()I,,,,,,,,,,,,,,,,,,,
Landroid/media/AudioPatch;-><init>(Landroid/media/AudioHandle;[Landroid/media/AudioPortConfig;[Landroid/media/AudioPortConfig;)V,,,,,,,,,,,,,,,,,,,
Landroid/media/audiopolicy/AudioMixingRule$AudioMixMatchCriterion;->mAttr:Landroid/media/AudioAttributes;,,,,,,,,,,,,,,,,,,,
Landroid/media/audiopolicy/AudioMixingRule$AudioMixMatchCriterion;->mIntProp:I,,,,,,,,,,,,,,,,,,,
Landroid/media/audiopolicy/AudioMixingRule$AudioMixMatchCriterion;->mRule:I,,,,,,,,,,,,,,,,,,,
Landroid/media/audiopolicy/AudioMixingRule;->mAllowPrivilegedPlaybackCapture:Z,,,,,,,,,,,,,,,,,,,
Landroid/media/audiopolicy/AudioMixingRule;->mCriteria:Ljava/util/ArrayList;,,,,,,,,,,,,,,,,,,,
Landroid/media/audiopolicy/AudioMixingRule;->mVoiceCommunicationCaptureAllowed:Z,,,,,,,,,,,,,,,,,,,
Landroid/media/audiopolicy/AudioMix;->mCallbackFlags:I,,,,,,,,,,,,,,,,,,,
Landroid/media/audiopolicy/AudioMix;->mDeviceAddress:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/media/audiopolicy/AudioMix;->mDeviceSystemType:I,,,,,,,,,,,,,,,,,,,
Landroid/media/audiopolicy/AudioMix;->mFormat:Landroid/media/AudioFormat;,,,,,,,,,,,,,,,,,,,
Landroid/media/audiopolicy/AudioMix;->mMixType:I,,,,,,,,,,,,,,,,,,,
Landroid/media/audiopolicy/AudioMix;->mRouteFlags:I,,,,,,,,,,,,,,,,,,,
Landroid/media/audiopolicy/AudioMix;->mRule:Landroid/media/audiopolicy/AudioMixingRule;,,,,,,,,,,,,,,,,,,,
Landroid/media/AudioPortConfig;->mConfigMask:I,,,,,,,,,,,,,,,,,,,
Landroid/media/AudioPortEventHandler;->mJniCallback:J,,,,,,,,,,,,,,,,,,,
Landroid/media/AudioPortEventHandler;->postEventFromNative(Ljava/lang/Object;IIILjava/lang/Object;)V,,,,,,,,,,,,,,,,,,,
Landroid/media/AudioPort;-><init>(Landroid/media/AudioHandle;ILjava/lang/String;[I[I[I[I[Landroid/media/AudioGain;)V,,,,,,,,,,,,,,,,,,,
Landroid/media/AudioPort;->role()I,,,,,,,,,,,,,,,,,,,
Landroid/media/AudioRecordingConfiguration;->getClientPackageName()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/media/AudioRecord;->mAudioAttributes:Landroid/media/AudioAttributes;,,,,,,,,,,,,,,,,,,,
Landroid/media/AudioRecord;->mNativeCallbackCookie:J,,,,,,,,,,,,,,,,,,,
Landroid/media/AudioRecord;->mNativeDeviceCallback:J,,,,,,,,,,,,,,,,,,,
Landroid/media/AudioRecord;->postEventFromNative(Ljava/lang/Object;IIILjava/lang/Object;)V,,,,,,,,,,,,,,,,,,,
Landroid/media/AudioSystem;->dynamicPolicyCallbackFromNative(ILjava/lang/String;I)V,,,,,,,,,,,,,,,,,,,
Landroid/media/AudioSystem;->getMasterMute()Z,,,,,,,,,,,,,,,,,,,
Landroid/media/AudioSystem;->recordingCallbackFromNative(IIIIIIZ[I[Landroid/media/audiofx/AudioEffect$Descriptor;[Landroid/media/audiofx/AudioEffect$Descriptor;I)V,,,,,,,,,,,,,,,,,,,
Landroid/media/AudioSystem;->STREAM_SYSTEM_ENFORCED:I,,,,,,,,,,,,,,,,,,,
Landroid/media/AudioTrack;->deferred_connect(J)V,,,,,,,,,,,,,,,,,,,
Landroid/media/AudioTrack;->mJniData:J,,,,,,,,,,,,,,,,,,,
Landroid/media/AudioTrack;->postEventFromNative(Ljava/lang/Object;IIILjava/lang/Object;)V,,,,,,,,,,,,,,,,,,,
Landroid/media/CamcorderProfile;->native_get_camcorder_profile(II)Landroid/media/CamcorderProfile;,,,,,,,,,,,,,,,,,,,
Landroid/media/EncoderCapabilities$VideoEncoderCap;->mCodec:I,,,,,,,,,,,,,,,,,,,
Landroid/media/EncoderCapabilities$VideoEncoderCap;->mMaxFrameHeight:I,,,,,,,,,,,,,,,,,,,
Landroid/media/EncoderCapabilities$VideoEncoderCap;->mMaxFrameWidth:I,,,,,,,,,,,,,,,,,,,
Landroid/media/EncoderCapabilities$VideoEncoderCap;->mMinFrameHeight:I,,,,,,,,,,,,,,,,,,,
Landroid/media/EncoderCapabilities$VideoEncoderCap;->mMinFrameWidth:I,,,,,,,,,,,,,,,,,,,
Landroid/media/EncoderCapabilities;->getVideoEncoders()Ljava/util/List;,,,,,,,,,,,,,,,,,,,
Landroid/media/IAudioService;->setStreamVolume(IIILjava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Landroid/media/IRemoteDisplayCallback;->onStateChanged(Landroid/media/RemoteDisplayState;)V,,,,,,,,,,,,,,,,,,,
Landroid/media/IVolumeController$Stub;->asInterface(Landroid/os/IBinder;)Landroid/media/IVolumeController;,,,,,,,,,,,,,,,,,,,
Landroid/media/JetPlayer;->mNativePlayerInJavaObj:J,,,,,,,,,,,,,,,,,,,
Landroid/media/JetPlayer;->postEventFromNative(Ljava/lang/Object;III)V,,,,,,,,,,,,,,,,,,,
Landroid/media/MediaMetadata;->getKeyFromMetadataEditorKey(I)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/media/MediaMuxer;->mCloseGuard:Ldalvik/system/CloseGuard;,,,,,,,,,,,,,,,,,,,
Landroid/media/MediaMuxer;->mNativeObject:J,,,,,,,,,,,,,,,,,,,
Landroid/media/MediaMuxer;->mState:I,,,,,,,,,,,,,,,,,,,
Landroid/media/MediaMuxer;->MUXER_STATE_STARTED:I,,,,,,,,,,,,,,,,,,,
Landroid/media/MediaMuxer;->MUXER_STATE_STOPPED:I,,,,,,,,,,,,,,,,,,,
Landroid/media/MediaMuxer;->MUXER_STATE_UNINITIALIZED:I,,,,,,,,,,,,,,,,,,,
Landroid/media/MediaMuxer;->nativeRelease(J)V,,,,,,,,,,,,,,,,,,,
Landroid/media/MediaMuxer;->nativeSetup(Ljava/io/FileDescriptor;I)J,,,,,,,,,,,,,,,,,,,
Landroid/media/MediaPlayer;->MEDIA_INFO_EXTERNAL_METADATA_UPDATE:I,,,,,,,,,,,,,,,,,,,
Landroid/media/MediaPlayer;->MEDIA_INFO_TIMED_TEXT_ERROR:I,,,,,,,,,,,,,,,,,,,
Landroid/media/MediaPlayer;->setDataSource(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Ljava/util/List;)V,,,,,,,,,,,,,,,,,,,
Landroid/media/MediaPlayer;->setDataSource(Ljava/lang/String;Ljava/util/Map;Ljava/util/List;)V,,,,,,,,,,,,,,,,,,,
Landroid/media/MediaRecorder;->mSurface:Landroid/view/Surface;,,,,,,,,,,,,,,,,,,,
Landroid/media/MediaRouter$RouteInfo;->getName(Landroid/content/res/Resources;)Ljava/lang/CharSequence;,,,,,,,,,,,,,,,,,,,
Landroid/media/MediaRouter;->getSelectedRoute()Landroid/media/MediaRouter$RouteInfo;,,,,,,,,,,,,,,,,,,,
Landroid/media/MicrophoneInfo;-><init>(Ljava/lang/String;ILjava/lang/String;IIILandroid/media/MicrophoneInfo$Coordinate3F;Landroid/media/MicrophoneInfo$Coordinate3F;Ljava/util/List;Ljava/util/List;FFFI)V,,,,,,,,,,,,,,,,,,,
Landroid/media/PlaybackParams;->mAudioFallbackMode:I,,,,,,,,,,,,,,,,,,,
Landroid/media/PlaybackParams;->mAudioStretchMode:I,,,,,,,,,,,,,,,,,,,
Landroid/media/PlaybackParams;->mPitch:F,,,,,,,,,,,,,,,,,,,
Landroid/media/PlaybackParams;->SET_AUDIO_FALLBACK_MODE:I,,,,,,,,,,,,,,,,,,,
Landroid/media/PlaybackParams;->SET_AUDIO_STRETCH_MODE:I,,,,,,,,,,,,,,,,,,,
Landroid/media/PlaybackParams;->SET_PITCH:I,,,,,,,,,,,,,,,,,,,
Landroid/media/PlaybackParams;->SET_SPEED:I,,,,,,,,,,,,,,,,,,,
Landroid/media/RemoteControlClient;->MEDIA_POSITION_READABLE:I,,,,,,,,,,,,,,,,,,,
Landroid/media/RemoteControlClient;->MEDIA_POSITION_WRITABLE:I,,,,,,,,,,,,,,,,,,,
Landroid/media/RemoteController;->mCurrentSession:Landroid/media/session/MediaController;,,,,,,,,,,,,,,,,,,,
Landroid/media/RemoteDisplay;->notifyDisplayConnected(Landroid/view/Surface;IIII)V,,,,,,,,,,,,,,,,,,,
Landroid/media/RemoteDisplay;->notifyDisplayDisconnected()V,,,,,,,,,,,,,,,,,,,
Landroid/media/RemoteDisplay;->notifyDisplayError(I)V,,,,,,,,,,,,,,,,,,,
Landroid/media/RemoteDisplayState;->displays:Ljava/util/ArrayList;,,,,,,,,,,,,,,,,,,,
Landroid/media/RemoteDisplayState;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/media/RingtoneManager;->getMediaRingtones(Landroid/content/Context;)Landroid/database/Cursor;,,,,,,,,,,,,,,,,,,,
Landroid/media/RingtoneManager;->getRingtone(Landroid/content/Context;Landroid/net/Uri;ILandroid/media/VolumeShaper$Configuration;)Landroid/media/Ringtone;,,,,,,,,,,,,,,,,,,,
Landroid/media/Ringtone;->mLocalPlayer:Landroid/media/MediaPlayer;,,,,,,,,,,,,,,,,,,,
Landroid/media/session/MediaSession$QueueItem;->mId:J,,,,,,,,,,,,,,,,,,,
Landroid/media/soundtrigger/SoundTriggerDetector$EventPayload;->getCaptureSession()Ljava/lang/Integer;,,,,,,,,,,,,,,,,,,,
Landroid/media/soundtrigger/SoundTriggerDetector$EventPayload;->getData()[B,,,,,,,,,,,,,,,,,,,
Landroid/media/soundtrigger/SoundTriggerManager;->stopRecognition(Ljava/util/UUID;)I,,,,,,,,,,,,,,,,,,,
Landroid/media/soundtrigger/SoundTriggerManager;->unloadSoundModel(Ljava/util/UUID;)I,,,,,,,,,,,,,,,,,,,
Landroid/media/TimedText;->getObject(I)Ljava/lang/Object;,,,,,,,,,,,,,,,,,,,
Landroid/media/ToneGenerator;->mNativeContext:J,,,,,,,,,,,,,,,,,,,
Landroid/media/TtmlRenderer;-><init>(Landroid/content/Context;)V,,,,,,,,,,,,,,,,,,,
Landroid/media/tv/TvInputInfo;->getComponent()Landroid/content/ComponentName;,,,,,,,,,,,,,,,,,,,
Landroid/media/tv/TvInputService$Session;->mOverlayFrame:Landroid/graphics/Rect;,,,,,,,,,,,,,,,,,,,
Landroid/media/VolumeShaper$Configuration;-><init>(IIIDI[F[F)V,,,,,,,,,,,,,,,,,,,
Landroid/media/VolumeShaper$Configuration;->mDurationMs:D,,,,,,,,,,,,,,,,,,,
Landroid/media/VolumeShaper$Configuration;->mId:I,,,,,,,,,,,,,,,,,,,
Landroid/media/VolumeShaper$Configuration;->mInterpolatorType:I,,,,,,,,,,,,,,,,,,,
Landroid/media/VolumeShaper$Configuration;->mOptionFlags:I,,,,,,,,,,,,,,,,,,,
Landroid/media/VolumeShaper$Configuration;->mTimes:[F,,,,,,,,,,,,,,,,,,,
Landroid/media/VolumeShaper$Configuration;->mType:I,,,,,,,,,,,,,,,,,,,
Landroid/media/VolumeShaper$Configuration;->mVolumes:[F,,,,,,,,,,,,,,,,,,,
Landroid/media/VolumeShaper$Operation;-><init>(IIF)V,,,,,,,,,,,,,,,,,,,
Landroid/media/VolumeShaper$Operation;->mFlags:I,,,,,,,,,,,,,,,,,,,
Landroid/media/VolumeShaper$Operation;->mReplaceId:I,,,,,,,,,,,,,,,,,,,
Landroid/media/VolumeShaper$Operation;->mXOffset:F,,,,,,,,,,,,,,,,,,,
Landroid/media/VolumeShaper$State;-><init>(FF)V,,,,,,,,,,,,,,,,,,,
Landroid/media/VolumeShaper$State;->mVolume:F,,,,,,,,,,,,,,,,,,,
Landroid/media/VolumeShaper$State;->mXOffset:F,,,,,,,,,,,,,,,,,,,
Landroid/net/ConnectivityManager$PacketKeepaliveCallback;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/net/ConnectivityManager$PacketKeepaliveCallback;->onError(I)V,,,,,,,,,,,,,,,,,,,
Landroid/net/ConnectivityManager$PacketKeepaliveCallback;->onStarted()V,,,,,,,,,,,,,,,,,,,
Landroid/net/ConnectivityManager$PacketKeepaliveCallback;->onStopped()V,,,,,,,,,,,,,,,,,,,
Landroid/net/ConnectivityManager$PacketKeepalive;->stop()V,,,,,,,,,,,,,,,,,,,
Landroid/net/ConnectivityManager;->ACTION_TETHER_STATE_CHANGED:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/net/ConnectivityManager;->EXTRA_ACTIVE_TETHER:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/net/ConnectivityManager;->EXTRA_AVAILABLE_TETHER:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/net/ConnectivityManager;->EXTRA_ERRORED_TETHER:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/net/ConnectivityManager;->getActiveNetworkInfoForUid(I)Landroid/net/NetworkInfo;,,,,,,,,,,,,,,,,,,,
Landroid/net/ConnectivityManager;->getActiveNetworkQuotaInfo()Landroid/net/NetworkQuotaInfo;,,,,,,,,,,,,,,,,,,,
Landroid/net/ConnectivityManager;->getLastTetherError(Ljava/lang/String;)I,,,,,,,,,,,,,,,,,,,
Landroid/net/ConnectivityManager;->getNetworkTypeName(I)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/net/ConnectivityManager;->networkCapabilitiesForFeature(ILjava/lang/String;)Landroid/net/NetworkCapabilities;,,,,,,,,,,,,,,,,,,,
Landroid/net/ConnectivityManager;->removeRequestForFeature(Landroid/net/NetworkCapabilities;)Z,,,,,,,,,,,,,,,,,,,
Landroid/net/ConnectivityManager;->requestNetworkForFeatureLocked(Landroid/net/NetworkCapabilities;)Landroid/net/NetworkRequest;,,,,,,,,,,,,,,,,,,,
Landroid/net/ConnectivityManager;->setProcessDefaultNetworkForHostResolution(Landroid/net/Network;)Z,,,,,,,,,,,,,,,,,,,
Landroid/net/ConnectivityManager;->sLegacyRequests:Ljava/util/HashMap;,,,,,,,,,,,,,,,,,,,
Landroid/net/ConnectivityManager;->startNattKeepalive(Landroid/net/Network;ILandroid/net/ConnectivityManager$PacketKeepaliveCallback;Ljava/net/InetAddress;ILjava/net/InetAddress;)Landroid/net/ConnectivityManager$PacketKeepalive;,,,,,,,,,,,,,,,,,,,
Landroid/net/ConnectivityManager;->tether(Ljava/lang/String;)I,,,,,,,,,,,,,,,,,,,
Landroid/net/DhcpResults;->dnsServers:Ljava/util/ArrayList;,,,,,,,,,,,,,,,,,,,
Landroid/net/DhcpResults;->domains:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/net/DhcpResults;->gateway:Ljava/net/InetAddress;,,,,,,,,,,,,,,,,,,,
Landroid/net/DhcpResults;->ipAddress:Landroid/net/LinkAddress;,,,,,,,,,,,,,,,,,,,
Landroid/net/DhcpResults;->leaseDuration:I,,,,,,,,,,,,,,,,,,,
Landroid/net/DhcpResults;->mtu:I,,,,,,,,,,,,,,,,,,,
Landroid/net/DhcpResults;->serverAddress:Ljava/net/Inet4Address;,,,,,,,,,,,,,,,,,,,
Landroid/net/DhcpResults;->vendorInfo:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/net/EthernetManager$Listener;->onAvailabilityChanged(Ljava/lang/String;Z)V,,,,,,,,,,,,,,,,,,,
Landroid/net/EthernetManager;->addListener(Landroid/net/EthernetManager$Listener;)V,,,,,,,,,,,,,,,,,,,
Landroid/net/EthernetManager;->getAvailableInterfaces()[Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/net/EthernetManager;->getConfiguration(Ljava/lang/String;)Landroid/net/IpConfiguration;,,,,,,,,,,,,,,,,,,,
Landroid/net/EthernetManager;->isAvailable(Ljava/lang/String;)Z,,,,,,,,,,,,,,,,,,,
Landroid/net/EthernetManager;->isAvailable()Z,,,,,,,,,,,,,,,,,,,
Landroid/net/EthernetManager;->removeListener(Landroid/net/EthernetManager$Listener;)V,,,,,,,,,,,,,,,,,,,
Landroid/net/EthernetManager;->setConfiguration(Ljava/lang/String;Landroid/net/IpConfiguration;)V,,,,,,,,,,,,,,,,,,,
Landroid/net/IConnectivityManager;->getAllNetworkState()[Landroid/net/NetworkState;,,,,,,,,,,,,,,,,,,,
Landroid/net/IConnectivityManager;->startLegacyVpn(Lcom/android/internal/net/VpnProfile;)V,,,,,,,,,,,,,,,,,,,
Landroid/net/INetworkPolicyListener$Stub;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/net/INetworkPolicyManager;->getNetworkQuotaInfo(Landroid/net/NetworkState;)Landroid/net/NetworkQuotaInfo;,,,,,,,,,,,,,,,,,,,
Landroid/net/INetworkStatsService;->openSessionForUsageStats(ILjava/lang/String;)Landroid/net/INetworkStatsSession;,,,,,,,,,,,,,,,,,,,
Landroid/net/IpConfiguration;-><init>(Landroid/net/IpConfiguration$IpAssignment;Landroid/net/IpConfiguration$ProxySettings;Landroid/net/StaticIpConfiguration;Landroid/net/ProxyInfo;)V,,,,,,,,,,,,,,,,,,,
Landroid/net/LinkProperties;->compareProvisioning(Landroid/net/LinkProperties;Landroid/net/LinkProperties;)Landroid/net/LinkProperties$ProvisioningChange;,,,,,,,,,,,,,,,,,,,
Landroid/net/LinkProperties;->getStackedLinks()Ljava/util/List;,,,,,,,,,,,,,,,,,,,
Landroid/net/LinkProperties;->isIdenticalStackedLinks(Landroid/net/LinkProperties;)Z,,,,,,,,,,,,,,,,,,,
Landroid/net/LinkQualityInfo;->setDataSampleDuration(I)V,,,,,,,,,,,,,,,,,,,
Landroid/net/LinkQualityInfo;->setLastDataSampleTime(J)V,,,,,,,,,,,,,,,,,,,
Landroid/net/LinkQualityInfo;->setPacketCount(J)V,,,,,,,,,,,,,,,,,,,
Landroid/net/LinkQualityInfo;->setPacketErrorCount(J)V,,,,,,,,,,,,,,,,,,,
Landroid/net/LocalSocketImpl;->outboundFileDescriptors:[Ljava/io/FileDescriptor;,,,,,,,,,,,,,,,,,,,
Landroid/net/MacAddress;->ALL_ZEROS_ADDRESS:Landroid/net/MacAddress;,,,,,,,,,,,,,,,,,,,
Landroid/net/metrics/ApfProgramEvent;->actualLifetime:J,,,,,,,,,,,,,,,,,,,
Landroid/net/metrics/ApfProgramEvent;->currentRas:I,,,,,,,,,,,,,,,,,,,
Landroid/net/metrics/ApfProgramEvent;->filteredRas:I,,,,,,,,,,,,,,,,,,,
Landroid/net/metrics/ApfProgramEvent;->flagsFor(ZZ)I,,,,,,,,,,,,,,,,,,,
Landroid/net/metrics/ApfProgramEvent;->flags:I,,,,,,,,,,,,,,,,,,,
Landroid/net/metrics/ApfProgramEvent;->lifetime:J,,,,,,,,,,,,,,,,,,,
Landroid/net/metrics/ApfProgramEvent;->programLength:I,,,,,,,,,,,,,,,,,,,
Landroid/net/metrics/ApfStats;->droppedRas:I,,,,,,,,,,,,,,,,,,,
Landroid/net/metrics/ApfStats;->durationMs:J,,,,,,,,,,,,,,,,,,,
Landroid/net/metrics/ApfStats;->matchingRas:I,,,,,,,,,,,,,,,,,,,
Landroid/net/metrics/ApfStats;->maxProgramSize:I,,,,,,,,,,,,,,,,,,,
Landroid/net/metrics/ApfStats;->parseErrors:I,,,,,,,,,,,,,,,,,,,
Landroid/net/metrics/ApfStats;->programUpdatesAll:I,,,,,,,,,,,,,,,,,,,
Landroid/net/metrics/ApfStats;->programUpdatesAllowingMulticast:I,,,,,,,,,,,,,,,,,,,
Landroid/net/metrics/ApfStats;->programUpdates:I,,,,,,,,,,,,,,,,,,,
Landroid/net/metrics/ApfStats;->receivedRas:I,,,,,,,,,,,,,,,,,,,
Landroid/net/metrics/ApfStats;->zeroLifetimeRas:I,,,,,,,,,,,,,,,,,,,
Landroid/net/metrics/DhcpClientEvent;-><init>(Ljava/lang/String;I)V,,,,,,,,,,,,,,,,,,,
Landroid/net/MobileLinkQualityInfo;->getMobileNetworkType()I,,,,,,,,,,,,,,,,,,,
Landroid/net/MobileLinkQualityInfo;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/net/MobileLinkQualityInfo;->setCdmaDbm(I)V,,,,,,,,,,,,,,,,,,,
Landroid/net/MobileLinkQualityInfo;->setCdmaEcio(I)V,,,,,,,,,,,,,,,,,,,
Landroid/net/MobileLinkQualityInfo;->setEvdoDbm(I)V,,,,,,,,,,,,,,,,,,,
Landroid/net/MobileLinkQualityInfo;->setEvdoEcio(I)V,,,,,,,,,,,,,,,,,,,
Landroid/net/MobileLinkQualityInfo;->setEvdoSnr(I)V,,,,,,,,,,,,,,,,,,,
Landroid/net/MobileLinkQualityInfo;->setGsmErrorRate(I)V,,,,,,,,,,,,,,,,,,,
Landroid/net/MobileLinkQualityInfo;->setLteCqi(I)V,,,,,,,,,,,,,,,,,,,
Landroid/net/MobileLinkQualityInfo;->setLteRsrp(I)V,,,,,,,,,,,,,,,,,,,
Landroid/net/MobileLinkQualityInfo;->setLteRsrq(I)V,,,,,,,,,,,,,,,,,,,
Landroid/net/MobileLinkQualityInfo;->setLteRssnr(I)V,,,,,,,,,,,,,,,,,,,
Landroid/net/MobileLinkQualityInfo;->setLteSignalStrength(I)V,,,,,,,,,,,,,,,,,,,
Landroid/net/MobileLinkQualityInfo;->setMobileNetworkType(I)V,,,,,,,,,,,,,,,,,,,
Landroid/net/MobileLinkQualityInfo;->setRssi(I)V,,,,,,,,,,,,,,,,,,,
Landroid/net/NetworkCapabilities;->hasSignalStrength()Z,,,,,,,,,,,,,,,,,,,
Landroid/net/NetworkCapabilities;->mNetworkCapabilities:J,,,,,,,,,,,,,,,,,,,
Landroid/net/NetworkCapabilities;->transportNamesOf([I)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/net/Network;-><init>(I)V,,,,,,,,,,,,,,,,,,,
Landroid/net/NetworkPolicyManager;->getRestrictBackground()Z,,,,,,,,,,,,,,,,,,,
Landroid/net/NetworkPolicyManager;->getUidPolicy(I)I,,,,,,,,,,,,,,,,,,,
Landroid/net/NetworkPolicyManager;->setRestrictBackground(Z)V,,,,,,,,,,,,,,,,,,,
Landroid/net/NetworkQuotaInfo;->getEstimatedBytes()J,,,,,,,,,,,,,,,,,,,
Landroid/net/NetworkQuotaInfo;->getHardLimitBytes()J,,,,,,,,,,,,,,,,,,,
Landroid/net/NetworkQuotaInfo;->getSoftLimitBytes()J,,,,,,,,,,,,,,,,,,,
Landroid/net/NetworkRequest;->networkCapabilities:Landroid/net/NetworkCapabilities;,,,,,,,,,,,,,,,,,,,
Landroid/net/NetworkRequest;->requestId:I,,,,,,,,,,,,,,,,,,,
Landroid/net/NetworkStats$Entry;->iface:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/net/NetworkStats$Entry;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/net/NetworkStats$Entry;->operations:J,,,,,,,,,,,,,,,,,,,
Landroid/net/NetworkStats$Entry;->rxPackets:J,,,,,,,,,,,,,,,,,,,
Landroid/net/NetworkStats$Entry;->tag:I,,,,,,,,,,,,,,,,,,,
Landroid/net/NetworkStats$Entry;->txPackets:J,,,,,,,,,,,,,,,,,,,
Landroid/net/NetworkStats;->capacity:I,,,,,,,,,,,,,,,,,,,
Landroid/net/NetworkStats;->defaultNetwork:[I,,,,,,,,,,,,,,,,,,,
Landroid/net/NetworkStatsHistory$Entry;->bucketDuration:J,,,,,,,,,,,,,,,,,,,
Landroid/net/NetworkStatsHistory$Entry;->bucketStart:J,,,,,,,,,,,,,,,,,,,
Landroid/net/NetworkStatsHistory$Entry;->rxPackets:J,,,,,,,,,,,,,,,,,,,
Landroid/net/NetworkStatsHistory$Entry;->txPackets:J,,,,,,,,,,,,,,,,,,,
Landroid/net/NetworkStatsHistory;->getIndexBefore(J)I,,,,,,,,,,,,,,,,,,,
Landroid/net/NetworkStatsHistory;->getValues(ILandroid/net/NetworkStatsHistory$Entry;)Landroid/net/NetworkStatsHistory$Entry;,,,,,,,,,,,,,,,,,,,
Landroid/net/NetworkStatsHistory;-><init>(Landroid/os/Parcel;)V,,,,,,,,,,,,,,,,,,,
Landroid/net/NetworkStatsHistory;->size()I,,,,,,,,,,,,,,,,,,,
Landroid/net/NetworkStats;->iface:[Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/net/NetworkStats;-><init>(Landroid/os/Parcel;)V,,,,,,,,,,,,,,,,,,,
Landroid/net/NetworkStats;->metered:[I,,,,,,,,,,,,,,,,,,,
Landroid/net/NetworkStats;->operations:[J,,,,,,,,,,,,,,,,,,,
Landroid/net/NetworkStats;->roaming:[I,,,,,,,,,,,,,,,,,,,
Landroid/net/NetworkStats;->rxPackets:[J,,,,,,,,,,,,,,,,,,,
Landroid/net/NetworkStats;->size:I,,,,,,,,,,,,,,,,,,,
Landroid/net/NetworkStats;->txPackets:[J,,,,,,,,,,,,,,,,,,,
Landroid/net/NetworkTemplate;->buildTemplateMobileWildcard()Landroid/net/NetworkTemplate;,,,,,,,,,,,,,,,,,,,
Landroid/net/NetworkUtils;->getImplicitNetmask(Ljava/net/Inet4Address;)I,,,,,,,,,,,,,,,,,,,
Landroid/net/NetworkUtils;->netmaskToPrefixLength(Ljava/net/Inet4Address;)I,,,,,,,,,,,,,,,,,,,
Landroid/net/NetworkUtils;->protectFromVpn(Ljava/io/FileDescriptor;)Z,,,,,,,,,,,,,,,,,,,
Landroid/net/nsd/INsdManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/net/nsd/INsdManager;,,,,,,,,,,,,,,,,,,,
Landroid/net/nsd/INsdManager;->getMessenger()Landroid/os/Messenger;,,,,,,,,,,,,,,,,,,,
Landroid/net/Proxy;->setHttpProxySystemProperty(Landroid/net/ProxyInfo;)V,,,,,,,,,,,,,,,,,,,
Landroid/net/RouteInfo;-><init>(Landroid/net/IpPrefix;Ljava/net/InetAddress;Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Landroid/net/RouteInfo;->selectBestRoute(Ljava/util/Collection;Ljava/net/InetAddress;)Landroid/net/RouteInfo;,,,,,,,,,,,,,,,,,,,
Landroid/net/sip/ISipSession$Stub;->asInterface(Landroid/os/IBinder;)Landroid/net/sip/ISipSession;,,,,,,,,,,,,,,,,,,,
Landroid/net/SSLCertificateSocketFactory;->castToOpenSSLSocket(Ljava/net/Socket;)Lcom/android/org/conscrypt/OpenSSLSocketImpl;,,,,,,,,,,,,,,,,,,,
Landroid/net/SSLCertificateSocketFactory;->makeSocketFactory([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;)Ljavax/net/ssl/SSLSocketFactory;,,,,,,,,,,,,,,,,,,,
Landroid/net/SSLCertificateSocketFactory;->mAlpnProtocols:[B,,,,,,,,,,,,,,,,,,,
Landroid/net/SSLCertificateSocketFactory;->mChannelIdPrivateKey:Ljava/security/PrivateKey;,,,,,,,,,,,,,,,,,,,
Landroid/net/SSLCertificateSocketFactory;->mKeyManagers:[Ljavax/net/ssl/KeyManager;,,,,,,,,,,,,,,,,,,,
Landroid/net/SSLCertificateSocketFactory;->mNpnProtocols:[B,,,,,,,,,,,,,,,,,,,
Landroid/net/SSLCertificateSocketFactory;->mSessionCache:Lcom/android/org/conscrypt/SSLClientSessionCache;,,,,,,,,,,,,,,,,,,,
Landroid/net/SSLCertificateSocketFactory;->mTrustManagers:[Ljavax/net/ssl/TrustManager;,,,,,,,,,,,,,,,,,,,
Landroid/net/SSLCertificateSocketFactory;->setAlpnProtocols([[B)V,,,,,,,,,,,,,,,,,,,
Landroid/net/SSLCertificateSocketFactory;->setSoWriteTimeout(Ljava/net/Socket;I)V,,,,,,,,,,,,,,,,,,,
Landroid/net/StaticIpConfiguration;->dnsServers:Ljava/util/ArrayList;,,,,,,,,,,,,,,,,,,,
Landroid/net/StaticIpConfiguration;->domains:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/net/StaticIpConfiguration;->gateway:Ljava/net/InetAddress;,,,,,,,,,,,,,,,,,,,
Landroid/net/StaticIpConfiguration;->ipAddress:Landroid/net/LinkAddress;,,,,,,,,,,,,,,,,,,,
Landroid/net/TrafficStats;->getMobileTcpRxPackets()J,,,,,,,,,,,,,,,,,,,
Landroid/net/TrafficStats;->getMobileTcpTxPackets()J,,,,,,,,,,,,,,,,,,,
Landroid/net/WebAddress;->getAuthInfo()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/net/WebAddress;->setHost(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Landroid/net/wifi/IWifiManager$Stub;->TRANSACTION_getScanResults:I,否,,,,,,,,,,,,,,,,,,
Landroid/net/wifi/IWifiManager;->getCurrentNetwork()Landroid/net/Network;,否,,,,,,,,,,,,,,,,,,
Landroid/net/wifi/p2p/IWifiP2pManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/net/wifi/p2p/IWifiP2pManager;,否,,,,,,,,,,,,,,,,,,
Landroid/net/wifi/p2p/nsd/WifiP2pServiceInfo;->CREATOR:Landroid/os/Parcelable$Creator;,否,,,,,,,,,,,,,,,,,,
Landroid/net/wifi/p2p/nsd/WifiP2pServiceRequest;->CREATOR:Landroid/os/Parcelable$Creator;,否,,,,,,,,,,,,,,,,,,
Landroid/net/wifi/p2p/WifiP2pConfig;->netId:I,否,,,,,,,,,,,,,,,,,,
Landroid/net/wifi/p2p/WifiP2pDevice;-><init>(Ljava/lang/String;)V,否,,,,,,,,,,,,,,,,,,
Landroid/net/wifi/p2p/WifiP2pDeviceList;->update(Landroid/net/wifi/p2p/WifiP2pDevice;)V,否,,,,,,,,,,,,,,,,,,
Landroid/net/wifi/p2p/WifiP2pManager$Channel;->putListener(Ljava/lang/Object;)I,否,,,,,,,,,,,,,,,,,,
Landroid/net/wifi/p2p/WifiP2pManager;->CREATE_GROUP:I,否,,,,,,,,,,,,,,,,,,
Landroid/net/wifi/p2p/WifiP2pManager;->setWFDInfo(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Landroid/net/wifi/p2p/WifiP2pWfdInfo;Landroid/net/wifi/p2p/WifiP2pManager$ActionListener;)V,否,,,,,,,,,,,,,,,,,,
Landroid/net/wifi/p2p/WifiP2pManager;->startWps(Landroid/net/wifi/p2p/WifiP2pManager$Channel;Landroid/net/wifi/WpsInfo;Landroid/net/wifi/p2p/WifiP2pManager$ActionListener;)V,否,,,,,,,,,,,,,,,,,,
Landroid/net/wifi/ScanResult$InformationElement;->EID_BSS_LOAD:I,否,,,,,,,,,,,,,,,,,,
Landroid/net/wifi/ScanResult$InformationElement;->EID_ERP:I,否,,,,,,,,,,,,,,,,,,
Landroid/net/wifi/ScanResult$InformationElement;->EID_EXTENDED_CAPS:I,否,,,,,,,,,,,,,,,,,,
Landroid/net/wifi/ScanResult$InformationElement;->EID_EXTENDED_SUPPORTED_RATES:I,否,,,,,,,,,,,,,,,,,,
Landroid/net/wifi/ScanResult$InformationElement;->EID_HT_OPERATION:I,否,,,,,,,,,,,,,,,,,,
Landroid/net/wifi/ScanResult$InformationElement;->EID_INTERWORKING:I,否,,,,,,,,,,,,,,,,,,
Landroid/net/wifi/ScanResult$InformationElement;->EID_ROAMING_CONSORTIUM:I,否,,,,,,,,,,,,,,,,,,
Landroid/net/wifi/ScanResult$InformationElement;->EID_RSN:I,否,,,,,,,,,,,,,,,,,,
Landroid/net/wifi/ScanResult$InformationElement;->EID_SSID:I,否,,,,,,,,,,,,,,,,,,
Landroid/net/wifi/ScanResult$InformationElement;->EID_SUPPORTED_RATES:I,否,,,,,,,,,,,,,,,,,,
Landroid/net/wifi/ScanResult$InformationElement;->EID_TIM:I,否,,,,,,,,,,,,,,,,,,
Landroid/net/wifi/ScanResult$InformationElement;->EID_VHT_OPERATION:I,否,,,,,,,,,,,,,,,,,,
Landroid/net/wifi/ScanResult$InformationElement;->EID_VSA:I,否,,,,,,,,,,,,,,,,,,
Landroid/net/wifi/ScanResult;->is80211McRTTResponder:Z,否,,,,,,,,,,,,,,,,,,
Landroid/net/wifi/WifiConfiguration;->noInternetAccessExpected:Z,否,,,,,,,,,,,,,,,,,,
Landroid/net/wifi/WifiConfiguration;->numNoInternetAccessReports:I,否,,,,,,,,,,,,,,,,,,
Landroid/net/wifi/WifiConfiguration;->selfAdded:Z,否,,,,,,,,,,,,,,,,,,
Landroid/net/wifi/WifiManager;->LINK_CONFIGURATION_CHANGED_ACTION:Ljava/lang/String;,否,,,,,,,,,,,,,,,,,,
Landroid/net/wifi/WifiManager;->RSSI_LEVELS:I,否,,,,,,,,,,,,,,,,,,
Landroid/nfc/INfcAdapter$Stub;->TRANSACTION_enable:I,,,,,,,,,,,,,,,,,,,
Landroid/nfc/INfcAdapterExtras;->authenticate(Ljava/lang/String;[B)V,,,,,,,,,,,,,,,,,,,
Landroid/nfc/INfcAdapterExtras;->close(Ljava/lang/String;Landroid/os/IBinder;)Landroid/os/Bundle;,,,,,,,,,,,,,,,,,,,
Landroid/nfc/INfcAdapterExtras;->getCardEmulationRoute(Ljava/lang/String;)I,,,,,,,,,,,,,,,,,,,
Landroid/nfc/INfcAdapterExtras;->getDriverName(Ljava/lang/String;)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/nfc/INfcAdapterExtras;->open(Ljava/lang/String;Landroid/os/IBinder;)Landroid/os/Bundle;,,,,,,,,,,,,,,,,,,,
Landroid/nfc/INfcAdapterExtras;->setCardEmulationRoute(Ljava/lang/String;I)V,,,,,,,,,,,,,,,,,,,
Landroid/nfc/INfcAdapterExtras;->transceive(Ljava/lang/String;[B)Landroid/os/Bundle;,,,,,,,,,,,,,,,,,,,
Landroid/nfc/NdefRecord;->mId:[B,,,,,,,,,,,,,,,,,,,
Landroid/nfc/NfcAdapter;->getNfcAdapterExtrasInterface()Landroid/nfc/INfcAdapterExtras;,,,,,,,,,,,,,,,,,,,
Landroid/nfc/Tag;->mId:[B,,,,,,,,,,,,,,,,,,,
Landroid/opengl/EGL14;->eglGetDisplay(J)Landroid/opengl/EGLDisplay;,,,,,,,,,,,,,,,,,,,
Landroid/os/BaseBundle;->isParcelled()Z,,,,,,,,,,,,,,,,,,,
Landroid/os/BatteryManager;->EXTRA_CHARGE_COUNTER:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/os/BatteryManager;->EXTRA_MAX_CHARGING_CURRENT:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/os/BatteryManager;->EXTRA_MAX_CHARGING_VOLTAGE:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/os/BatteryStats$Uid;->getWifiBatchedScanTime(IJI)J,,,,,,,,,,,,,,,,,,,
Landroid/os/BatteryStats;->WAKE_TYPE_PARTIAL:I,,,,,,,,,,,,,,,,,,,
Landroid/os/Broadcaster;->broadcast(Landroid/os/Message;)V,,,,,,,,,,,,,,,,,,,
Landroid/os/Broadcaster;->cancelRequest(ILandroid/os/Handler;I)V,,,,,,,,,,,,,,,,,,,
Landroid/os/Broadcaster;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/os/Broadcaster;->request(ILandroid/os/Handler;I)V,,,,,,,,,,,,,,,,,,,
Landroid/os/Bundle;->filterValues()Landroid/os/Bundle;,,,,,,,,,,,,,,,,,,,
Landroid/os/Bundle;->forPair(Ljava/lang/String;Ljava/lang/String;)Landroid/os/Bundle;,,,,,,,,,,,,,,,,,,,
Landroid/os/Bundle;->getSize()I,,,,,,,,,,,,,,,,,,,
Landroid/os/Debug$MemoryInfo;->dalvikRss:I,,,,,,,,,,,,,,,,,,,
Landroid/os/Debug$MemoryInfo;->dalvikSwappedOutPss:I,,,,,,,,,,,,,,,,,,,
Landroid/os/Debug$MemoryInfo;->hasSwappedOutPss:Z,,,,,,,,,,,,,,,,,,,
Landroid/os/Debug$MemoryInfo;->nativeRss:I,,,,,,,,,,,,,,,,,,,
Landroid/os/Debug$MemoryInfo;->nativeSwappedOutPss:I,,,,,,,,,,,,,,,,,,,
Landroid/os/Debug$MemoryInfo;->otherRss:I,,,,,,,,,,,,,,,,,,,
Landroid/os/Debug$MemoryInfo;->otherSwappedOutPss:I,,,,,,,,,,,,,,,,,,,
Landroid/os/Debug;->dumpNativeHeap(Ljava/io/FileDescriptor;)V,,,,,,,,,,,,,,,,,,,
Landroid/os/Debug;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/os/Environment;->buildExternalStorageAppObbDirs(Ljava/lang/String;)[Ljava/io/File;,,,,,,,,,,,,,,,,,,,
Landroid/os/Environment;->getLegacyExternalStorageObbDirectory()Ljava/io/File;,,,,,,,,,,,,,,,,,,,
Landroid/os/FileObserver$ObserverThread;->onEvent(IILjava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Landroid/os/FileUtils;->checksumCrc32(Ljava/io/File;)J,,,,,,,,,,,,,,,,,,,
Landroid/os/FileUtils;->deleteContents(Ljava/io/File;)Z,,,,,,,,,,,,,,,,,,,
Landroid/os/FileUtils;->deleteOlderFiles(Ljava/io/File;IJ)Z,,,,,,,,,,,,,,,,,,,
Landroid/os/FileUtils;->setPermissions(Ljava/io/FileDescriptor;III)I,,,,,,,,,,,,,,,,,,,
Landroid/os/FileUtils;->stringToFile(Ljava/io/File;Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Landroid/os/Handler;->getMain()Landroid/os/Handler;,,,,,,,,,,,,,,,,,,,
Landroid/os/Handler;-><init>(Z)V,,,,,,,,,,,,,,,,,,,
Landroid/os/health/HealthStatsParceler;->CREATOR:Landroid/os/Parcelable$Creator;,,,,,,,,,,,,,,,,,,,
Landroid/os/health/SystemHealthManager;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/os/HwBinder;->reportSyspropChanged()V,,,,,,,,,,,,,,,,,,,
Landroid/os/IBinder;->SYSPROPS_TRANSACTION:I,,,,,,,,,,,,,,,,,,,
Landroid/os/IDeviceIdleController;->getAppIdTempWhitelist()[I,,,,,,,,,,,,,,,,,,,
Landroid/os/IDeviceIdleController;->getFullPowerWhitelistExceptIdle()[Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/os/INetworkManagementService;->clearInterfaceAddresses(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Landroid/os/INetworkManagementService;->disableIpv6(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Landroid/os/INetworkManagementService;->enableIpv6(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Landroid/os/INetworkManagementService;->isBandwidthControlEnabled()Z,,,,,,,,,,,,,,,,,,,
Landroid/os/INetworkManagementService;->setInterfaceIpv6PrivacyExtensions(Ljava/lang/String;Z)V,,,,,,,,,,,,,,,,,,,
Landroid/os/INetworkManagementService;->setIPv6AddrGenMode(Ljava/lang/String;I)V,,,,,,,,,,,,,,,,,,,
Landroid/os/IPowerManager$Stub;->TRANSACTION_acquireWakeLock:I,,,,,,,,,,,,,,,,,,,
Landroid/os/IPowerManager$Stub;->TRANSACTION_goToSleep:I,,,,,,,,,,,,,,,,,,,
Landroid/os/IPowerManager;->goToSleep(JII)V,,,,,,,,,,,,,,,,,,,
Landroid/os/LocaleList;->setDefault(Landroid/os/LocaleList;I)V,,,,,,,,,,,,,,,,,,,
Landroid/os/MemoryFile;->native_pin(Ljava/io/FileDescriptor;Z)Z,,,,,,,,,,,,,,,,,,,
Landroid/os/MessageQueue;->dispatchEvents(II)I,,,,,,,,,,,,,,,,,,,
Landroid/os/MessageQueue;->hasMessages(Landroid/os/Handler;Ljava/lang/Runnable;Ljava/lang/Object;)Z,,,,,,,,,,,,,,,,,,,
Landroid/os/ParcelableParcel;->CREATOR:Landroid/os/Parcelable$ClassLoaderCreator;,,,,,,,,,,,,,,,,,,,
Landroid/os/ParcelableParcel;->getClassLoader()Ljava/lang/ClassLoader;,,,,,,,,,,,,,,,,,,,
Landroid/os/ParcelableParcel;->getParcel()Landroid/os/Parcel;,,,,,,,,,,,,,,,,,,,
Landroid/os/ParcelableParcel;-><init>(Ljava/lang/ClassLoader;)V,,,,,,,,,,,,,,,,,,,
Landroid/os/Parcel;->getGlobalAllocCount()J,,,,,,,,,,,,,,,,,,,
Landroid/os/Parcel;->getGlobalAllocSize()J,,,,,,,,,,,,,,,,,,,
Landroid/os/Parcel;->readArrayMap(Landroid/util/ArrayMap;Ljava/lang/ClassLoader;)V,,,,,,,,,,,,,,,,,,,
Landroid/os/Parcel;->readBlob()[B,,,,,,,,,,,,,,,,,,,
Landroid/os/Parcel;->writeArrayMap(Landroid/util/ArrayMap;)V,,,,,,,,,,,,,,,,,,,
Landroid/os/Parcel;->writeArraySet(Landroid/util/ArraySet;)V,,,,,,,,,,,,,,,,,,,
Landroid/os/Parcel;->writeBlob([B)V,,,,,,,,,,,,,,,,,,,
Landroid/os/PerformanceCollector;->startTiming(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Landroid/os/PerformanceCollector;->stopTiming(Ljava/lang/String;)Landroid/os/Bundle;,,,,,,,,,,,,,,,,,,,
Landroid/os/PowerManager;->ACTION_LIGHT_DEVICE_IDLE_MODE_CHANGED:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/os/PowerManager;->getBrightnessConstraint(I)F,,,,,,,,,,,,,,,,,,,
Landroid/os/Process;->DRM_UID:I,,,,,,,,,,,,,,,,,,,
Landroid/os/Process;->FIRST_ISOLATED_UID:I,,,,,,,,,,,,,,,,,,,
Landroid/os/Process;->LAST_ISOLATED_UID:I,,,,,,,,,,,,,,,,,,,
Landroid/os/Process;->LOG_UID:I,,,,,,,,,,,,,,,,,,,
Landroid/os/Process;->MEDIA_UID:I,,,,,,,,,,,,,,,,,,,
Landroid/os/Process;->myPpid()I,,,,,,,,,,,,,,,,,,,
Landroid/os/Process;->NFC_UID:I,,,,,,,,,,,,,,,,,,,
Landroid/os/Process;->PROC_COMBINE:I,,,,,,,,,,,,,,,,,,,
Landroid/os/Process;->PROC_OUT_FLOAT:I,,,,,,,,,,,,,,,,,,,
Landroid/os/Process;->PROC_OUT_LONG:I,,,,,,,,,,,,,,,,,,,
Landroid/os/Process;->PROC_OUT_STRING:I,,,,,,,,,,,,,,,,,,,
Landroid/os/Process;->PROC_PARENS:I,,,,,,,,,,,,,,,,,,,
Landroid/os/Process;->PROC_QUOTES:I,,,,,,,,,,,,,,,,,,,
Landroid/os/Process;->PROC_SPACE_TERM:I,,,,,,,,,,,,,,,,,,,
Landroid/os/Process;->PROC_TAB_TERM:I,,,,,,,,,,,,,,,,,,,
Landroid/os/Process;->PROC_TERM_MASK:I,,,,,,,,,,,,,,,,,,,
Landroid/os/Process;->PROC_ZERO_TERM:I,,,,,,,,,,,,,,,,,,,
Landroid/os/Process;->VPN_UID:I,,,,,,,,,,,,,,,,,,,
Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;ZI)V,,,,,,,,,,,,,,,,,,,
Landroid/os/SharedMemory;->getFd()I,,,,,,,,,,,,,,,,,,,
Landroid/os/ShellCommand;->peekNextArg()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/os/StatFs;->mStat:Landroid/system/StructStatVfs;,,,,,,,,,,,,,,,,,,,
Landroid/os/storage/StorageEventListener;->onDiskDestroyed(Landroid/os/storage/DiskInfo;)V,,,,,,,,,,,,,,,,,,,
Landroid/os/storage/StorageEventListener;->onDiskScanned(Landroid/os/storage/DiskInfo;I)V,,,,,,,,,,,,,,,,,,,
Landroid/os/storage/StorageEventListener;->onVolumeForgotten(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Landroid/os/storage/StorageEventListener;->onVolumeRecordChanged(Landroid/os/storage/VolumeRecord;)V,,,,,,,,,,,,,,,,,,,
Landroid/os/storage/StorageEventListener;->onVolumeStateChanged(Landroid/os/storage/VolumeInfo;II)V,,,,,,,,,,,,,,,,,,,
Landroid/os/storage/StorageManager;->CRYPT_TYPE_DEFAULT:I,,,,,,,,,,,,,,,,,,,
Landroid/os/storage/StorageManager;->CRYPT_TYPE_PASSWORD:I,,,,,,,,,,,,,,,,,,,
Landroid/os/storage/StorageManager;->disableUsbMassStorage()V,,,,,,,,,,,,,,,,,,,
Landroid/os/storage/StorageManager;->enableUsbMassStorage()V,,,,,,,,,,,,,,,,,,,
Landroid/os/storage/StorageManager;->ENCRYPTION_STATE_NONE:I,,,,,,,,,,,,,,,,,,,
Landroid/os/storage/StorageManager;->findVolumeById(Ljava/lang/String;)Landroid/os/storage/VolumeInfo;,,,,,,,,,,,,,,,,,,,
Landroid/os/storage/StorageManager;->format(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Landroid/os/storage/StorageManager;->getStorageFullBytes(Ljava/io/File;)J,,,,,,,,,,,,,,,,,,,
Landroid/os/storage/StorageManager;->getStorageVolume([Landroid/os/storage/StorageVolume;Ljava/io/File;)Landroid/os/storage/StorageVolume;,,,,,,,,,,,,,,,,,,,
Landroid/os/storage/StorageManager;->isFileEncryptedNativeOnly()Z,,,,,,,,,,,,,,,,,,,
Landroid/os/storage/StorageManager;->isUsbMassStorageConnected()Z,,,,,,,,,,,,,,,,,,,
Landroid/os/storage/StorageManager;->partitionPublic(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Landroid/os/storage/StorageVolume;->getFatVolumeId()I,,,,,,,,,,,,,,,,,,,
Landroid/os/storage/VolumeInfo;->CREATOR:Landroid/os/Parcelable$Creator;,,,,,,,,,,,,,,,,,,,
Landroid/os/storage/VolumeInfo;->getInternalPath()Ljava/io/File;,,,,,,,,,,,,,,,,,,,
Landroid/os/storage/VolumeInfo;-><init>(Landroid/os/Parcel;)V,,,,,,,,,,,,,,,,,,,
Landroid/os/storage/VolumeInfo;->isPrimaryEmulatedForUser(I)Z,,,,,,,,,,,,,,,,,,,
Landroid/os/storage/VolumeInfo;->isVisibleForWrite(I)Z,,,,,,,,,,,,,,,,,,,
Landroid/os/storage/VolumeRecord;->CREATOR:Landroid/os/Parcelable$Creator;,,,,,,,,,,,,,,,,,,,
Landroid/os/storage/VolumeRecord;-><init>(Landroid/os/Parcel;)V,,,,,,,,,,,,,,,,,,,
Landroid/os/StrictMode;->incrementExpectedActivityCount(Ljava/lang/Class;)V,,,,,,,,,,,,,,,,,,,
Landroid/os/StrictMode;->onBinderStrictModePolicyChange(I)V,,,,,,,,,,,,,,,,,,,
Landroid/os/SystemClock;->currentThreadTimeMicro()J,,,,,,,,,,,,,,,,,,,
Landroid/os/SystemProperties;->PROP_NAME_MAX:I,,,,,,,,,,,,,,,,,,,
Landroid/os/SystemProperties;->removeChangeCallback(Ljava/lang/Runnable;)V,,,,,,,,,,,,,,,,,,,
Landroid/os/SystemService;->stop(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Landroid/os/Trace;->TRACE_TAG_VIEW:J,,,,,,,,,,,,,,,,,,,
Landroid/os/UpdateLock;->acquire()V,,,,,,,,,,,,,,,,,,,
Landroid/os/UpdateLock;->isHeld()Z,,,,,,,,,,,,,,,,,,,
Landroid/os/UpdateLock;->release()V,,,,,,,,,,,,,,,,,,,
Landroid/os/UpdateLock;->TIMESTAMP:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/os/UserHandle;->AID_APP_END:I,,,,,,,,,,,,,,,,,,,
Landroid/os/UserHandle;->AID_APP_START:I,,,,,,,,,,,,,,,,,,,
Landroid/os/UserHandle;->AID_CACHE_GID_START:I,,,,,,,,,,,,,,,,,,,
Landroid/os/UserHandle;->AID_ROOT:I,,,,,,,,,,,,,,,,,,,
Landroid/os/UserHandle;->AID_SHARED_GID_START:I,,,,,,,,,,,,,,,,,,,
Landroid/os/UserHandle;->ERR_GID:I,,,,,,,,,,,,,,,,,,,
Landroid/os/UserHandle;->USER_SERIAL_SYSTEM:I,,,,,,,,,,,,,,,,,,,
Landroid/os/UserManager;->canSwitchUsers()Z,,,,,,,,,,,,,,,,,,,
Landroid/os/UserManager;->DISALLOW_RECORD_AUDIO:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/os/UserManager;->getUserStartRealtime()J,,,,,,,,,,,,,,,,,,,
Landroid/os/UserManager;->getUserUnlockRealtime()J,,,,,,,,,,,,,,,,,,,
Landroid/os/UserManager;->isDeviceInDemoMode(Landroid/content/Context;)Z,,,,,,,,,,,,,,,,,,,
Landroid/os/UserManager;->isGuestUser(I)Z,,,,,,,,,,,,,,,,,,,
Landroid/os/VibrationEffect$OneShot;->CREATOR:Landroid/os/Parcelable$Creator;,,,,,,,,,,,,,,,,,,,
Landroid/os/VibrationEffect;->EFFECT_POP:I,,,,,,,,,,,,,,,,,,,
Landroid/os/VibrationEffect;->EFFECT_THUD:I,,,,,,,,,,,,,,,,,,,
Landroid/os/VibrationEffect;->RINGTONES:[I,,,,,,,,,,,,,,,,,,,
Landroid/preference/PreferenceActivity;->getHeaders()Ljava/util/List;,,,,,,,,,,,,,,,,,,,
Landroid/preference/PreferenceFragment;->mPreferenceManager:Landroid/preference/PreferenceManager;,,,,,,,,,,,,,,,,,,,
Landroid/preference/PreferenceScreen;->mListView:Landroid/widget/ListView;,,,,,,,,,,,,,,,,,,,
Landroid/preference/SeekBarPreference;-><init>(Landroid/content/Context;)V,,,,,,,,,,,,,,,,,,,
Landroid/preference/SwitchPreference;->mListener:Landroid/preference/SwitchPreference$Listener;,,,,,,,,,,,,,,,,,,,
Landroid/provider/BrowserContract$Accounts;->CONTENT_URI:Landroid/net/Uri;,,,,,,,,,,,,,,,,,,,
Landroid/provider/BrowserContract$Bookmarks;->buildFolderUri(J)Landroid/net/Uri;,,,,,,,,,,,,,,,,,,,
Landroid/provider/BrowserContract$Bookmarks;->CONTENT_URI_DEFAULT_FOLDER:Landroid/net/Uri;,,,,,,,,,,,,,,,,,,,
Landroid/provider/BrowserContract$Combined;->CONTENT_URI:Landroid/net/Uri;,,,,,,,,,,,,,,,,,,,
Landroid/provider/BrowserContract$History;->CONTENT_URI:Landroid/net/Uri;,,,,,,,,,,,,,,,,,,,
Landroid/provider/BrowserContract$Images;->CONTENT_URI:Landroid/net/Uri;,,,,,,,,,,,,,,,,,,,
Landroid/provider/BrowserContract;->AUTHORITY_URI:Landroid/net/Uri;,,,,,,,,,,,,,,,,,,,
Landroid/provider/CalendarContract$CalendarAlerts;->findNextAlarmTime(Landroid/content/ContentResolver;J)J,,,,,,,,,,,,,,,,,,,
Landroid/provider/CalendarContract$CalendarAlerts;->rescheduleMissedAlarms(Landroid/content/ContentResolver;Landroid/content/Context;Landroid/app/AlarmManager;)V,,,,,,,,,,,,,,,,,,,
Landroid/provider/CalendarContract$CalendarAlerts;->scheduleAlarm(Landroid/content/Context;Landroid/app/AlarmManager;J)V,,,,,,,,,,,,,,,,,,,
Landroid/provider/CalendarContract$Events;->PROVIDER_WRITABLE_COLUMNS:[Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/CalendarContract$Events;->SYNC_WRITABLE_COLUMNS:[Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/ContactsContract$CommonDataKinds$Phone;->ENTERPRISE_CONTENT_URI:Landroid/net/Uri;,,,,,,,,,,,,,,,,,,,
Landroid/provider/ContactsContract;->HIDDEN_COLUMN_PREFIX:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/DocumentsContract;->METHOD_CREATE_DOCUMENT:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/DocumentsContract;->PATH_DOCUMENT:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/DocumentsContract;->PATH_TREE:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Downloads$Impl$RequestHeaders;->INSERT_KEY_PREFIX:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Downloads$Impl;->COLUMN_ALLOWED_NETWORK_TYPES:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Downloads$Impl;->COLUMN_ALLOW_ROAMING:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Downloads$Impl;->COLUMN_COOKIE_DATA:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Downloads$Impl;->COLUMN_DELETED:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Downloads$Impl;->COLUMN_DESCRIPTION:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Downloads$Impl;->COLUMN_DESTINATION:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Downloads$Impl;->COLUMN_FILE_NAME_HINT:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Downloads$Impl;->COLUMN_IS_PUBLIC_API:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Downloads$Impl;->COLUMN_IS_VISIBLE_IN_DOWNLOADS_UI:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Downloads$Impl;->COLUMN_MEDIA_SCANNED:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Downloads$Impl;->COLUMN_MIME_TYPE:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Downloads$Impl;->COLUMN_NOTIFICATION_CLASS:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Downloads$Impl;->COLUMN_NOTIFICATION_EXTRAS:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Downloads$Impl;->COLUMN_NOTIFICATION_PACKAGE:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Downloads$Impl;->COLUMN_REFERER:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Downloads$Impl;->COLUMN_TITLE:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Downloads$Impl;->COLUMN_URI:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Downloads$Impl;->COLUMN_VISIBILITY:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Downloads$Impl;->DESTINATION_CACHE_PARTITION_PURGEABLE:I,,,,,,,,,,,,,,,,,,,
Landroid/provider/Downloads$Impl;->DESTINATION_FILE_URI:I,,,,,,,,,,,,,,,,,,,
Landroid/provider/Downloads$Impl;->isNotificationToBeDisplayed(I)Z,,,,,,,,,,,,,,,,,,,
Landroid/provider/MediaStore$Files$FileColumns;->STORAGE_ID:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$Global;->BATTERY_SAVER_CONSTANTS:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$Global;->getStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;I)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$Global;->HEADS_UP_NOTIFICATIONS_ENABLED:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$Global;->HEADS_UP_OFF:I,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$Global;->HEADS_UP_ON:I,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$Global;->NETWORK_SCORER_APP:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$Global;->OVERLAY_DISPLAY_DEVICES:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$Global;->PREFERRED_NETWORK_MODE:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$Global;->putStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;I)Z,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$Global;->sProviderHolder:Landroid/provider/Settings$ContentProviderHolder;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$Global;->WEBVIEW_PROVIDER:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$Global;->WIFI_WATCHDOG_POOR_NETWORK_TEST_ENABLED:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$Global;->ZEN_MODE_ALARMS:I,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$Secure;->ACCESSIBILITY_CAPTIONING_TYPEFACE:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$Secure;->ACCESSIBILITY_DISPLAY_DALTONIZER:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$Secure;->ACCESSIBILITY_SHORTCUT_TARGET_SERVICE:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$Secure;->ANR_SHOW_BACKGROUND:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$Secure;->BACKUP_AUTO_RESTORE:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$Secure;->BACKUP_ENABLED:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$Secure;->BACKUP_PROVISIONED:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$Secure;->BACKUP_TRANSPORT:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$Secure;->DIALER_DEFAULT_APPLICATION:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$Secure;->ENABLED_VR_LISTENERS:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$Secure;->getLongForUser(Landroid/content/ContentResolver;Ljava/lang/String;JI)J,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$Secure;->IMMERSIVE_MODE_CONFIRMATIONS:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$Secure;->LOCK_SCREEN_LOCK_AFTER_TIMEOUT:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$Secure;->LOCK_SCREEN_OWNER_INFO_ENABLED:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$Secure;->NFC_PAYMENT_DEFAULT_COMPONENT:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$Secure;->NOTIFICATION_BADGING:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$Secure;->putLongForUser(Landroid/content/ContentResolver;Ljava/lang/String;JI)Z,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$Secure;->putStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZIZ)Z,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$Secure;->SELECTED_SPELL_CHECKER:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$Secure;->SELECTED_SPELL_CHECKER_SUBTYPE:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$Secure;->SMS_DEFAULT_APPLICATION:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$Secure;->sProviderHolder:Landroid/provider/Settings$ContentProviderHolder;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$Secure;->VOICE_RECOGNITION_SERVICE:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$System;->CAR_DOCK_SOUND:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$System;->CAR_UNDOCK_SOUND:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$System;->CLONE_TO_MANAGED_PROFILE:Ljava/util/Set;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$System;->DESK_DOCK_SOUND:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$System;->DESK_UNDOCK_SOUND:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$System;->DOCK_SOUNDS_ENABLED:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$System;->LOCKSCREEN_SOUNDS_ENABLED:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$System;->LOCK_SOUND:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$System;->MOVED_TO_GLOBAL:Ljava/util/HashSet;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$System;->MOVED_TO_SECURE_THEN_GLOBAL:Ljava/util/HashSet;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$System;->NOTIFICATION_LIGHT_PULSE:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$System;->POINTER_LOCATION:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$System;->POINTER_SPEED:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$System;->PRIVATE_SETTINGS:Ljava/util/Set;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$System;->PUBLIC_SETTINGS:Ljava/util/Set;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$System;->SHOW_TOUCHES:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$System;->sProviderHolder:Landroid/provider/Settings$ContentProviderHolder;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$System;->TTY_MODE:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$System;->UNLOCK_SOUND:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings$System;->VIBRATE_IN_SILENT:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings;->ACTION_USER_DICTIONARY_INSERT:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings;->EXTRA_APP_UID:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings;->isCallingPackageAllowedToWriteSettings(Landroid/content/Context;ILjava/lang/String;Z)Z,,,,,,,,,,,,,,,,,,,
Landroid/provider/Settings;->RESET_MODE_PACKAGE_DEFAULTS:I,,,,,,,,,,,,,,,,,,,
Landroid/provider/Telephony$Sms$Draft;->addMessage(ILandroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Long;)Landroid/net/Uri;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Telephony$Sms$Inbox;->addMessage(ILandroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Long;Z)Landroid/net/Uri;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Telephony$Sms$Outbox;->addMessage(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Long;ZJ)Landroid/net/Uri;,,,,,,,,,,,,,,,,,,,
Landroid/provider/Telephony$Sms$Sent;->addMessage(ILandroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Long;)Landroid/net/Uri;,,,,,,,,,,,,,,,,,,,
Landroid/renderscript/Font;->create(Landroid/renderscript/RenderScript;Landroid/content/res/Resources;Ljava/lang/String;Landroid/renderscript/Font$Style;F)Landroid/renderscript/Font;,,,,,,,,,,,,,,,,,,,
Landroid/renderscript/Mesh$TriangleMeshBuilder;->addTriangle(III)Landroid/renderscript/Mesh$TriangleMeshBuilder;,,,,,,,,,,,,,,,,,,,
Landroid/renderscript/Mesh$TriangleMeshBuilder;->addVertex(FF)Landroid/renderscript/Mesh$TriangleMeshBuilder;,,,,,,,,,,,,,,,,,,,
Landroid/renderscript/Mesh$TriangleMeshBuilder;->create(Z)Landroid/renderscript/Mesh;,,,,,,,,,,,,,,,,,,,
Landroid/renderscript/Mesh$TriangleMeshBuilder;-><init>(Landroid/renderscript/RenderScript;II)V,,,,,,,,,,,,,,,,,,,
Landroid/renderscript/ProgramStore;->BLEND_ALPHA_DEPTH_NONE(Landroid/renderscript/RenderScript;)Landroid/renderscript/ProgramStore;,,,,,,,,,,,,,,,,,,,
Landroid/security/Credentials;->convertToPem([Ljava/security/cert/Certificate;)[B,,,,,,,,,,,,,,,,,,,
Landroid/security/keymaster/ExportResult;->CREATOR:Landroid/os/Parcelable$Creator;,,,,,,,,,,,,,,,,,,,
Landroid/security/keymaster/KeyCharacteristics;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/security/keymaster/KeyCharacteristics;->readFromParcel(Landroid/os/Parcel;)V,,,,,,,,,,,,,,,,,,,
Landroid/security/keymaster/KeymasterArguments;->addEnum(II)V,,,,,,,,,,,,,,,,,,,
Landroid/security/keymaster/KeymasterArguments;->addUnsignedInt(IJ)V,,,,,,,,,,,,,,,,,,,
Landroid/security/keymaster/KeymasterArguments;->addUnsignedLong(ILjava/math/BigInteger;)V,,,,,,,,,,,,,,,,,,,
Landroid/security/keymaster/KeymasterArguments;->CREATOR:Landroid/os/Parcelable$Creator;,,,,,,,,,,,,,,,,,,,
Landroid/security/keymaster/KeymasterArguments;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/security/keymaster/KeymasterArguments;->readFromParcel(Landroid/os/Parcel;)V,,,,,,,,,,,,,,,,,,,
Landroid/security/keymaster/KeymasterBlobArgument;->blob:[B,,,,,,,,,,,,,,,,,,,
Landroid/security/keymaster/KeymasterBlobArgument;-><init>(I[B)V,,,,,,,,,,,,,,,,,,,
Landroid/security/keymaster/KeymasterBlobArgument;-><init>(ILandroid/os/Parcel;)V,,,,,,,,,,,,,,,,,,,
Landroid/security/keymaster/KeymasterBlob;->CREATOR:Landroid/os/Parcelable$Creator;,,,,,,,,,,,,,,,,,,,
Landroid/security/keymaster/KeymasterBooleanArgument;-><init>(ILandroid/os/Parcel;)V,,,,,,,,,,,,,,,,,,,
Landroid/security/keymaster/KeymasterDateArgument;-><init>(ILandroid/os/Parcel;)V,,,,,,,,,,,,,,,,,,,
Landroid/security/keymaster/KeymasterIntArgument;-><init>(II)V,,,,,,,,,,,,,,,,,,,
Landroid/security/keymaster/KeymasterIntArgument;-><init>(ILandroid/os/Parcel;)V,,,,,,,,,,,,,,,,,,,
Landroid/security/keymaster/KeymasterIntArgument;->value:I,,,,,,,,,,,,,,,,,,,
Landroid/security/keymaster/KeymasterLongArgument;-><init>(IJ)V,,,,,,,,,,,,,,,,,,,
Landroid/security/keymaster/KeymasterLongArgument;-><init>(ILandroid/os/Parcel;)V,,,,,,,,,,,,,,,,,,,
Landroid/security/keymaster/KeymasterLongArgument;->value:J,,,,,,,,,,,,,,,,,,,
Landroid/security/keymaster/OperationResult;->CREATOR:Landroid/os/Parcelable$Creator;,,,,,,,,,,,,,,,,,,,
Landroid/security/KeystoreArguments;->CREATOR:Landroid/os/Parcelable$Creator;,,,,,,,,,,,,,,,,,,,
Landroid/security/KeystoreArguments;-><init>([[B)V,,,,,,,,,,,,,,,,,,,
Landroid/security/KeyStore;->delete(Ljava/lang/String;)Z,,,,,,,,,,,,,,,,,,,
Landroid/security/KeyStore;->getKeyStoreException(I)Landroid/security/KeyStoreException;,,,,,,,,,,,,,,,,,,,
Landroid/security/KeyStore;->get(Ljava/lang/String;)[B,,,,,,,,,,,,,,,,,,,
Landroid/security/keystore/IKeystoreService;->get(Ljava/lang/String;I)[B,,,,,,,,,,,,,,,,,,,
Landroid/security/keystore/IKeystoreService;->getState(I)I,,,,,,,,,,,,,,,,,,,
Landroid/security/keystore/IKeystoreService;->list(Ljava/lang/String;I)[Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/security/KeyStore;->listUidsOfAuthBoundKeys()[I,,,,,,,,,,,,,,,,,,,
Landroid/security/KeyStore;->NO_ERROR:I,,,,,,,,,,,,,,,,,,,
Landroid/security/KeyStore;->state(I)Landroid/security/KeyStore$State;,,,,,,,,,,,,,,,,,,,
Landroid/security/KeyStore;->unlock(Ljava/lang/String;)Z,,,,,,,,,,,,,,,,,,,
Landroid/service/dreams/DreamService;->getDozeScreenBrightness()I,,,,,,,,,,,,,,,,,,,
Landroid/service/dreams/IDreamManager;->getDreamComponents()[Landroid/content/ComponentName;,,,,,,,,,,,,,,,,,,,
Landroid/service/dreams/IDreamManager;->setDreamComponents([Landroid/content/ComponentName;)V,,,,,,,,,,,,,,,,,,,
Landroid/service/euicc/EuiccProfileInfo;-><init>(Ljava/lang/String;[Landroid/telephony/UiccAccessRule;Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Landroid/service/euicc/GetDefaultDownloadableSubscriptionListResult;->result:I,,,,,,,,,,,,,,,,,,,
Landroid/service/euicc/GetDownloadableSubscriptionMetadataResult;->result:I,,,,,,,,,,,,,,,,,,,
Landroid/service/euicc/IDeleteSubscriptionCallback;->onComplete(I)V,,,,,,,,,,,,,,,,,,,
Landroid/service/euicc/IEraseSubscriptionsCallback;->onComplete(I)V,,,,,,,,,,,,,,,,,,,
Landroid/service/euicc/IEuiccService$Stub;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/service/euicc/IGetDefaultDownloadableSubscriptionListCallback;->onComplete(Landroid/service/euicc/GetDefaultDownloadableSubscriptionListResult;)V,,,,,,,,,,,,,,,,,,,
Landroid/service/euicc/IGetDownloadableSubscriptionMetadataCallback;->onComplete(Landroid/service/euicc/GetDownloadableSubscriptionMetadataResult;)V,,,,,,,,,,,,,,,,,,,
Landroid/service/euicc/IGetEidCallback;->onSuccess(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Landroid/service/euicc/IGetEuiccInfoCallback;->onSuccess(Landroid/telephony/euicc/EuiccInfo;)V,,,,,,,,,,,,,,,,,,,
Landroid/service/euicc/IGetEuiccProfileInfoListCallback;->onComplete(Landroid/service/euicc/GetEuiccProfileInfoListResult;)V,,,,,,,,,,,,,,,,,,,
Landroid/service/euicc/IRetainSubscriptionsForFactoryResetCallback;->onComplete(I)V,,,,,,,,,,,,,,,,,,,
Landroid/service/euicc/ISwitchToSubscriptionCallback;->onComplete(I)V,,,,,,,,,,,,,,,,,,,
Landroid/service/euicc/IUpdateSubscriptionNicknameCallback;->onComplete(I)V,,,,,,,,,,,,,,,,,,,
Landroid/service/media/IMediaBrowserServiceCallbacks$Stub;->asInterface(Landroid/os/IBinder;)Landroid/service/media/IMediaBrowserServiceCallbacks;,,,,,,,,,,,,,,,,,,,
Landroid/service/media/MediaBrowserService;->KEY_MEDIA_ITEM:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/service/notification/NotificationListenerService;->mWrapper:Landroid/service/notification/NotificationListenerService$NotificationListenerWrapper;,,,,,,,,,,,,,,,,,,,
Landroid/service/notification/StatusBarNotification;->getPackageContext(Landroid/content/Context;)Landroid/content/Context;,,,,,,,,,,,,,,,,,,,
Landroid/service/notification/ZenModeConfig$ZenRule;->creationTime:J,,,,,,,,,,,,,,,,,,,
Landroid/service/notification/ZenModeConfig$ZenRule;->name:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/service/notification/ZenModeConfig$ZenRule;->snoozing:Z,,,,,,,,,,,,,,,,,,,
Landroid/service/vr/IVrManager;->getVr2dDisplayId()I,,,,,,,,,,,,,,,,,,,
Landroid/service/vr/VrListenerService;->onCurrentVrActivityChanged(Landroid/content/ComponentName;ZI)V,,,,,,,,,,,,,,,,,,,
Landroid/service/wallpaper/WallpaperService;->MSG_WINDOW_RESIZED:I,,,,,,,,,,,,,,,,,,,
Landroid/speech/IRecognitionListener;->onEvent(ILandroid/os/Bundle;)V,,,,,,,,,,,,,,,,,,,
Landroid/telecom/CallerInfo;->getCallerInfo(Landroid/content/Context;Landroid/net/Uri;)Landroid/telecom/CallerInfo;,,,,,,,,,,,,,,,,,,,
Landroid/telecom/CallerInfo;->getCallerInfo(Landroid/content/Context;Ljava/lang/String;I)Landroid/telecom/CallerInfo;,,,,,,,,,,,,,,,,,,,
Landroid/telecom/CallerInfo;->getCallerInfo(Landroid/content/Context;Ljava/lang/String;)Landroid/telecom/CallerInfo;,,,,,,,,,,,,,,,,,,,
Landroid/telecom/CallerInfo;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/telecom/Log;->i(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V,,,,,,,,,,,,,,,,,,,
Landroid/telecom/Log;->w(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V,,,,,,,,,,,,,,,,,,,
Landroid/telephony/CarrierConfigManager;->KEY_DISABLE_VOICE_BARRING_NOTIFICATION_BOOL:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/telephony/CellIdentityGsm;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/telephony/CellIdentityLte;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/telephony/CellInfoCdma;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/telephony/CellInfoGsm;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/telephony/CellInfoLte;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/telephony/CellSignalStrengthGsm;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/telephony/CellSignalStrengthLte;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/telephony/euicc/DownloadableSubscription;->encodedActivationCode:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/telephony/euicc/DownloadableSubscription;->setAccessRules([Landroid/telephony/UiccAccessRule;)V,,,,,,,,,,,,,,,,,,,
Landroid/telephony/euicc/DownloadableSubscription;->setCarrierName(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Landroid/telephony/euicc/EuiccInfo;->osVersion:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/telephony/ims/compat/feature/ImsFeature;->getFeatureState()I,,,,,,,,,,,,,,,,,,,
Landroid/telephony/ims/compat/feature/ImsFeature;->setFeatureState(I)V,,,,,,,,,,,,,,,,,,,
Landroid/telephony/ims/compat/feature/MMTelFeature;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/telephony/ims/compat/ImsService;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/telephony/ims/compat/ImsService;->mImsServiceController:Landroid/os/IBinder;,,,,,,,,,,,,,,,,,,,
Landroid/telephony/ims/compat/stub/ImsCallSessionImplBase;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/telephony/ims/compat/stub/ImsConfigImplBase;->getIImsConfig()Lcom/android/ims/internal/IImsConfig;,,,,,,,,,,,,,,,,,,,
Landroid/telephony/ims/compat/stub/ImsConfigImplBase;-><init>(Landroid/content/Context;)V,,,,,,,,,,,,,,,,,,,
Landroid/telephony/ims/compat/stub/ImsUtListenerImplBase;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/telephony/ims/ImsCallForwardInfo;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/telephony/ims/ImsCallForwardInfo;->mCondition:I,,,,,,,,,,,,,,,,,,,
Landroid/telephony/ims/ImsCallForwardInfo;->mNumber:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/telephony/ims/ImsCallForwardInfo;->mServiceClass:I,,,,,,,,,,,,,,,,,,,
Landroid/telephony/ims/ImsCallForwardInfo;->mStatus:I,,,,,,,,,,,,,,,,,,,
Landroid/telephony/ims/ImsCallForwardInfo;->mTimeSeconds:I,,,,,,,,,,,,,,,,,,,
Landroid/telephony/ims/ImsCallForwardInfo;->mToA:I,,,,,,,,,,,,,,,,,,,
Landroid/telephony/ims/ImsCallProfile;->mCallExtras:Landroid/os/Bundle;,,,,,,,,,,,,,,,,,,,
Landroid/telephony/ims/ImsCallProfile;->mCallType:I,,,,,,,,,,,,,,,,,,,
Landroid/telephony/ims/ImsCallProfile;->mMediaProfile:Landroid/telephony/ims/ImsStreamMediaProfile;,,,,,,,,,,,,,,,,,,,
Landroid/telephony/ims/ImsCallProfile;->mRestrictCause:I,,,,,,,,,,,,,,,,,,,
Landroid/telephony/ims/ImsCallProfile;->presentationToOIR(I)I,,,,,,,,,,,,,,,,,,,
Landroid/telephony/ims/ImsReasonInfo;-><init>(II)V,,,,,,,,,,,,,,,,,,,
Landroid/telephony/ims/ImsSsInfo;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/telephony/ims/ImsSsInfo;->mIcbNum:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/telephony/ims/ImsSsInfo;->mStatus:I,,,,,,,,,,,,,,,,,,,
Landroid/telephony/ims/ImsStreamMediaProfile;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/telephony/ims/ImsStreamMediaProfile;->mAudioDirection:I,,,,,,,,,,,,,,,,,,,
Landroid/telephony/ims/ImsStreamMediaProfile;->mAudioQuality:I,,,,,,,,,,,,,,,,,,,
Landroid/telephony/ims/ImsStreamMediaProfile;->mVideoDirection:I,,,,,,,,,,,,,,,,,,,
Landroid/telephony/ims/ImsVideoCallProvider;->getInterface()Lcom/android/ims/internal/IImsVideoCallProvider;,,,,,,,,,,,,,,,,,,,
Landroid/telephony/mbms/IMbmsStreamingSessionCallback$Stub;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/telephony/mbms/IStreamingServiceCallback$Stub;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/telephony/mbms/vendor/IMbmsStreamingService$Stub;->asInterface(Landroid/os/IBinder;)Landroid/telephony/mbms/vendor/IMbmsStreamingService;,,,,,,,,,,,,,,,,,,,
Landroid/telephony/mbms/vendor/IMbmsStreamingService;->getPlaybackUri(ILjava/lang/String;)Landroid/net/Uri;,,,,,,,,,,,,,,,,,,,
Landroid/telephony/mbms/vendor/IMbmsStreamingService;->initialize(Landroid/telephony/mbms/IMbmsStreamingSessionCallback;I)I,,,,,,,,,,,,,,,,,,,
Landroid/telephony/mbms/vendor/IMbmsStreamingService;->requestUpdateStreamingServices(ILjava/util/List;)I,,,,,,,,,,,,,,,,,,,
Landroid/telephony/mbms/vendor/IMbmsStreamingService;->startStreaming(ILjava/lang/String;Landroid/telephony/mbms/IStreamingServiceCallback;)I,,,,,,,,,,,,,,,,,,,
Landroid/telephony/PhoneNumberFormattingTextWatcher;->mFormatter:Lcom/android/i18n/phonenumbers/AsYouTypeFormatter;,,,,,,,,,,,,,,,,,,,
Landroid/telephony/PhoneNumberUtils;->isPotentialEmergencyNumber(ILjava/lang/String;)Z,,,,,,,,,,,,,,,,,,,
Landroid/telephony/PhoneNumberUtils;->isPotentialLocalEmergencyNumber(Landroid/content/Context;ILjava/lang/String;)Z,,,,,,,,,,,,,,,,,,,
Landroid/telephony/PhoneNumberUtils;->isPotentialLocalEmergencyNumber(Landroid/content/Context;Ljava/lang/String;)Z,,,,,,,,,,,,,,,,,,,
Landroid/telephony/PhoneStateListener;->onDataConnectionRealTimeInfoChanged(Landroid/telephony/DataConnectionRealTimeInfo;)V,,,,,,,,,,,,,,,,,,,
Landroid/telephony/PhoneStateListener;->onOemHookRawEvent([B)V,,,,,,,,,,,,,,,,,,,
Landroid/telephony/PreciseDataConnectionState;-><init>(IIILjava/lang/String;Landroid/net/LinkProperties;I)V,,,,,,,,,,,,,,,,,,,
Landroid/telephony/RadioAccessFamily;->getPhoneId()I,,,,,,,,,,,,,,,,,,,
Landroid/telephony/RadioAccessFamily;->getRadioAccessFamily()I,,,,,,,,,,,,,,,,,,,
Landroid/telephony/RadioAccessFamily;->getRafFromNetworkType(I)I,,,,,,,,,,,,,,,,,,,
Landroid/telephony/RadioAccessFamily;-><init>(II)V,,,,,,,,,,,,,,,,,,,
Landroid/telephony/Rlog;->d(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I,,,,,,,,,,,,,,,,,,,
Landroid/telephony/ServiceState;->bitmaskHasTech(II)Z,,,,,,,,,,,,,,,,,,,
Landroid/telephony/ServiceState;->getRilDataRadioTechnology()I,,,,,,,,,,,,,,,,,,,
Landroid/telephony/ServiceState;->getRilVoiceRadioTechnology()I,,,,,,,,,,,,,,,,,,,
Landroid/telephony/ServiceState;->mergeServiceStates(Landroid/telephony/ServiceState;Landroid/telephony/ServiceState;)Landroid/telephony/ServiceState;,,,,,,,,,,,,,,,,,,,
Landroid/telephony/ServiceState;->rilRadioTechnologyToString(I)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/telephony/ServiceState;->setDataRoaming(Z)V,,,,,,,,,,,,,,,,,,,
Landroid/telephony/ServiceState;->setOperatorAlphaLong(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Landroid/telephony/ServiceState;->setVoiceRegState(I)V,,,,,,,,,,,,,,,,,,,
Landroid/telephony/ServiceState;->setVoiceRoaming(Z)V,,,,,,,,,,,,,,,,,,,
Landroid/telephony/SmsManager;->sendTextMessage(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/app/PendingIntent;Landroid/app/PendingIntent;IZI)V,,,,,,,,,,,,,,,,,,,
Landroid/telephony/SmsMessage;->mSubId:I,,,,,,,,,,,,,,,,,,,
Landroid/telephony/SmsMessage;->useCdmaFormatForMoSms(I)Z,,,,,,,,,,,,,,,,,,,
Landroid/telephony/SubscriptionInfo;->getNameSource()I,,,,,,,,,,,,,,,,,,,
Landroid/telephony/SubscriptionInfo;->setDisplayName(Ljava/lang/CharSequence;)V,,,,,,,,,,,,,,,,,,,
Landroid/telephony/SubscriptionInfo;->setIconTint(I)V,,,,,,,,,,,,,,,,,,,
Landroid/telephony/SubscriptionManager;->CONTENT_URI:Landroid/net/Uri;,,,,,,,,,,,,,,,,,,,
Landroid/telephony/SubscriptionManager;->getDefaultSmsPhoneId()I,,,,,,,,,,,,,,,,,,,
Landroid/telephony/SubscriptionManager;->getDefaultVoicePhoneId()I,,,,,,,,,,,,,,,,,,,
Landroid/telephony/SubscriptionManager;->getDefaultVoiceSubscriptionInfo()Landroid/telephony/SubscriptionInfo;,,,,,,,,,,,,,,,,,,,
Landroid/telephony/SubscriptionManager;->isValidPhoneId(I)Z,,,,,,,,,,,,,,,,,,,
Landroid/telephony/SubscriptionManager;->putPhoneIdAndSubIdExtra(Landroid/content/Intent;II)V,,,,,,,,,,,,,,,,,,,
Landroid/telephony/SubscriptionManager;->setDataRoaming(II)I,,,,,,,,,,,,,,,,,,,
Landroid/telephony/SubscriptionManager;->setDisplayNumber(Ljava/lang/String;I)I,,,,,,,,,,,,,,,,,,,
Landroid/telephony/TelephonyManager;->getImsConfig(II)Landroid/telephony/ims/aidl/IImsConfig;,,,,,,,,,,,,,,,,,,,
Landroid/telephony/TelephonyManager;->getImsRegistration(II)Landroid/telephony/ims/aidl/IImsRegistration;,,,,,,,,,,,,,,,,,,,
Landroid/telephony/TelephonyManager;->getIntAtIndex(Landroid/content/ContentResolver;Ljava/lang/String;I)I,,,,,,,,,,,,,,,,,,,
Landroid/telephony/TelephonyManager;->getTelephonyProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/telephony/TelephonyManager;->NETWORK_TYPE_LTE_CA:I,,,,,,,,,,,,,,,,,,,
Landroid/telephony/TelephonyManager;->nvResetConfig(I)Z,,,,,,,,,,,,,,,,,,,
Landroid/telephony/TelephonyManager;->putIntAtIndex(Landroid/content/ContentResolver;Ljava/lang/String;II)Z,,,,,,,,,,,,,,,,,,,
Landroid/telephony/TelephonyManager;->setDataNetworkTypeForPhone(II)V,,,,,,,,,,,,,,,,,,,
Landroid/telephony/TelephonyManager;->setImsRegistrationState(Z)V,,,,,,,,,,,,,,,,,,,
Landroid/telephony/TelephonyManager;->setNetworkOperatorNameForPhone(ILjava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Landroid/telephony/TelephonyManager;->setNetworkOperatorNumericForPhone(ILjava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Landroid/telephony/TelephonyManager;->setNetworkRoamingForPhone(IZ)V,,,,,,,,,,,,,,,,,,,
Landroid/telephony/TelephonyManager;->setPreferredNetworkType(II)Z,,,,,,,,,,,,,,,,,,,
Landroid/telephony/TelephonyManager;->setRoamingOverride(Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;)Z,,,,,,,,,,,,,,,,,,,
Landroid/telephony/TelephonyManager;->setSimOperatorNumericForPhone(ILjava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Landroid/text/AndroidBidi;->bidi(I[C[B)I,,,,,,,,,,,,,,,,,,,
Landroid/text/DynamicLayout;->getIndexFirstChangedBlock()I,,,,,,,,,,,,,,,,,,,
Landroid/text/DynamicLayout;->setIndexFirstChangedBlock(I)V,,,,,,,,,,,,,,,,,,,
Landroid/text/FontConfig$Family;->getFonts()[Landroid/text/FontConfig$Font;,,,,,,,,,,,,,,,,,,,
Landroid/text/FontConfig$Family;->getName()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/text/FontConfig$Family;->getVariant()I,,,,,,,,,,,,,,,,,,,
Landroid/text/FontConfig$Font;->getAxes()[Landroid/graphics/fonts/FontVariationAxis;,,,,,,,,,,,,,,,,,,,
Landroid/text/FontConfig$Font;->getTtcIndex()I,,,,,,,,,,,,,,,,,,,
Landroid/text/FontConfig$Font;->getWeight()I,,,,,,,,,,,,,,,,,,,
Landroid/text/FontConfig$Font;->isItalic()Z,,,,,,,,,,,,,,,,,,,
Landroid/text/FontConfig;->getFamilies()[Landroid/text/FontConfig$Family;,,,,,,,,,,,,,,,,,,,
Landroid/text/format/DateFormat;->hasDesignator(Ljava/lang/CharSequence;C)Z,,,,,,,,,,,,,,,,,,,
Landroid/text/format/DateUtils;->formatDuration(JI)Ljava/lang/CharSequence;,,,,,,,,,,,,,,,,,,,
Landroid/text/Html;->withinStyle(Ljava/lang/StringBuilder;Ljava/lang/CharSequence;II)V,,,,,,,,,,,,,,,,,,,
Landroid/text/Layout;->drawBackground(Landroid/graphics/Canvas;Landroid/graphics/Path;Landroid/graphics/Paint;III)V,,,,,,,,,,,,,,,,,,,
Landroid/text/Layout;->drawText(Landroid/graphics/Canvas;II)V,,,,,,,,,,,,,,,,,,,
Landroid/text/Layout;->getLineRangeForDraw(Landroid/graphics/Canvas;)J,,,,,,,,,,,,,,,,,,,
Landroid/text/Layout;->getPrimaryHorizontal(IZ)F,,,,,,,,,,,,,,,,,,,
Landroid/text/Layout;->getSecondaryHorizontal(IZ)F,,,,,,,,,,,,,,,,,,,
Landroid/text/Layout;->shouldClampCursor(I)Z,,,,,,,,,,,,,,,,,,,
Landroid/text/method/WordIterator;->following(I)I,,,,,,,,,,,,,,,,,,,
Landroid/text/method/WordIterator;->getNextWordEndOnTwoWordBoundary(I)I,,,,,,,,,,,,,,,,,,,
Landroid/text/method/WordIterator;->getPrevWordBeginningOnTwoWordsBoundary(I)I,,,,,,,,,,,,,,,,,,,
Landroid/text/method/WordIterator;->getPunctuationBeginning(I)I,,,,,,,,,,,,,,,,,,,
Landroid/text/method/WordIterator;->getPunctuationEnd(I)I,,,,,,,,,,,,,,,,,,,
Landroid/text/method/WordIterator;->isAfterPunctuation(I)Z,,,,,,,,,,,,,,,,,,,
Landroid/text/method/WordIterator;->isBoundary(I)Z,,,,,,,,,,,,,,,,,,,
Landroid/text/method/WordIterator;->isOnPunctuation(I)Z,,,,,,,,,,,,,,,,,,,
Landroid/text/method/WordIterator;->nextBoundary(I)I,,,,,,,,,,,,,,,,,,,
Landroid/text/method/WordIterator;->preceding(I)I,,,,,,,,,,,,,,,,,,,
Landroid/text/method/WordIterator;->prevBoundary(I)I,,,,,,,,,,,,,,,,,,,
Landroid/text/SpannableStringBuilder;->getSpans(IILjava/lang/Class;Z)[Ljava/lang/Object;,,,,,,,,,,,,,,,,,,,
Landroid/text/SpannableStringInternal;->COLUMNS:I,,,,,,,,,,,,,,,,,,,
Landroid/text/SpannableStringInternal;->copySpans(Landroid/text/SpannableStringInternal;II)V,,,,,,,,,,,,,,,,,,,
Landroid/text/SpannableStringInternal;->copySpans(Landroid/text/Spanned;II)V,,,,,,,,,,,,,,,,,,,
Landroid/text/SpannableStringInternal;->EMPTY:[Ljava/lang/Object;,,,,,,,,,,,,,,,,,,,
Landroid/text/SpannableStringInternal;->END:I,,,,,,,,,,,,,,,,,,,
Landroid/text/SpannableStringInternal;->FLAGS:I,,,,,,,,,,,,,,,,,,,
Landroid/text/SpannableStringInternal;->isIndexFollowsNextLine(I)Z,,,,,,,,,,,,,,,,,,,
Landroid/text/SpannableStringInternal;->isOutOfCopyRange(IIII)Z,,,,,,,,,,,,,,,,,,,
Landroid/text/SpannableStringInternal;->setSpan(Ljava/lang/Object;IIIZ)V,,,,,,,,,,,,,,,,,,,
Landroid/text/SpannableStringInternal;->START:I,,,,,,,,,,,,,,,,,,,
Landroid/text/SpanSet;->spans:[Ljava/lang/Object;,,,,,,,,,,,,,,,,,,,
Landroid/text/StaticLayout$LineBreaks;->ascents:[F,,,,,,,,,,,,,,,,,,,
Landroid/text/StaticLayout$LineBreaks;->breaks:[I,,,,,,,,,,,,,,,,,,,
Landroid/text/StaticLayout$LineBreaks;->descents:[F,,,,,,,,,,,,,,,,,,,
Landroid/text/StaticLayout$LineBreaks;->flags:[I,,,,,,,,,,,,,,,,,,,
Landroid/text/StaticLayout$LineBreaks;->widths:[F,,,,,,,,,,,,,,,,,,,
Landroid/text/style/EasyEditSpan;->getPendingIntent()Landroid/app/PendingIntent;,,,,,,,,,,,,,,,,,,,
Landroid/text/style/EasyEditSpan;->isDeleteEnabled()Z,,,,,,,,,,,,,,,,,,,
Landroid/text/style/EasyEditSpan;->setDeleteEnabled(Z)V,,,,,,,,,,,,,,,,,,,
Landroid/text/style/SuggestionSpan;->mEasyCorrectUnderlineColor:I,,,,,,,,,,,,,,,,,,,
Landroid/text/style/SuggestionSpan;->mEasyCorrectUnderlineThickness:F,,,,,,,,,,,,,,,,,,,
Landroid/text/style/SuggestionSpan;->notifySelection(Landroid/content/Context;Ljava/lang/String;I)V,,,,,,,,,,,,,,,,,,,
Landroid/text/TextLine;->mCharacterStyleSpanSet:Landroid/text/SpanSet;,,,,,,,,,,,,,,,,,,,
Landroid/text/TextLine;->mMetricAffectingSpanSpanSet:Landroid/text/SpanSet;,,,,,,,,,,,,,,,,,,,
Landroid/text/TextLine;->mReplacementSpanSpanSet:Landroid/text/SpanSet;,,,,,,,,,,,,,,,,,,,
Landroid/text/TextLine;->mText:Ljava/lang/CharSequence;,,,,,,,,,,,,,,,,,,,
Landroid/text/util/Linkify;->gatherTelLinks(Ljava/util/ArrayList;Landroid/text/Spannable;Landroid/content/Context;)V,,,,,,,,,,,,,,,,,,,
Landroid/transition/Transition;->cancel()V,,,,,,,,,,,,,,,,,,,
Landroid/transition/Transition;->end()V,,,,,,,,,,,,,,,,,,,
Landroid/transition/Transition;->getRunningAnimators()Landroid/util/ArrayMap;,,,,,,,,,,,,,,,,,,,
Landroid/transition/TransitionManager;->getRunningTransitions()Landroid/util/ArrayMap;,,,,,,,,,,,,,,,,,,,
Landroid/util/EventLog$Event;-><init>([B)V,,,,,,,,,,,,,,,,,,,
Landroid/util/IconDrawableFactory;->getBadgedIcon(Landroid/content/pm/ApplicationInfo;)Landroid/graphics/drawable/Drawable;,,,,,,,,,,,,,,,,,,,
Landroid/util/LocalLog$ReadOnlyLocalLog;->dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Landroid/util/LocalLog;->readOnlyLocalLog()Landroid/util/LocalLog$ReadOnlyLocalLog;,,,,,,,,,,,,,,,,,,,
Landroid/util/LogWriter;-><init>(ILjava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Landroid/util/LongArray;->add(IJ)V,,,,,,,,,,,,,,,,,,,
Landroid/util/LongArray;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/util/LongArray;->size()I,,,,,,,,,,,,,,,,,,,
Landroid/util/NtpTrustedTime;->currentTimeMillis()J,,,,,,,,,,,,,,,,,,,
Landroid/util/NtpTrustedTime;->forceRefresh()Z,,,,,,,,,,,,,,,,,,,
Landroid/util/NtpTrustedTime;->getCachedNtpTime()J,,,,,,,,,,,,,,,,,,,
Landroid/util/NtpTrustedTime;->getCachedNtpTimeReference()J,,,,,,,,,,,,,,,,,,,
Landroid/util/NtpTrustedTime;->hasCache()Z,,,,,,,,,,,,,,,,,,,
Landroid/util/PathParser;->createPathFromPathData(Ljava/lang/String;)Landroid/graphics/Path;,,,,,,,,,,,,,,,,,,,
Landroid/util/Rational;->mDenominator:I,,,,,,,,,,,,,,,,,,,
Landroid/util/Rational;->mNumerator:I,,,,,,,,,,,,,,,,,,,
Landroid/util/RecurrenceRule;->buildRecurringMonthly(ILjava/time/ZoneId;)Landroid/util/RecurrenceRule;,,,,,,,,,,,,,,,,,,,
Landroid/util/RecurrenceRule;->start:Ljava/time/ZonedDateTime;,,,,,,,,,,,,,,,,,,,
Landroid/util/Slog;->println(ILjava/lang/String;Ljava/lang/String;)I,,,,,,,,,,,,,,,,,,,
Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I,,,,,,,,,,,,,,,,,,,
Landroid/util/TimeUtils;->logTimeOfDay(J)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/util/TrustedTime;->getCacheAge()J,,,,,,,,,,,,,,,,,,,
Landroid/view/accessibility/AccessibilityInteractionClient;->clearCache()V,,,,,,,,,,,,,,,,,,,
Landroid/view/accessibility/AccessibilityInteractionClient;->getInstance()Landroid/view/accessibility/AccessibilityInteractionClient;,,,,,,,,,,,,,,,,,,,
Landroid/view/accessibility/AccessibilityInteractionClient;->setSameThreadMessage(Landroid/os/Message;)V,,,,,,,,,,,,,,,,,,,
Landroid/view/accessibility/AccessibilityManager;->DALTONIZER_SIMULATE_MONOCHROMACY:I,,,,,,,,,,,,,,,,,,,
Landroid/view/accessibility/AccessibilityNodeInfo;->getAccessibilityViewId(J)I,,,,,,,,,,,,,,,,,,,
Landroid/view/accessibility/AccessibilityNodeInfo;->getVirtualDescendantId(J)I,,,,,,,,,,,,,,,,,,,
Landroid/view/accessibility/AccessibilityNodeInfo;->mSealed:Z,,,,,,,,,,,,,,,,,,,
Landroid/view/accessibility/AccessibilityNodeInfo;->refresh(Landroid/os/Bundle;Z)Z,,,,,,,,,,,,,,,,,,,
Landroid/view/accessibility/IAccessibilityInteractionConnectionCallback;->setFindAccessibilityNodeInfoResult(Landroid/view/accessibility/AccessibilityNodeInfo;I)V,,,,,,,,,,,,,,,,,,,
Landroid/view/accessibility/IAccessibilityInteractionConnectionCallback;->setFindAccessibilityNodeInfosResult(Ljava/util/List;I)V,,,,,,,,,,,,,,,,,,,
Landroid/view/accessibility/IAccessibilityInteractionConnectionCallback;->setPerformAccessibilityActionResult(ZI)V,,,,,,,,,,,,,,,,,,,
Landroid/view/accessibility/IAccessibilityManager;->getEnabledAccessibilityServiceList(II)Ljava/util/List;,,,,,,,,,,,,,,,,,,,
Landroid/view/AccessibilityIterators$AbstractTextSegmentIterator;-><init>()V,,,,,,,,,,,,,,,,,,,
Landroid/view/AccessibilityIterators$AbstractTextSegmentIterator;->mText:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/view/Choreographer$CallbackRecord;->run(J)V,,,,,,,,,,,,,,,,,,,
Landroid/view/Choreographer;->scheduleVsyncLocked()V,,,,,,,,,,,,,,,,,,,
Landroid/view/Display$HdrCapabilities;-><init>([IFFF)V,,,,,,,,,,,,,,,,,,,
Landroid/view/Display$Mode;-><init>(IIIF)V,,,,,,,,,,,,,,,,,,,
Landroid/view/DisplayEventReceiver;->dispatchHotplug(JJZ)V,,,,,,,,,,,,,,,,,,,
Landroid/view/Display;->TYPE_EXTERNAL:I,,,,,,,,,,,,,,,,,,,
Landroid/view/DragEvent;->mClipData:Landroid/content/ClipData;,,,,,,,,,,,,,,,,,,,
Landroid/view/DragEvent;->mClipDescription:Landroid/content/ClipDescription;,,,,,,,,,,,,,,,,,,,
Landroid/view/DragEvent;->obtain(Landroid/view/DragEvent;)Landroid/view/DragEvent;,,,,,,,,,,,,,,,,,,,
Landroid/view/FrameMetrics;->mTimingData:[J,,,,,,,,,,,,,,,,,,,
Landroid/view/InputChannel;->mPtr:J,,,,,,,,,,,,,,,,,,,
Landroid/view/InputDevice;->addMotionRange(IIFFFFF)V,,,,,,,,,,,,,,,,,,,
Landroid/view/InputDevice;-><init>(IIILjava/lang/String;IILjava/lang/String;ZIILandroid/view/KeyCharacterMap;ZZZ)V,,,,,,,,,,,,,,,,,,,
Landroid/view/InputEventReceiver;->dispatchInputEvent(ILandroid/view/InputEvent;)V,,,,,,,,,,,,,,,,,,,
Landroid/view/InputEventReceiver;->onInputEvent(Landroid/view/InputEvent;)V,,,,,,,,,,,,,,,,,,,
Landroid/view/InputEventSender;->dispatchInputEventFinished(IZ)V,,,,,,,,,,,,,,,,,,,
Landroid/view/InputFilter;-><init>(Landroid/os/Looper;)V,,,,,,,,,,,,,,,,,,,
Landroid/view/InputFilter;->onInputEvent(Landroid/view/InputEvent;I)V,,,,,,,,,,,,,,,,,,,
Landroid/view/inputmethod/InputMethodManager;->isCursorAnchorInfoEnabled()Z,,,,,,,,,,,,,,,,,,,
Landroid/view/inputmethod/InputMethodManager;->setUpdateCursorAnchorInfoMode(I)V,,,,,,,,,,,,,,,,,,,
Landroid/view/InputQueue;->finishInputEvent(JZ)V,,,,,,,,,,,,,,,,,,,
Landroid/view/IRecentsAnimationRunner;->onAnimationCanceled(Landroid/app/ActivityManager$TaskSnapshot;)V,,,,,,,,,,,,,,,,,,,
Landroid/view/IRecentsAnimationRunner;->onAnimationStart(Landroid/view/IRecentsAnimationController;[Landroid/view/RemoteAnimationTarget;[Landroid/view/RemoteAnimationTarget;Landroid/graphics/Rect;Landroid/graphics/Rect;)V,,,,,,,,,,,,,,,,,,,
Landroid/view/IRemoteAnimationRunner;->onAnimationCancelled()V,,,,,,,,,,,,,,,,,,,
Landroid/view/IRemoteAnimationRunner;->onAnimationStart([Landroid/view/RemoteAnimationTarget;[Landroid/view/RemoteAnimationTarget;Landroid/view/IRemoteAnimationFinishedCallback;)V,,,,,,,,,,,,,,,,,,,
Landroid/view/IWindowManager;->endProlongedAnimations()V,,,,,,,,,,,,,,,,,,,
Landroid/view/IWindowManager;->getAnimationScales()[F,,,,,,,,,,,,,,,,,,,
Landroid/view/IWindowManager;->isKeyguardSecure(I)Z,,,,,,,,,,,,,,,,,,,
Landroid/view/IWindowManager;->lockNow(Landroid/os/Bundle;)V,,,,,,,,,,,,,,,,,,,
Landroid/view/IWindowManager;->setAnimationScales([F)V,,,,,,,,,,,,,,,,,,,
Landroid/view/IWindowManager;->setStrictModeVisualIndicatorPreference(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Landroid/view/IWindowSession;->performDrag(Landroid/view/IWindow;ILandroid/view/SurfaceControl;IFFFFLandroid/content/ClipData;)Landroid/os/IBinder;,,,,,,,,,,,,,,,,,,,
Landroid/view/KeyCharacterMap$FallbackAction;->keyCode:I,,,,,,,,,,,,,,,,,,,
Landroid/view/KeyCharacterMap$FallbackAction;->metaState:I,,,,,,,,,,,,,,,,,,,
Landroid/view/KeyCharacterMap;-><init>(J)V,,,,,,,,,,,,,,,,,,,
Landroid/view/KeyEvent;->mAction:I,,,,,,,,,,,,,,,,,,,
Landroid/view/KeyEvent;->mCharacters:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/view/KeyEvent;->mDeviceId:I,,,,,,,,,,,,,,,,,,,
Landroid/view/KeyEvent;->mDownTime:J,,,,,,,,,,,,,,,,,,,
Landroid/view/KeyEvent;->META_ALL_MASK:I,,,,,,,,,,,,,,,,,,,
Landroid/view/KeyEvent;->META_ALT_LOCKED:I,,,,,,,,,,,,,,,,,,,
Landroid/view/KeyEvent;->META_CAP_LOCKED:I,,,,,,,,,,,,,,,,,,,
Landroid/view/KeyEvent;->META_INVALID_MODIFIER_MASK:I,,,,,,,,,,,,,,,,,,,
Landroid/view/KeyEvent;->META_LOCK_MASK:I,,,,,,,,,,,,,,,,,,,
Landroid/view/KeyEvent;->META_MODIFIER_MASK:I,,,,,,,,,,,,,,,,,,,
Landroid/view/KeyEvent;->META_SELECTING:I,,,,,,,,,,,,,,,,,,,
Landroid/view/KeyEvent;->META_SYMBOLIC_NAMES:[Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/view/KeyEvent;->META_SYM_LOCKED:I,,,,,,,,,,,,,,,,,,,
Landroid/view/KeyEvent;->META_SYNTHETIC_MASK:I,,,,,,,,,,,,,,,,,,,
Landroid/view/KeyEvent;->mEventTime:J,,,,,,,,,,,,,,,,,,,
Landroid/view/KeyEvent;->mKeyCode:I,,,,,,,,,,,,,,,,,,,
Landroid/view/KeyEvent;->mMetaState:I,,,,,,,,,,,,,,,,,,,
Landroid/view/KeyEvent;->mRepeatCount:I,,,,,,,,,,,,,,,,,,,
Landroid/view/KeyEvent;->mScanCode:I,,,,,,,,,,,,,,,,,,,
Landroid/view/KeyEvent;->obtain(JJIIIIIIIILjava/lang/String;)Landroid/view/KeyEvent;,,,,,,,,,,,,,,,,,,,
Landroid/view/LayoutInflater;->createViewFromTag(Landroid/view/View;Ljava/lang/String;Landroid/content/Context;Landroid/util/AttributeSet;)Landroid/view/View;,,,,,,,,,,,,,,,,,,,
Landroid/view/LayoutInflater;->createViewFromTag(Landroid/view/View;Ljava/lang/String;Landroid/content/Context;Landroid/util/AttributeSet;Z)Landroid/view/View;,,,,,,,,,,,,,,,,,,,
Landroid/view/LayoutInflater;->tryCreateView(Landroid/view/View;Ljava/lang/String;Landroid/content/Context;Landroid/util/AttributeSet;)Landroid/view/View;,,,,,,,,,,,,,,,,,,,
Landroid/view/MotionEvent;->HISTORY_CURRENT:I,,,,,,,,,,,,,,,,,,,
Landroid/view/NotificationHeaderView;-><init>(Landroid/content/Context;Landroid/util/AttributeSet;)V,,,,,,,,,,,,,,,,,,,
Landroid/view/PointerIcon;->mBitmapFrames:[Landroid/graphics/Bitmap;,,,,,,,,,,,,,,,,,,,
Landroid/view/PointerIcon;->mBitmap:Landroid/graphics/Bitmap;,,,,,,,,,,,,,,,,,,,
Landroid/view/PointerIcon;->mDurationPerFrame:I,,,,,,,,,,,,,,,,,,,
Landroid/view/PointerIcon;->mHotSpotX:F,,,,,,,,,,,,,,,,,,,
Landroid/view/PointerIcon;->mHotSpotY:F,,,,,,,,,,,,,,,,,,,
Landroid/view/RemoteAnimationAdapter;-><init>(Landroid/view/IRemoteAnimationRunner;JJZ)V,,,,,,,,,,,,,,,,,,,
Landroid/view/RemoteAnimationTarget;->startBounds:Landroid/graphics/Rect;,,,,,,,,,,,,,,,,,,,
Landroid/view/RemoteAnimationTarget;->startLeash:Landroid/view/SurfaceControl;,,,,,,,,,,,,,,,,,,,
Landroid/view/SurfaceControl$Transaction;->setCornerRadius(Landroid/view/SurfaceControl;F)Landroid/view/SurfaceControl$Transaction;,,,,,,,,,,,,,,,,,,,
Landroid/view/SurfaceControl;->HIDDEN:I,,,,,,,,,,,,,,,,,,,
Landroid/view/Surface;-><init>(J)V,,,,,,,,,,,,,,,,,,,
Landroid/view/Surface;->mLockedObject:J,,,,,,,,,,,,,,,,,,,
Landroid/view/Surface;->nativeRelease(J)V,,,,,,,,,,,,,,,,,,,
Landroid/view/SurfaceSession;->mNativeClient:J,,,,,,,,,,,,,,,,,,,
Landroid/view/textclassifier/TextClassificationManager;->getTextClassifier(I)Landroid/view/textclassifier/TextClassifier;,,,,,,,,,,,,,,,,,,,
Landroid/view/textservice/SpellCheckerSession;->mSpellCheckerSessionListener:Landroid/view/textservice/SpellCheckerSession$SpellCheckerSessionListener;,,,,,,,,,,,,,,,,,,,
Landroid/view/textservice/TextServicesManager;->getEnabledSpellCheckers()[Landroid/view/textservice/SpellCheckerInfo;,,,,,,,,,,,,,,,,,,,
Landroid/view/TextureView;->destroyHardwareLayer()V,,,,,,,,,,,,,,,,,,,
Landroid/view/TextureView;->mNativeWindow:J,,,,,,,,,,,,,,,,,,,
Landroid/view/TextureView;->mOpaque:Z,,,,,,,,,,,,,,,,,,,
Landroid/view/TextureView;->mUpdateSurface:Z,,,,,,,,,,,,,,,,,,,
Landroid/view/TextureView;->nCreateNativeWindow(Landroid/graphics/SurfaceTexture;)V,,,,,,,,,,,,,,,,,,,
Landroid/view/TextureView;->nDestroyNativeWindow()V,,,,,,,,,,,,,,,,,,,
Landroid/view/TextureView;->onDetachedFromWindowInternal()V,,,,,,,,,,,,,,,,,,,
Landroid/view/VelocityTracker$Estimator;->confidence:F,,,,,,,,,,,,,,,,,,,
Landroid/view/VelocityTracker$Estimator;->degree:I,,,,,,,,,,,,,,,,,,,
Landroid/view/VelocityTracker$Estimator;->xCoeff:[F,,,,,,,,,,,,,,,,,,,
Landroid/view/VelocityTracker$Estimator;->yCoeff:[F,,,,,,,,,,,,,,,,,,,
Landroid/view/View$AccessibilityDelegate;->createAccessibilityNodeInfo(Landroid/view/View;)Landroid/view/accessibility/AccessibilityNodeInfo;,,,,,,,,,,,,,,,,,,,
Landroid/view/View$AttachInfo;->mDisplayState:I,,,,,,,,,,,,,,,,,,,
Landroid/view/View$DragShadowBuilder;->mView:Ljava/lang/ref/WeakReference;,,,,,,,,,,,,,,,,,,,
Landroid/view/View$ListenerInfo;->mOnCreateContextMenuListener:Landroid/view/View$OnCreateContextMenuListener;,,,,,,,,,,,,,,,,,,,
Landroid/view/View$ListenerInfo;->mOnDragListener:Landroid/view/View$OnDragListener;,,,,,,,,,,,,,,,,,,,
Landroid/view/View$ListenerInfo;->mOnGenericMotionListener:Landroid/view/View$OnGenericMotionListener;,,,,,,,,,,,,,,,,,,,
Landroid/view/View$ListenerInfo;->mOnHoverListener:Landroid/view/View$OnHoverListener;,,,,,,,,,,,,,,,,,,,
Landroid/view/View$ScrollabilityCache;->state:I,,,,,,,,,,,,,,,,,,,
Landroid/view/View;->applyDrawableToTransparentRegion(Landroid/graphics/drawable/Drawable;Landroid/graphics/Region;)V,,,,,,,,,,,,,,,,,,,
Landroid/view/ViewConfiguration;->getHoverTapSlop()I,,,,,,,,,,,,,,,,,,,
Landroid/view/View;->DBG:Z,,,,,,,,,,,,,,,,,,,
Landroid/view/ViewDebug;->dump(Landroid/view/View;ZZLjava/io/OutputStream;)V,,,,,,,,,,,,,,,,,,,
Landroid/view/ViewDebug;->getViewRootImplCount()J,,,,,,,,,,,,,,,,,,,
Landroid/view/View;->destroyHardwareResources()V,,,,,,,,,,,,,,,,,,,
Landroid/view/View;->dispatchPointerEvent(Landroid/view/MotionEvent;)Z,,,,,,,,,,,,,,,,,,,
Landroid/view/View;->fitsSystemWindows()Z,,,,,,,,,,,,,,,,,,,
Landroid/view/View;->getInverseMatrix()Landroid/graphics/Matrix;,,,,,,,,,,,,,,,,,,,
Landroid/view/View;->getIteratorForGranularity(I)Landroid/view/AccessibilityIterators$TextSegmentIterator;,,,,,,,,,,,,,,,,,,,
Landroid/view/View;->getRawTextAlignment()I,,,,,,,,,,,,,,,,,,,
Landroid/view/View;->getRawTextDirection()I,,,,,,,,,,,,,,,,,,,
Landroid/view/View;->getScrollCache()Landroid/view/View$ScrollabilityCache;,,,,,,,,,,,,,,,,,,,
Landroid/view/View;->getThreadedRenderer()Landroid/view/ThreadedRenderer;,,,,,,,,,,,,,,,,,,,
Landroid/view/ViewGroup;->DBG:Z,,,,,,,,,,,,,,,,,,,
Landroid/view/ViewGroup;->dispatchDetachedFromWindow()V,,,,,,,,,,,,,,,,,,,
Landroid/view/ViewGroup;->encodeProperties(Landroid/view/ViewHierarchyEncoder;)V,,,,,,,,,,,,,,,,,,,
Landroid/view/ViewGroup;->onInitializeAccessibilityNodeInfoInternal(Landroid/view/accessibility/AccessibilityNodeInfo;)V,,,,,,,,,,,,,,,,,,,
Landroid/view/ViewGroup;->resolvePadding()V,,,,,,,,,,,,,,,,,,,
Landroid/view/ViewGroup;->transformPointToViewLocal([FLandroid/view/View;)V,,,,,,,,,,,,,,,,,,,
Landroid/view/View;->hasRtlSupport()Z,,,,,,,,,,,,,,,,,,,
Landroid/view/View;->hideTooltip()V,,,,,,,,,,,,,,,,,,,
Landroid/view/View;->invalidateParentIfNeeded()V,,,,,,,,,,,,,,,,,,,
Landroid/view/View;->isInScrollingContainer()Z,,,,,,,,,,,,,,,,,,,
Landroid/view/View;->isVisibleToUser(Landroid/graphics/Rect;)Z,是,"【应用商店】判断本视图是否被用户可见，我们有一个基础空间用到了一个
View的隐藏属性。具体设计到的业务：详情页，广告页，搜索页面",,,,,,,,,,,,,,,,,
Landroid/view/View;->mAccessibilityViewId:I,,,,,,,,,,,,,,,,,,,
Landroid/view/View;->mBackground:Landroid/graphics/drawable/Drawable;,,,,,,,,,,,,,,,,,,,
Landroid/view/View;->mCachingFailed:Z,,,,,,,,,,,,,,,,,,,
Landroid/view/View;->mTag:Ljava/lang/Object;,,,,,,,,,,,,,,,,,,,
Landroid/view/View;->notifyViewAccessibilityStateChangedIfNeeded(I)V,,,,,,,,,,,,,,,,,,,
Landroid/view/View;->onDetachedFromWindowInternal()V,,,,,,,,,,,,,,,,,,,
Landroid/view/View;->onDrawHorizontalScrollBar(Landroid/graphics/Canvas;Landroid/graphics/drawable/Drawable;IIII)V,,,,,,,,,,,,,,,,,,,
Landroid/view/View;->onFocusLost()V,,,,,,,,,,,,,,,,,,,
Landroid/view/ViewOverlay;->getOverlayView()Landroid/view/ViewGroup;,,,,,,,,,,,,,,,,,,,
Landroid/view/ViewOverlay;->isEmpty()Z,,,,,,,,,,,,,,,,,,,
Landroid/view/View;->resetDisplayList()V,,,,,,,,,,,,,,,,,,,
Landroid/view/View;->resolvePadding()V,,,,,,,,,,,,,,,,,,,
Landroid/view/ViewRootImpl;->addConfigCallback(Landroid/view/ViewRootImpl$ConfigChangedCallback;)V,,,,,,,,,,,,,,,,,,,
Landroid/view/ViewRootImpl;->cancelInvalidate(Landroid/view/View;)V,,,,,,,,,,,,,,,,,,,
Landroid/view/ViewRootImpl;->dispatchInputEvent(Landroid/view/InputEvent;Landroid/view/InputEventReceiver;)V,,,,,,,,,,,,,,,,,,,
Landroid/view/ViewRootImpl;->dispatchInputEvent(Landroid/view/InputEvent;)V,,,,,,,,,,,,,,,,,,,
Landroid/view/ViewRootImpl;->dispatchResized(Landroid/window/ClientWindowFrames;ZLandroid/util/MergedConfiguration;ZZI)V,,,,,,,,,,,,,,,,,,,
Landroid/view/ViewRootImpl;->enqueueInputEvent(Landroid/view/InputEvent;)V,,,,,,,,,,,,,,,,,,,
Landroid/view/ViewRootImpl;->ensureTouchMode(Z)Z,,,,,,,,,,,,,,,,,,,
Landroid/view/ViewRootImpl;->getWindowFlags()I,,,,,,,,,,,,,,,,,,,
Landroid/view/ViewRootImpl;->mDirty:Landroid/graphics/Rect;,,,,,,,,,,,,,,,,,,,
Landroid/view/ViewRootImpl;->mHeight:I,,,,,,,,,,,,,,,,,,,
Landroid/view/ViewRootImpl;->mWidth:I,,,,,,,,,,,,,,,,,,,
Landroid/view/ViewRootImpl;->scheduleTraversals()V,,,,,,,,,,,,,,,,,,,
Landroid/view/ViewRootImpl;->setLocalDragState(Ljava/lang/Object;)V,,,,,,,,,,,,,,,,,,,
Landroid/view/ViewRootImpl;->sRunQueues:Ljava/lang/ThreadLocal;,,,,,,,,,,,,,,,,,,,
Landroid/view/View;->setDisabledSystemUiVisibility(I)V,,,,,,,,,,,,,,,,,,,
Landroid/view/View;->STATUS_BAR_DISABLE_EXPAND:I,,,,,,,,,,,,,,,,,,,
Landroid/view/View;->toGlobalMotionEvent(Landroid/view/MotionEvent;)Z,,,,,,,,,,,,,,,,,,,
Landroid/view/View;->toLocalMotionEvent(Landroid/view/MotionEvent;)Z,,,,,,,,,,,,,,,,,,,
Landroid/view/ViewTreeObserver$InternalInsetsInfo;->TOUCHABLE_INSETS_REGION:I,,,,,,,,,,,,,,,,,,,
Landroid/view/ViewTreeObserver$InternalInsetsInfo;->touchableRegion:Landroid/graphics/Region;,,,,,,,,,,,,,,,,,,,
Landroid/view/ViewTreeObserver;->mOnGlobalLayoutListeners:Landroid/view/ViewTreeObserver$CopyOnWriteArray;,,,,,,,,,,,,,,,,,,,
Landroid/view/View;->updateDisplayListIfDirty()Landroid/graphics/RenderNode;,,,,,,,,,,,,,,,,,,,
Landroid/view/Window;->addPrivateFlags(I)V,,,,,,,,,,,,,,,,,,,
Landroid/view/WindowAnimationFrameStats;->init(J[J)V,,,,,,,,,,,,,,,,,,,
Landroid/view/WindowContentFrameStats;->init(J[J[J[J)V,,,,,,,,,,,,,,,,,,,
Landroid/view/Window;->FEATURE_MAX:I,,,,,,,,,,,,,,,,,,,
Landroid/view/Window;->isDestroyed()Z,,,,,,,,,,,,,,,,,,,
Landroid/view/WindowManager$LayoutParams;->INPUT_FEATURE_DISABLE_USER_ACTIVITY:I,,,,,,,,,,,,,,,,,,,
Landroid/view/WindowManager$LayoutParams;->subtreeSystemUiVisibility:I,,,,,,,,,,,,,,,,,,,
Landroid/view/WindowManager$LayoutParams;->TYPE_DISPLAY_OVERLAY:I,,,,,,,,,,,,,,,,,,,
Landroid/view/WindowManager$LayoutParams;->TYPE_SECURE_SYSTEM_OVERLAY:I,,,,,,,,,,,,,,,,,,,
Landroid/view/WindowManagerGlobal;->getRootViews(Landroid/os/IBinder;)Ljava/util/ArrayList;,,,,,,,,,,,,,,,,,,,
Landroid/view/WindowManagerGlobal;->removeView(Landroid/view/View;Z)V,,,,,,,,,,,,,,,,,,,
Landroid/webkit/IWebViewUpdateService;->getCurrentWebViewPackageName()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Landroid/webkit/IWebViewUpdateService;->getValidWebViewPackages()[Landroid/webkit/WebViewProviderInfo;,,,,,,,,,,,,,,,,,,,
Landroid/webkit/PluginData;->getContentLength()J,,,,,,,,,,,,,,,,,,,
Landroid/webkit/PluginData;->getHeaders()Ljava/util/Map;,,,,,,,,,,,,,,,,,,,
Landroid/webkit/PluginData;->getInputStream()Ljava/io/InputStream;,,,,,,,,,,,,,,,,,,,
Landroid/webkit/PluginData;->getStatusCode()I,,,,,,,,,,,,,,,,,,,
Landroid/webkit/UrlInterceptRegistry;->getPluginData(Ljava/lang/String;Ljava/util/Map;)Landroid/webkit/PluginData;,,,,,,,,,,,,,,,,,,,
Landroid/webkit/WebResourceResponse;->mStatusCode:I,,,,,,,,,,,,,,,,,,,
Landroid/webkit/WebViewFactory;->getProviderClass()Ljava/lang/Class;,,,,,,,,,,,,,,,,,,,
Landroid/webkit/WebView;-><init>(Landroid/content/Context;Landroid/util/AttributeSet;IILjava/util/Map;Z)V,,,,,,,,,,,,,,,,,,,
Landroid/webkit/WebView;->mWebViewThread:Landroid/os/Looper;,,,,,,,,,,,,,,,,,,,
Landroid/webkit/WebView;->sEnforceThreadChecking:Z,,,,,,,,,,,,,,,,,,,
Landroid/widget/AbsListView$LayoutParams;->scrappedFromPosition:I,,,,,,,,,,,,,,,,,,,
Landroid/widget/AbsListView;->canScrollDown()Z,,,,,,,,,,,,,,,,,,,
Landroid/widget/AbsListView;->canScrollUp()Z,,,,,,,,,,,,,,,,,,,
Landroid/widget/AbsListView;->isVerticalScrollBarHidden()Z,,,,,,,,,,,,,,,,,,,
Landroid/widget/AbsListView;->mChoiceActionMode:Landroid/view/ActionMode;,,,,,,,,,,,,,,,,,,,
Landroid/widget/AbsListView;->mDataSetObserver:Landroid/widget/AbsListView$AdapterDataSetObserver;,,,,,,,,,,,,,,,,,,,
Landroid/widget/AbsListView;->mPositionScroller:Landroid/widget/AbsListView$AbsPositionScroller;,,,,,,,,,,,,,,,,,,,
Landroid/widget/AbsListView;->performLongPress(Landroid/view/View;IJFF)Z,,,,,,,,,,,,,,,,,,,
Landroid/widget/AbsSeekBar;->drawThumb(Landroid/graphics/Canvas;)V,,,,,,,,,,,,,,,,,,,
Landroid/widget/ActionMenuPresenter;->dismissPopupMenus()Z,,,,,,,,,,,,,,,,,,,
Landroid/widget/ActionMenuPresenter;->isOverflowMenuShowing()Z,,,,,,,,,,,,,,,,,,,
Landroid/widget/ActionMenuPresenter;->onRestoreInstanceState(Landroid/os/Parcelable;)V,,,,,,,,,,,,,,,,,,,
Landroid/widget/ActionMenuPresenter;->onSaveInstanceState()Landroid/os/Parcelable;,,,,,,,,,,,,,,,,,,,
Landroid/widget/ActionMenuView$ActionMenuChildView;->needsDividerBefore()Z,,,,,,,,,,,,,,,,,,,
Landroid/widget/ActionMenuView$LayoutParams;->cellsUsed:I,,,,,,,,,,,,,,,,,,,
Landroid/widget/ActionMenuView$LayoutParams;->expandable:Z,,,,,,,,,,,,,,,,,,,
Landroid/widget/ActionMenuView$LayoutParams;->expanded:Z,,,,,,,,,,,,,,,,,,,
Landroid/widget/ActionMenuView$LayoutParams;->extraPixels:I,,,,,,,,,,,,,,,,,,,
Landroid/widget/ActionMenuView$LayoutParams;->isOverflowButton:Z,,,,,,,,,,,,,,,,,,,
Landroid/widget/ActionMenuView$LayoutParams;->preventEdgeOffset:Z,,,,,,,,,,,,,,,,,,,
Landroid/widget/ActionMenuView;->hasDividerBeforeChildAt(I)Z,,,,,,,,,,,,,,,,,,,
Landroid/widget/ActivityChooserModel;->setIntent(Landroid/content/Intent;)V,,,,,,,,,,,,,,,,,,,
Landroid/widget/ActivityChooserModel;->setOnChooseActivityListener(Landroid/widget/ActivityChooserModel$OnChooseActivityListener;)V,,,,,,,,,,,,,,,,,,,
Landroid/widget/AutoCompleteTextView;->mHintView:Landroid/widget/TextView;,,,,,,,,,,,,,,,,,,,
Landroid/widget/AutoCompleteTextView;->setDropDownDismissedOnCompletion(Z)V,,,,,,,,,,,,,,,,,,,
Landroid/widget/AutoCompleteTextView;->showDropDownAfterLayout()V,,,,,,,,,,,,,,,,,,,
Landroid/widget/DatePickerSpinnerDelegate;->notifyDateChanged()V,,,,,,,,,,,,,,,,,,,
Landroid/widget/DatePickerSpinnerDelegate;->setDate(III)V,,,,,,,,,,,,,,,,,,,
Landroid/widget/DatePickerSpinnerDelegate;->updateCalendarView()V,,,,,,,,,,,,,,,,,,,
Landroid/widget/DatePickerSpinnerDelegate;->updateInputState()V,,,,,,,,,,,,,,,,,,,
Landroid/widget/DatePickerSpinnerDelegate;->updateSpinners()V,,,,,,,,,,,,,,,,,,,
Landroid/widget/DateTimeView;-><init>(Landroid/content/Context;Landroid/util/AttributeSet;)V,,,,,,,,,,,,,,,,,,,
Landroid/widget/EdgeEffect;->mGlowScaleY:F,,,,,,,,,,,,,,,,,,,
Landroid/widget/Editor;->mCreatedWithASelection:Z,,,,,,,,,,,,,,,,,,,
Landroid/widget/Editor;->mShowSoftInputOnFocus:Z,,,,,,,,,,,,,,,,,,,
Landroid/widget/FastScroller;->mTrackDrawable:Landroid/graphics/drawable/Drawable;,,,,,,,,,,,,,,,,,,,
Landroid/widget/GridLayout;->UNDEFINED_ALIGNMENT:Landroid/widget/GridLayout$Alignment;,,,,,,,,,,,,,,,,,,,
Landroid/widget/GridView;->determineColumns(I)Z,,,,,,,,,,,,,,,,,,,
Landroid/widget/HorizontalScrollView;->mOverflingDistance:I,,,,,,,,,,,,,,,,,,,
Landroid/widget/HorizontalScrollView;->mOverscrollDistance:I,,,,,,,,,,,,,,,,,,,
Landroid/widget/ImageView;->mRecycleableBitmapDrawable:Landroid/graphics/drawable/BitmapDrawable;,,,,,,,,,,,,,,,,,,,
Landroid/widget/LinearLayout;->INDEX_BOTTOM:I,,,,,,,,,,,,,,,,,,,
Landroid/widget/LinearLayout;->INDEX_TOP:I,,,,,,,,,,,,,,,,,,,
Landroid/widget/ListPopupWindow;->buildDropDown()I,,,,,,,,,,,,,,,,,,,
Landroid/widget/ListPopupWindow;->isDropDownAlwaysVisible()Z,,,,,,,,,,,,,,,,,,,
Landroid/widget/ListPopupWindow;->setDropDownAlwaysVisible(Z)V,,,,,,,,,,,,,,,,,,,
Landroid/widget/ListPopupWindow;->setListItemExpandMax(I)V,,,,,,,,,,,,,,,,,,,
Landroid/widget/ListView;->getHeightForPosition(I)I,,,,,,,,,,,,,,,,,,,
Landroid/widget/ListView;->trackMotionScroll(II)Z,,,,,,,,,,,,,,,,,,,
Landroid/widget/NumberPicker;->mFlingScroller:Landroid/widget/Scroller;,,,,,,,,,,,,,,,,,,,
Landroid/widget/NumberPicker;->mMaximumFlingVelocity:I,,,,,,,,,,,,,,,,,,,
Landroid/widget/NumberPicker;->mMaxValue:I,,,,,,,,,,,,,,,,,,,
Landroid/widget/NumberPicker;->mMinHeight:I,,,,,,,,,,,,,,,,,,,
Landroid/widget/NumberPicker;->mMinWidth:I,,,,,,,,,,,,,,,,,,,
Landroid/widget/NumberPicker;->mOnValueChangeListener:Landroid/widget/NumberPicker$OnValueChangeListener;,,,,,,,,,,,,,,,,,,,
Landroid/widget/NumberPicker;->mTextSize:I,,,,,,,,,,,,,,,,,,,
Landroid/widget/OverScroller;->mInterpolator:Landroid/view/animation/Interpolator;,,,,,,,,,,,,,,,,,,,
Landroid/widget/PopupMenu;->mContext:Landroid/content/Context;,,,,,,,,,,,,,,,,,,,
Landroid/widget/PopupWindow;->mNotTouchModal:Z,,,,,,,,,,,,,,,,,,,
Landroid/widget/ProgressBar;->mMirrorForRtl:Z,,,,,,,,,,,,,,,,,,,
Landroid/widget/ProgressBar;->refreshProgress(IIZZ)V,,,,,,,,,,,,,,,,,,,
Landroid/widget/RemoteViews$Action;->mergeBehavior()I,,,,,,,,,,,,,,,,,,,
Landroid/widget/RemoteViews$BitmapCache;->mBitmaps:Ljava/util/ArrayList;,,,,,,,,,,,,,,,,,,,
Landroid/widget/RemoteViews$BitmapReflectionAction;->bitmap:Landroid/graphics/Bitmap;,,,,,,,,,,,,,,,,,,,
Landroid/widget/RemoteViews$SetPendingIntentTemplate;->pendingIntentTemplate:Landroid/app/PendingIntent;,,,,,,,,,,,,,,,,,,,
Landroid/widget/RemoteViews$ViewGroupActionAdd;->mNestedViews:Landroid/widget/RemoteViews;,,,,,,,,,,,,,,,,,,,
Landroid/widget/RemoteViewsAdapter;->getRemoteViewsServiceIntent()Landroid/content/Intent;,,,,,,,,,,,,,,,,,,,
Landroid/widget/RemoteViewsAdapter;->isDataReady()Z,,,,,,,,,,,,,,,,,,,
Landroid/widget/RemoteViewsAdapter;->mCache:Landroid/widget/RemoteViewsAdapter$FixedSizeRemoteViewsCache;,,,,,,,,,,,,,,,,,,,
Landroid/widget/RemoteViewsAdapter;->mWorkerThread:Landroid/os/HandlerThread;,,,,,,,,,,,,,,,,,,,
Landroid/widget/RemoteViewsAdapter;->saveRemoteViewsCache()V,,,,,,,,,,,,,,,,,,,
Landroid/widget/RemoteViewsAdapter;->setRemoteViewsOnClickHandler(Landroid/widget/RemoteViews$OnClickHandler;)V,,,,,,,,,,,,,,,,,,,
Landroid/widget/RemoteViewsAdapter;->setVisibleRangeHint(II)V,,,,,,,,,,,,,,,,,,,
Landroid/widget/RemoteViews;->estimateMemoryUsage()I,,,,,,,,,,,,,,,,,,,
Landroid/widget/RemoteViews;->mergeRemoteViews(Landroid/widget/RemoteViews;)V,,,,,,,,,,,,,,,,,,,
Landroid/widget/RemoteViews;->mPortrait:Landroid/widget/RemoteViews;,,,,,,,,,,,,,,,,,,,
Landroid/widget/RemoteViews;->setRemoteAdapter(ILjava/util/ArrayList;I)V,,,,,,,,,,,,,,,,,,,
Landroid/widget/ScrollView;->mFlingStrictSpan:Landroid/os/StrictMode$Span;,,,,,,,,,,,,,,,,,,,
Landroid/widget/SearchView$SearchAutoComplete;-><init>(Landroid/content/Context;Landroid/util/AttributeSet;)V,,,,,,,,,,,,,,,,,,,
Landroid/widget/SeekBar;->onProgressRefresh(FZI)V,,,,,,,,,,,,,,,,,,,
Landroid/widget/Spinner$DialogPopup;->isShowing()Z,,,,,,,,,,,,,,,,,,,
Landroid/widget/Spinner$SpinnerPopup;->isShowing()Z,,,,,,,,,,,,,,,,,,,
Landroid/widget/Switch;->mSwitchMinWidth:I,,,,,,,,,,,,,,,,,,,
Landroid/widget/TextClock;->getFormat()Ljava/lang/CharSequence;,,,,,,,,,,,,,,,,,,,
Landroid/widget/TextView;->deleteText_internal(II)V,,,,,,,,,,,,,,,,,,,
Landroid/widget/TextView;->getIterableTextForAccessibility()Ljava/lang/CharSequence;,,,,,,,,,,,,,,,,,,,
Landroid/widget/TextView;->getLineAtCoordinate(F)I,,,,,,,,,,,,,,,,,,,
Landroid/widget/TextView;->getTextForAccessibility()Ljava/lang/CharSequence;,,,,,,,,,,,,,,,,,,,
Landroid/widget/TextView;->getTransformedText(II)Ljava/lang/CharSequence;,,,,,,,,,,,,,,,,,,,
Landroid/widget/TextView;->getUpdatedHighlightPath()Landroid/graphics/Path;,,,,,,,,,,,,,,,,,,,
Landroid/widget/TextView;->setRawTextSize(FZ)V,,,,,,,,,,,,,,,,,,,
Landroid/widget/ViewAnimator;->showOnly(IZ)V,,,,,,,,,,,,,,,,,,,
Landroid/widget/ViewFlipper;->updateRunning(Z)V,,,,,,,,,,,,,,,,,,,
Lcom/android/i18n/phonenumbers/Phonemetadata$NumberFormat;->getDomesticCarrierCodeFormattingRule()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/i18n/phonenumbers/Phonemetadata$NumberFormat;->getFormat()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/i18n/phonenumbers/Phonemetadata$NumberFormat;->getLeadingDigitsPattern(I)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/i18n/phonenumbers/Phonemetadata$NumberFormat;->getNationalPrefixFormattingRule()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/i18n/phonenumbers/Phonemetadata$NumberFormat;->getPattern()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/i18n/phonenumbers/Phonemetadata$NumberFormat;->leadingDigitsPatternSize()I,,,,,,,,,,,,,,,,,,,
Lcom/android/i18n/phonenumbers/Phonemetadata$PhoneMetadataCollection;->getMetadataList()Ljava/util/List;,,,,,,,,,,,,,,,,,,,
Lcom/android/i18n/phonenumbers/Phonemetadata$PhoneMetadataCollection;-><init>()V,,,,,,,,,,,,,,,,,,,
Lcom/android/i18n/phonenumbers/Phonemetadata$PhoneMetadata;->getCountryCode()I,,,,,,,,,,,,,,,,,,,
Lcom/android/i18n/phonenumbers/Phonemetadata$PhoneMetadata;->getGeneralDesc()Lcom/android/i18n/phonenumbers/Phonemetadata$PhoneNumberDesc;,,,,,,,,,,,,,,,,,,,
Lcom/android/i18n/phonenumbers/Phonemetadata$PhoneMetadata;->getNationalPrefixForParsing()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/i18n/phonenumbers/Phonemetadata$PhoneMetadata;->getNationalPrefixTransformRule()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/i18n/phonenumbers/Phonemetadata$PhoneMetadata;->getPreferredExtnPrefix()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/i18n/phonenumbers/Phonemetadata$PhoneMetadata;->hasNationalPrefix()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/i18n/phonenumbers/Phonemetadata$PhoneMetadata;->hasPreferredExtnPrefix()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/i18n/phonenumbers/Phonemetadata$PhoneMetadata;->intlNumberFormats()Ljava/util/List;,,,,,,,,,,,,,,,,,,,
Lcom/android/i18n/phonenumbers/Phonemetadata$PhoneMetadata;->numberFormats()Ljava/util/List;,,,,,,,,,,,,,,,,,,,
Lcom/android/i18n/phonenumbers/Phonemetadata$PhoneNumberDesc;->getNationalNumberPattern()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/i18n/phonenumbers/Phonenumber$PhoneNumber;->clearCountryCode()Lcom/android/i18n/phonenumbers/Phonenumber$PhoneNumber;,,,,,,,,,,,,,,,,,,,
Lcom/android/i18n/phonenumbers/Phonenumber$PhoneNumber;->getExtension()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/i18n/phonenumbers/Phonenumber$PhoneNumber;->hasExtension()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/i18n/phonenumbers/PhoneNumberMatch;->end()I,,,,,,,,,,,,,,,,,,,
Lcom/android/i18n/phonenumbers/PhoneNumberMatch;->number()Lcom/android/i18n/phonenumbers/Phonenumber$PhoneNumber;,,,,,,,,,,,,,,,,,,,
Lcom/android/i18n/phonenumbers/PhoneNumberMatch;->rawString()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/i18n/phonenumbers/PhoneNumberMatch;->start()I,,,,,,,,,,,,,,,,,,,
Lcom/android/i18n/phonenumbers/PhoneNumberUtil;->findNumbers(Ljava/lang/CharSequence;Ljava/lang/String;Lcom/android/i18n/phonenumbers/PhoneNumberUtil$Leniency;J)Ljava/lang/Iterable;,,,,,,,,,,,,,,,,,,,
Lcom/android/i18n/phonenumbers/PhoneNumberUtil;->getNationalSignificantNumber(Lcom/android/i18n/phonenumbers/Phonenumber$PhoneNumber;)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/i18n/phonenumbers/PhoneNumberUtil;->isNumberMatch(Lcom/android/i18n/phonenumbers/Phonenumber$PhoneNumber;Lcom/android/i18n/phonenumbers/Phonenumber$PhoneNumber;)Lcom/android/i18n/phonenumbers/PhoneNumberUtil$MatchType;,,,,,,,,,,,,,,,,,,,
Lcom/android/i18n/phonenumbers/PhoneNumberUtil;->isPossibleNumber(Lcom/android/i18n/phonenumbers/Phonenumber$PhoneNumber;)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/ImsCall;->deflect(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/ImsCall;->isMultiparty()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/ImsCall;->reject(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/ImsCall;->terminate(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/ImsConfigListener$Stub;-><init>()V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/ImsConfigListener;->onSetFeatureResponse(IIII)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/ImsEcbm;->exitEmergencyCallbackMode()V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/ImsManager;->isEnhanced4gLteModeSettingEnabledByUser(Landroid/content/Context;)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/ImsManager;->isNonTtyOrTtyOnVolteEnabled(Landroid/content/Context;)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/ImsManager;->isVolteEnabledByPlatform(Landroid/content/Context;)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/ImsUtInterface;->queryCallForward(ILjava/lang/String;Landroid/os/Message;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsCallSession$Stub;-><init>()V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsCallSessionListener;->callSessionConferenceStateUpdated(Lcom/android/ims/internal/IImsCallSession;Landroid/telephony/ims/ImsConferenceState;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsCallSessionListener;->callSessionHandoverFailed(Lcom/android/ims/internal/IImsCallSession;IILandroid/telephony/ims/ImsReasonInfo;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsCallSessionListener;->callSessionHandover(Lcom/android/ims/internal/IImsCallSession;IILandroid/telephony/ims/ImsReasonInfo;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsCallSessionListener;->callSessionHeld(Lcom/android/ims/internal/IImsCallSession;Landroid/telephony/ims/ImsCallProfile;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsCallSessionListener;->callSessionHoldFailed(Lcom/android/ims/internal/IImsCallSession;Landroid/telephony/ims/ImsReasonInfo;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsCallSessionListener;->callSessionHoldReceived(Lcom/android/ims/internal/IImsCallSession;Landroid/telephony/ims/ImsCallProfile;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsCallSessionListener;->callSessionInviteParticipantsRequestDelivered(Lcom/android/ims/internal/IImsCallSession;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsCallSessionListener;->callSessionInviteParticipantsRequestFailed(Lcom/android/ims/internal/IImsCallSession;Landroid/telephony/ims/ImsReasonInfo;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsCallSessionListener;->callSessionMergeComplete(Lcom/android/ims/internal/IImsCallSession;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsCallSessionListener;->callSessionMergeFailed(Lcom/android/ims/internal/IImsCallSession;Landroid/telephony/ims/ImsReasonInfo;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsCallSessionListener;->callSessionMergeStarted(Lcom/android/ims/internal/IImsCallSession;Lcom/android/ims/internal/IImsCallSession;Landroid/telephony/ims/ImsCallProfile;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsCallSessionListener;->callSessionMultipartyStateChanged(Lcom/android/ims/internal/IImsCallSession;Z)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsCallSessionListener;->callSessionProgressing(Lcom/android/ims/internal/IImsCallSession;Landroid/telephony/ims/ImsStreamMediaProfile;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsCallSessionListener;->callSessionResumed(Lcom/android/ims/internal/IImsCallSession;Landroid/telephony/ims/ImsCallProfile;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsCallSessionListener;->callSessionResumeFailed(Lcom/android/ims/internal/IImsCallSession;Landroid/telephony/ims/ImsReasonInfo;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsCallSessionListener;->callSessionResumeReceived(Lcom/android/ims/internal/IImsCallSession;Landroid/telephony/ims/ImsCallProfile;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsCallSessionListener;->callSessionStarted(Lcom/android/ims/internal/IImsCallSession;Landroid/telephony/ims/ImsCallProfile;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsCallSessionListener;->callSessionStartFailed(Lcom/android/ims/internal/IImsCallSession;Landroid/telephony/ims/ImsReasonInfo;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsCallSessionListener;->callSessionSuppServiceReceived(Lcom/android/ims/internal/IImsCallSession;Landroid/telephony/ims/ImsSuppServiceNotification;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsCallSessionListener;->callSessionTerminated(Lcom/android/ims/internal/IImsCallSession;Landroid/telephony/ims/ImsReasonInfo;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsCallSessionListener;->callSessionTtyModeReceived(Lcom/android/ims/internal/IImsCallSession;I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsCallSessionListener;->callSessionUpdated(Lcom/android/ims/internal/IImsCallSession;Landroid/telephony/ims/ImsCallProfile;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsConfig$Stub;-><init>()V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsEcbm$Stub;-><init>()V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsRegistrationListener;->registrationAssociatedUriChanged([Landroid/net/Uri;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsRegistrationListener;->registrationChangeFailed(ILandroid/telephony/ims/ImsReasonInfo;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsRegistrationListener;->registrationConnected()V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsRegistrationListener;->registrationConnectedWithRadioTech(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsRegistrationListener;->registrationDisconnected(Landroid/telephony/ims/ImsReasonInfo;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsRegistrationListener;->registrationFeatureCapabilityChanged(I[I[I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsRegistrationListener;->registrationProgressingWithRadioTech(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsRegistrationListener;->voiceMessageCountUpdate(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsService$Stub;->asInterface(Landroid/os/IBinder;)Lcom/android/ims/internal/IImsService;,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsService$Stub;-><init>()V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsUt$Stub;-><init>()V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsUtListener;->utConfigurationCallBarringQueried(Lcom/android/ims/internal/IImsUt;I[Landroid/telephony/ims/ImsSsInfo;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsUtListener;->utConfigurationCallForwardQueried(Lcom/android/ims/internal/IImsUt;I[Landroid/telephony/ims/ImsCallForwardInfo;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsUtListener;->utConfigurationCallWaitingQueried(Lcom/android/ims/internal/IImsUt;I[Landroid/telephony/ims/ImsSsInfo;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsUtListener;->utConfigurationQueried(Lcom/android/ims/internal/IImsUt;ILandroid/os/Bundle;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsUtListener;->utConfigurationQueryFailed(Lcom/android/ims/internal/IImsUt;ILandroid/telephony/ims/ImsReasonInfo;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsUtListener;->utConfigurationUpdated(Lcom/android/ims/internal/IImsUt;I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsUtListener;->utConfigurationUpdateFailed(Lcom/android/ims/internal/IImsUt;ILandroid/telephony/ims/ImsReasonInfo;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsVideoCallCallback;->changeCallDataUsage(J)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsVideoCallCallback;->changeCameraCapabilities(Landroid/telecom/VideoProfile$CameraCapabilities;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsVideoCallCallback;->changePeerDimensions(II)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsVideoCallCallback;->changeVideoQuality(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsVideoCallCallback;->handleCallSessionEvent(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsVideoCallCallback;->receiveSessionModifyRequest(Landroid/telecom/VideoProfile;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsVideoCallCallback;->receiveSessionModifyResponse(ILandroid/telecom/VideoProfile;Landroid/telecom/VideoProfile;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsVideoCallProvider$Stub;-><init>()V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/IImsVideoCallProvider;->setCallback(Lcom/android/ims/internal/IImsVideoCallCallback;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/ImsVideoCallProviderWrapper;-><init>(Lcom/android/ims/internal/IImsVideoCallProvider;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->getCapTimestamp()J,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;-><init>()V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->isCdViaPresenceSupported()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->isFtHttpSupported()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->isFtSnFSupported()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->isFtSupported()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->isFtThumbSupported()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->isFullSnFGroupChatSupported()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->isGeoPullFtSupported()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->isGeoPullSupported()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->isGeoPushSupported()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->isImSupported()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->isIpVideoSupported()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->isIpVoiceSupported()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->isIsSupported()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->isRcsIpVideoCallSupported()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->isRcsIpVideoOnlyCallSupported()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->isRcsIpVoiceCallSupported()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->isSmSupported()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->isSpSupported()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->isVsDuringCSSupported()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->isVsSupported()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->setCapTimestamp(J)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->setCdViaPresenceSupported(Z)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->setExts([Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->setFtHttpSupported(Z)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->setFtSnFSupported(Z)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->setFtSupported(Z)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->setFtThumbSupported(Z)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->setFullSnFGroupChatSupported(Z)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->setGeoPullFtSupported(Z)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->setGeoPullSupported(Z)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->setGeoPushSupported(Z)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->setImSupported(Z)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->setIpVideoSupported(Z)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->setIpVoiceSupported(Z)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->setIsSupported(Z)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->setRcsIpVideoCallSupported(Z)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->setRcsIpVideoOnlyCallSupported(Z)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->setRcsIpVoiceCallSupported(Z)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->setSmSupported(Z)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->setSpSupported(Z)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->setVsDuringCSSupported(Z)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/CapInfo;->setVsSupported(Z)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/StatusCode;->getStatusCode()I,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/StatusCode;-><init>()V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/StatusCode;->setStatusCode(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/UceLong;->getClientId()I,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/UceLong;->getUceLong()J,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/UceLong;-><init>()V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/UceLong;->setClientId(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/common/UceLong;->setUceLong(J)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/options/IOptionsListener;->cmdStatus(Lcom/android/ims/internal/uce/options/OptionsCmdStatus;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/options/IOptionsListener;->getVersionCb(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/options/IOptionsListener;->incomingOptions(Ljava/lang/String;Lcom/android/ims/internal/uce/options/OptionsCapInfo;I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/options/IOptionsListener;->serviceAvailable(Lcom/android/ims/internal/uce/common/StatusCode;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/options/IOptionsListener;->serviceUnavailable(Lcom/android/ims/internal/uce/common/StatusCode;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/options/IOptionsListener;->sipResponseReceived(Ljava/lang/String;Lcom/android/ims/internal/uce/options/OptionsSipResponse;Lcom/android/ims/internal/uce/options/OptionsCapInfo;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/options/IOptionsService$Stub;-><init>()V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/options/IOptionsService;->addListener(ILcom/android/ims/internal/uce/options/IOptionsListener;Lcom/android/ims/internal/uce/common/UceLong;)Lcom/android/ims/internal/uce/common/StatusCode;,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/options/IOptionsService;->getContactCap(ILjava/lang/String;I)Lcom/android/ims/internal/uce/common/StatusCode;,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/options/IOptionsService;->getContactListCap(I[Ljava/lang/String;I)Lcom/android/ims/internal/uce/common/StatusCode;,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/options/IOptionsService;->getMyInfo(II)Lcom/android/ims/internal/uce/common/StatusCode;,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/options/IOptionsService;->getVersion(I)Lcom/android/ims/internal/uce/common/StatusCode;,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/options/IOptionsService;->removeListener(ILcom/android/ims/internal/uce/common/UceLong;)Lcom/android/ims/internal/uce/common/StatusCode;,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/options/IOptionsService;->responseIncomingOptions(IIILjava/lang/String;Lcom/android/ims/internal/uce/options/OptionsCapInfo;Z)Lcom/android/ims/internal/uce/common/StatusCode;,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/options/IOptionsService;->setMyInfo(ILcom/android/ims/internal/uce/common/CapInfo;I)Lcom/android/ims/internal/uce/common/StatusCode;,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/options/OptionsCapInfo;->getCapInfo()Lcom/android/ims/internal/uce/common/CapInfo;,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/options/OptionsCapInfo;->getSdp()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/options/OptionsCapInfo;-><init>()V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/options/OptionsCapInfo;->setCapInfo(Lcom/android/ims/internal/uce/common/CapInfo;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/options/OptionsCapInfo;->setSdp(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/options/OptionsCmdId;-><init>()V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/options/OptionsCmdId;->setCmdId(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/options/OptionsCmdStatus;-><init>()V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/options/OptionsCmdStatus;->setCapInfo(Lcom/android/ims/internal/uce/common/CapInfo;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/options/OptionsCmdStatus;->setCmdId(Lcom/android/ims/internal/uce/options/OptionsCmdId;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/options/OptionsCmdStatus;->setStatus(Lcom/android/ims/internal/uce/common/StatusCode;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/options/OptionsCmdStatus;->setUserData(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/options/OptionsSipResponse;-><init>()V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/options/OptionsSipResponse;->setCmdId(Lcom/android/ims/internal/uce/options/OptionsCmdId;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/options/OptionsSipResponse;->setReasonPhrase(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/options/OptionsSipResponse;->setRequestId(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/options/OptionsSipResponse;->setRetryAfter(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/options/OptionsSipResponse;->setSipResponseCode(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/IPresenceListener;->capInfoReceived(Ljava/lang/String;[Lcom/android/ims/internal/uce/presence/PresTupleInfo;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/IPresenceListener;->cmdStatus(Lcom/android/ims/internal/uce/presence/PresCmdStatus;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/IPresenceListener;->getVersionCb(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/IPresenceListener;->listCapInfoReceived(Lcom/android/ims/internal/uce/presence/PresRlmiInfo;[Lcom/android/ims/internal/uce/presence/PresResInfo;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/IPresenceListener;->publishTriggering(Lcom/android/ims/internal/uce/presence/PresPublishTriggerType;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/IPresenceListener;->serviceAvailable(Lcom/android/ims/internal/uce/common/StatusCode;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/IPresenceListener;->serviceUnAvailable(Lcom/android/ims/internal/uce/common/StatusCode;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/IPresenceListener;->sipResponseReceived(Lcom/android/ims/internal/uce/presence/PresSipResponse;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/IPresenceListener;->unpublishMessageSent()V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/IPresenceService$Stub;-><init>()V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/IPresenceService;->addListener(ILcom/android/ims/internal/uce/presence/IPresenceListener;Lcom/android/ims/internal/uce/common/UceLong;)Lcom/android/ims/internal/uce/common/StatusCode;,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/IPresenceService;->getContactCap(ILjava/lang/String;I)Lcom/android/ims/internal/uce/common/StatusCode;,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/IPresenceService;->getContactListCap(I[Ljava/lang/String;I)Lcom/android/ims/internal/uce/common/StatusCode;,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/IPresenceService;->getVersion(I)Lcom/android/ims/internal/uce/common/StatusCode;,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/IPresenceService;->publishMyCap(ILcom/android/ims/internal/uce/presence/PresCapInfo;I)Lcom/android/ims/internal/uce/common/StatusCode;,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/IPresenceService;->reenableService(II)Lcom/android/ims/internal/uce/common/StatusCode;,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/IPresenceService;->removeListener(ILcom/android/ims/internal/uce/common/UceLong;)Lcom/android/ims/internal/uce/common/StatusCode;,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/IPresenceService;->setNewFeatureTag(ILjava/lang/String;Lcom/android/ims/internal/uce/presence/PresServiceInfo;I)Lcom/android/ims/internal/uce/common/StatusCode;,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresCapInfo;->getCapInfo()Lcom/android/ims/internal/uce/common/CapInfo;,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresCapInfo;->getContactUri()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresCapInfo;->mContactUri:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresCmdId;-><init>()V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresCmdId;->setCmdId(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresCmdStatus;-><init>()V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresCmdStatus;->setCmdId(Lcom/android/ims/internal/uce/presence/PresCmdId;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresCmdStatus;->setRequestId(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresCmdStatus;->setStatus(Lcom/android/ims/internal/uce/common/StatusCode;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresCmdStatus;->setUserData(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresPublishTriggerType;-><init>()V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresPublishTriggerType;->setPublishTrigeerType(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresResInfo;-><init>()V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresResInfo;->setDisplayName(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresResInfo;->setInstanceInfo(Lcom/android/ims/internal/uce/presence/PresResInstanceInfo;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresResInfo;->setResUri(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresResInstanceInfo;-><init>()V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresResInstanceInfo;->setPresentityUri(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresResInstanceInfo;->setReason(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresResInstanceInfo;->setResId(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresResInstanceInfo;->setResInstanceState(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresResInstanceInfo;->setTupleInfo([Lcom/android/ims/internal/uce/presence/PresTupleInfo;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresRlmiInfo;-><init>()V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresRlmiInfo;->setFullState(Z)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresRlmiInfo;->setListName(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresRlmiInfo;->setPresSubscriptionState(Lcom/android/ims/internal/uce/presence/PresSubscriptionState;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresRlmiInfo;->setRequestId(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresRlmiInfo;->setSubscriptionExpireTime(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresRlmiInfo;->setSubscriptionTerminatedReason(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresRlmiInfo;->setUri(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresRlmiInfo;->setVersion(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresServiceInfo;->getMediaType()I,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresServiceInfo;->getServiceDesc()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresServiceInfo;->getServiceId()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresServiceInfo;->getServiceVer()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresSipResponse;->getCmdId()Lcom/android/ims/internal/uce/presence/PresCmdId;,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresSipResponse;->getReasonPhrase()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresSipResponse;->getRequestId()I,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresSipResponse;->getRetryAfter()I,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresSipResponse;->getSipResponseCode()I,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresSipResponse;-><init>()V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresSipResponse;->setCmdId(Lcom/android/ims/internal/uce/presence/PresCmdId;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresSipResponse;->setReasonPhrase(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresSipResponse;->setRequestId(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresSipResponse;->setRetryAfter(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresSipResponse;->setSipResponseCode(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresSubscriptionState;-><init>()V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresSubscriptionState;->setPresSubscriptionState(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresTupleInfo;-><init>()V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresTupleInfo;->setContactUri(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresTupleInfo;->setFeatureTag(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/presence/PresTupleInfo;->setTimestamp(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/uceservice/IUceListener$Stub;-><init>()V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/uceservice/IUceListener;->setStatus(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/uceservice/IUceService$Stub;-><init>()V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/uceservice/IUceService;->createOptionsService(Lcom/android/ims/internal/uce/options/IOptionsListener;Lcom/android/ims/internal/uce/common/UceLong;)I,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/uceservice/IUceService;->createPresenceService(Lcom/android/ims/internal/uce/presence/IPresenceListener;Lcom/android/ims/internal/uce/common/UceLong;)I,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/uceservice/IUceService;->destroyOptionsService(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/uceservice/IUceService;->destroyPresenceService(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/uceservice/IUceService;->getOptionsService()Lcom/android/ims/internal/uce/options/IOptionsService;,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/uceservice/IUceService;->getPresenceService()Lcom/android/ims/internal/uce/presence/IPresenceService;,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/uceservice/IUceService;->getServiceStatus()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/uceservice/IUceService;->isServiceStarted()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/uceservice/IUceService;->startService(Lcom/android/ims/internal/uce/uceservice/IUceListener;)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/ims/internal/uce/uceservice/IUceService;->stopService()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/app/AlertController$RecycleListView;-><init>(Landroid/content/Context;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/app/IAppOpsService;->resetAllModes(ILjava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/app/IBatteryStats;->computeChargeTimeRemaining()J,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/app/IBatteryStats;->getAwakeTimeBattery()J,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/app/IBatteryStats;->isCharging()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/app/IntentForwarderActivity;->TAG:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/app/IVoiceInteractionManagerService$Stub$Proxy;->showSessionFromSession(Landroid/os/IBinder;Landroid/os/Bundle;I)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/app/IVoiceInteractionManagerService;->getKeyphraseSoundModel(ILjava/lang/String;)Landroid/hardware/soundtrigger/SoundTrigger$KeyphraseSoundModel;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/app/LocalePicker$LocaleInfo;->getLocale()Ljava/util/Locale;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/appwidget/IAppWidgetService$Stub;->TRANSACTION_bindAppWidgetId:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/appwidget/IAppWidgetService;->bindAppWidgetId(Ljava/lang/String;IILandroid/content/ComponentName;Landroid/os/Bundle;)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/appwidget/IAppWidgetService;->bindRemoteViewsService(Ljava/lang/String;ILandroid/content/Intent;Landroid/app/IApplicationThread;Landroid/os/IBinder;Landroid/app/IServiceConnection;I)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/appwidget/IAppWidgetService;->getAppWidgetViews(Ljava/lang/String;I)Landroid/widget/RemoteViews;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/app/WindowDecorActionBar$TabImpl;->mCallback:Landroid/app/ActionBar$TabListener;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/app/WindowDecorActionBar;->mContextView:Lcom/android/internal/widget/ActionBarContextView;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/app/WindowDecorActionBar;->mTabScrollView:Lcom/android/internal/widget/ScrollingTabContainerView;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/location/ILocationProvider$Stub;-><init>()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/location/ILocationProviderManager$Stub;->asInterface(Landroid/os/IBinder;)Lcom/android/internal/location/ILocationProviderManager;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/location/ILocationProviderManager$Stub;-><init>()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/logging/MetricsLogger;->write(Landroid/metrics/LogMaker;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/net/VpnProfile;->decode(Ljava/lang/String;[B)Lcom/android/internal/net/VpnProfile;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/os/BaseCommand;-><init>()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/os/BaseCommand;->mArgs:Landroid/os/BasicShellCommandHandler;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/os/BatterySipper;->cpuPowerMah:D,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/os/BatteryStatsHelper;->getBatteryBroadcast()Landroid/content/Intent;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/os/BatteryStatsHelper;->refreshStats(ILandroid/util/SparseArray;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/os/BatteryStatsImpl;->getDischargeCurrentLevel()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/os/BatteryStatsImpl;->getDischargeStartLevel()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/os/ClassLoaderFactory;->createClassloaderNamespace(Ljava/lang/ClassLoader;ILjava/lang/String;Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/os/FuseAppLoop;->onCommand(IJJJI[B)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/os/FuseAppLoop;->onOpen(JJ)[B,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/os/ProcessCpuTracker$Stats;->name:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/os/ProcessCpuTracker$Stats;->rel_stime:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/os/ProcessCpuTracker$Stats;->rel_uptime:J,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/os/ProcessCpuTracker$Stats;->rel_utime:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/os/ProcessCpuTracker;->countWorkingStats()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/os/ProcessCpuTracker;->getWorkingStats(I)Lcom/android/internal/os/ProcessCpuTracker$Stats;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/os/SomeArgs;->arg1:Ljava/lang/Object;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/os/SomeArgs;->arg2:Ljava/lang/Object;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/os/SomeArgs;->arg3:Ljava/lang/Object;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/os/SomeArgs;->argi2:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/os/SomeArgs;->argi3:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/os/SomeArgs;->obtain()Lcom/android/internal/os/SomeArgs;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/os/SomeArgs;->recycle()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telecom/ITelecomService;->getCallState()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/BaseCommands;->mPreferredNetworkType:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Call;->getLatestConnection()Lcom/android/internal/telephony/Connection;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Call;->getPhone()Lcom/android/internal/telephony/Phone;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Call;->isIdle()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Call;->isMultiparty()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CallManager;->canDial(Lcom/android/internal/telephony/Phone;)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CallManager;->conference(Lcom/android/internal/telephony/Call;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CallManager;->getBackgroundCalls()Ljava/util/List;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CallManager;->getBgCallConnections()Ljava/util/List;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CallManager;->getBgPhone()Lcom/android/internal/telephony/Phone;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CallManager;->getContext()Landroid/content/Context;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CallManager;->getDefaultPhone()Lcom/android/internal/telephony/Phone;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CallManager;->getFgCallConnections()Ljava/util/List;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CallManager;->getFgPhone()Lcom/android/internal/telephony/Phone;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CallManager;->getFirstActiveBgCall()Lcom/android/internal/telephony/Call;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CallManager;->getRingingCalls()Ljava/util/List;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CallManager;->getRingingPhone()Lcom/android/internal/telephony/Phone;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CallManager;->hasActiveBgCall()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CallManager;->hasActiveFgCall()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CallManager;->hasMoreThanOneRingingCall(I)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CallManager;->hasMoreThanOneRingingCall()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CallManager;->mBackgroundCalls:Ljava/util/ArrayList;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CallManager;->mEmptyConnections:Ljava/util/ArrayList;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CallManager;->mForegroundCalls:Ljava/util/ArrayList;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CallManager;->mPhones:Ljava/util/ArrayList;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CallManager;->mRingingCalls:Ljava/util/ArrayList;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CallManager;->registerForDisconnect(Landroid/os/Handler;ILjava/lang/Object;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CallManager;->registerForNewRingingConnection(Landroid/os/Handler;ILjava/lang/Object;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CallManager;->registerForPreciseCallStateChanged(Landroid/os/Handler;ILjava/lang/Object;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CallManager;->registerPhone(Lcom/android/internal/telephony/Phone;)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CallManager;->unregisterForDisconnect(Landroid/os/Handler;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CallManager;->unregisterForNewRingingConnection(Landroid/os/Handler;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CallManager;->unregisterForPreciseCallStateChanged(Landroid/os/Handler;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CallManager;->unregisterPhone(Lcom/android/internal/telephony/Phone;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Call;->mConnections:Ljava/util/ArrayList;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Call;->mState:Lcom/android/internal/telephony/Call$State;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CallTracker;->getState()Lcom/android/internal/telephony/PhoneConstants$State;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CallTracker;->log(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CallTracker;->mCi:Lcom/android/internal/telephony/CommandsInterface;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CallTracker;->mNeedsPoll:Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CallTracker;->mNumberConverted:Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CallTracker;->mPendingOperations:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CarrierServiceBindHelper;->mContext:Landroid/content/Context;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CarrierServiceBindHelper;->mHandler:Landroid/os/Handler;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/AppInterface$CommandType;->fromInt(I)Lcom/android/internal/telephony/cat/AppInterface$CommandType;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/CatCmdMessage$CallSettings;->callMsg:Lcom/android/internal/telephony/cat/TextMessage;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/CatCmdMessage$CallSettings;->confirmMsg:Lcom/android/internal/telephony/cat/TextMessage;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/CatCmdMessage;->getCallSettings()Lcom/android/internal/telephony/cat/CatCmdMessage$CallSettings;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/CatCmdMessage;->getCmdType()Lcom/android/internal/telephony/cat/AppInterface$CommandType;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/CatCmdMessage;->geTextMessage()Lcom/android/internal/telephony/cat/TextMessage;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/CatCmdMessage;->mCallSettings:Lcom/android/internal/telephony/cat/CatCmdMessage$CallSettings;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/CatCmdMessage;->mCmdDet:Lcom/android/internal/telephony/cat/CommandDetails;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/CatCmdMessage;->mInput:Lcom/android/internal/telephony/cat/Input;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/CatCmdMessage;->mMenu:Lcom/android/internal/telephony/cat/Menu;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/CatCmdMessage;->mTextMsg:Lcom/android/internal/telephony/cat/TextMessage;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/CatLog;->d(Ljava/lang/String;Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/CatLog;->e(Ljava/lang/Object;Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/CatService;->isStkAppInstalled()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/CatService;->mCurrntCmd:Lcom/android/internal/telephony/cat/CatCmdMessage;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/CatService;->mSlotId:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/CatService;->sendTerminalResponse(Lcom/android/internal/telephony/cat/CommandDetails;Lcom/android/internal/telephony/cat/ResultCode;ZILcom/android/internal/telephony/cat/ResponseData;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/CatService;->sInstance:[Lcom/android/internal/telephony/cat/CatService;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/CommandDetails;->commandNumber:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/CommandDetails;->commandQualifier:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/CommandDetails;->compRequired:Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/CommandDetails;->typeOfCommand:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/CommandParamsFactory;->dispose()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/CommandParamsFactory;->mIconLoader:Lcom/android/internal/telephony/cat/IconLoader;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/CommandParamsFactory;->searchForNextTag(Lcom/android/internal/telephony/cat/ComprehensionTlvTag;Ljava/util/Iterator;)Lcom/android/internal/telephony/cat/ComprehensionTlv;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/CommandParamsFactory;->searchForTag(Lcom/android/internal/telephony/cat/ComprehensionTlvTag;Ljava/util/List;)Lcom/android/internal/telephony/cat/ComprehensionTlv;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/CommandParams;->getCommandType()Lcom/android/internal/telephony/cat/AppInterface$CommandType;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/CommandParams;-><init>(Lcom/android/internal/telephony/cat/CommandDetails;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/CommandParams;->mCmdDet:Lcom/android/internal/telephony/cat/CommandDetails;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/ComprehensionTlv;->getLength()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/ComprehensionTlv;->getRawValue()[B,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/ComprehensionTlv;->getTag()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/ComprehensionTlv;->getValueIndex()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/ComprehensionTlvTag;->value()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/DeviceIdentities;->destinationId:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/DisplayTextParams;-><init>(Lcom/android/internal/telephony/cat/CommandDetails;Lcom/android/internal/telephony/cat/TextMessage;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/DisplayTextParams;->mTextMsg:Lcom/android/internal/telephony/cat/TextMessage;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/Duration$TimeUnit;->value()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/Duration;->timeInterval:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/Duration;->timeUnit:Lcom/android/internal/telephony/cat/Duration$TimeUnit;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/GetInputParams;-><init>(Lcom/android/internal/telephony/cat/CommandDetails;Lcom/android/internal/telephony/cat/Input;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/IconId;->recordNumber:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/IconLoader;->loadIcon(ILandroid/os/Message;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/Menu;->titleAttrs:Ljava/util/List;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/PlayToneParams;-><init>(Lcom/android/internal/telephony/cat/CommandDetails;Lcom/android/internal/telephony/cat/TextMessage;Lcom/android/internal/telephony/cat/Tone;Lcom/android/internal/telephony/cat/Duration;Z)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/ResponseData;->format(Ljava/io/ByteArrayOutputStream;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/ResponseData;-><init>()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/ResultCode;->value()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/ResultException;-><init>(Lcom/android/internal/telephony/cat/ResultCode;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/RilMessageDecoder;->getInstance(Landroid/os/Handler;Lcom/android/internal/telephony/uicc/IccFileHandler;Landroid/content/Context;I)Lcom/android/internal/telephony/cat/RilMessageDecoder;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/RilMessageDecoder;->mCmdParamsFactory:Lcom/android/internal/telephony/cat/CommandParamsFactory;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/RilMessageDecoder;->mCurrentRilMessage:Lcom/android/internal/telephony/cat/RilMessage;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/RilMessageDecoder;->mInstance:[Lcom/android/internal/telephony/cat/RilMessageDecoder;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/RilMessageDecoder;->sendCmdForExecution(Lcom/android/internal/telephony/cat/RilMessage;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/RilMessageDecoder;->sendStartDecodingMessageParams(Lcom/android/internal/telephony/cat/RilMessage;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/RilMessage;-><init>(ILjava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/RilMessage;->mData:Ljava/lang/Object;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/RilMessage;->mId:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/SelectItemParams;-><init>(Lcom/android/internal/telephony/cat/CommandDetails;Lcom/android/internal/telephony/cat/Menu;Z)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/TextMessage;->iconSelfExplanatory:Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/TextMessage;-><init>()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/TextMessage;->text:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/ValueParser;->retrieveAlphaId(Lcom/android/internal/telephony/cat/ComprehensionTlv;Z)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/ValueParser;->retrieveDeviceIdentities(Lcom/android/internal/telephony/cat/ComprehensionTlv;)Lcom/android/internal/telephony/cat/DeviceIdentities;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/ValueParser;->retrieveTextAttribute(Lcom/android/internal/telephony/cat/ComprehensionTlv;)Ljava/util/List;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cat/ValueParser;->retrieveTextString(Lcom/android/internal/telephony/cat/ComprehensionTlv;)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cdma/CdmaMmiCode;->makeEmptyNull(Ljava/lang/String;)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cdma/CdmaMmiCode;->mSc:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cdma/CdmaSMSDispatcher;->getFormat()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cdma/CdmaSubscriptionSourceManager;->getCdmaSubscriptionSource()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cdma/sms/BearerData;->getBitsForNumFields(II)I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cdma/SmsMessage;->getSubmitPdu(Ljava/lang/String;Lcom/android/internal/telephony/cdma/sms/UserData;ZI)Lcom/android/internal/telephony/cdma/SmsMessage$SubmitPdu;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/cdma/SmsMessage;->getSubmitPdu(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLcom/android/internal/telephony/SmsHeader;I)Lcom/android/internal/telephony/cdma/SmsMessage$SubmitPdu;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CommandException;->mError:Lcom/android/internal/telephony/CommandException$Error;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CommandsInterface;->getVoiceRegistrationState(Landroid/os/Message;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CommandsInterface;->iccIOForApp(IILjava/lang/String;IIILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/os/Message;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CommandsInterface;->registerForCellInfoList(Landroid/os/Handler;ILjava/lang/Object;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CommandsInterface;->registerForImsNetworkStateChanged(Landroid/os/Handler;ILjava/lang/Object;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CommandsInterface;->registerForRilConnected(Landroid/os/Handler;ILjava/lang/Object;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CommandsInterface;->requestIccSimAuthentication(ILjava/lang/String;Ljava/lang/String;Landroid/os/Message;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CommandsInterface;->requestShutdown(Landroid/os/Message;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CommandsInterface;->setDataAllowed(ZLandroid/os/Message;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CommandsInterface;->unregisterForRilConnected(Landroid/os/Handler;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/CommandsInterface;->unregisterForVoiceRadioTechChanged(Landroid/os/Handler;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Connection;->getDisconnectCause()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Connection;->getDisconnectTime()J,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Connection;->getDurationMillis()J,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Connection;->hangup()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Connection;-><init>(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Connection;->isAlive()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Connection;->mAddress:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Connection;->mCnapName:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Connection;->mCnapNamePresentation:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Connection;->mDialString:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Connection;->mDuration:J,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Connection;->mIsIncoming:Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Connection;->mNumberPresentation:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Connection;->setVideoState(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaCall;->attachFake(Lcom/android/internal/telephony/Connection;Lcom/android/internal/telephony/Call$State;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaCallTracker;->clearDisconnected()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaCallTracker;->disableDataCallInEmergencyCall(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaCallTracker;->fakeHoldForegroundBeforeDial()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaCallTracker;->getPhone()Lcom/android/internal/telephony/GsmCdmaPhone;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaCallTracker;->handleEcmTimer(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaCallTracker;->isPhoneTypeGsm()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaCallTracker;->log(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaCallTracker;->mBackgroundCall:Lcom/android/internal/telephony/GsmCdmaCall;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaCallTracker;->mForegroundCall:Lcom/android/internal/telephony/GsmCdmaCall;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaCallTracker;->mPendingMO:Lcom/android/internal/telephony/GsmCdmaConnection;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaCallTracker;->mPhone:Lcom/android/internal/telephony/GsmCdmaPhone;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaCallTracker;->mRingingCall:Lcom/android/internal/telephony/GsmCdmaCall;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaCallTracker;->mState:Lcom/android/internal/telephony/PhoneConstants$State;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaCallTracker;->obtainCompleteMessage(I)Landroid/os/Message;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaCallTracker;->obtainCompleteMessage()Landroid/os/Message;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaCallTracker;->setMute(Z)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaCallTracker;->switchWaitingOrHoldingAndActive()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaCallTracker;->updatePhoneState()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaConnection;->acquireWakeLock()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaConnection;->createWakeLock(Landroid/content/Context;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaConnection;->disconnectCauseFromCode(I)I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaConnection;->fetchDtmfToneDelay(Lcom/android/internal/telephony/GsmCdmaPhone;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaConnection;->findNextPCharOrNonPOrNonWCharIndex(Ljava/lang/String;I)I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaConnection;->findPOrWCharToAppend(Ljava/lang/String;II)C,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaConnection;->formatDialString(Ljava/lang/String;)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaConnection;->getState()Lcom/android/internal/telephony/Call$State;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaConnection;->isPause(C)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaConnection;->isPhoneTypeGsm()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaConnection;->isWait(C)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaConnection;->log(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaConnection;->maskDialString(Ljava/lang/String;)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaConnection;->mIndex:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaConnection;->mOwner:Lcom/android/internal/telephony/GsmCdmaCallTracker;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaConnection;->onConnectedInOrOut()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaConnection;->updateParent(Lcom/android/internal/telephony/GsmCdmaCall;Lcom/android/internal/telephony/GsmCdmaCall;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaPhone$Cfu;-><init>(Ljava/lang/String;Landroid/os/Message;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaPhone;->exitEmergencyCallbackMode()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaPhone;->getCallTracker()Lcom/android/internal/telephony/CallTracker;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaPhone;->getCdmaEriText()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaPhone;->getEsn()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaPhone;->getLine1Number()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaPhone;->getPhoneType()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaPhone;->getServiceState()Landroid/telephony/ServiceState;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaPhone;->getState()Lcom/android/internal/telephony/PhoneConstants$State;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaPhone;->getSystemProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaPhone;->handleInCallMmiCommands(Ljava/lang/String;)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaPhone;->isCfEnable(I)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaPhone;->isInCall()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaPhone;->isManualSelProhibitedInGlobalMode()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaPhone;->isPhoneTypeGsm()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaPhone;->isValidCommandInterfaceCFAction(I)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaPhone;->isValidCommandInterfaceCFReason(I)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaPhone;->logd(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaPhone;->loge(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaPhone;->mCT:Lcom/android/internal/telephony/GsmCdmaCallTracker;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaPhone;->mIccSmsInterfaceManager:Lcom/android/internal/telephony/IccSmsInterfaceManager;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaPhone;->mIsimUiccRecords:Lcom/android/internal/telephony/uicc/IsimUiccRecords;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaPhone;->mPendingMMIs:Ljava/util/ArrayList;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaPhone;->mSST:Lcom/android/internal/telephony/ServiceStateTracker;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaPhone;->notifyPreciseCallStateChanged()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaPhone;->notifyServiceStateChanged(Landroid/telephony/ServiceState;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaPhone;->setOnEcbModeExitResponse(Landroid/os/Handler;ILjava/lang/Object;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/GsmCdmaPhone;->syncClirSetting()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/gsm/GsmInboundSmsHandler;->acknowledgeLastIncomingSms(ZILandroid/os/Message;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/gsm/GsmMmiCode;-><init>(Lcom/android/internal/telephony/GsmCdmaPhone;Lcom/android/internal/telephony/uicc/UiccCardApplication;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/gsm/GsmMmiCode;->mContext:Landroid/content/Context;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/gsm/GsmMmiCode;->mDialingNumber:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/gsm/GsmMmiCode;->mIccRecords:Lcom/android/internal/telephony/uicc/IccRecords;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/gsm/GsmMmiCode;->mPhone:Lcom/android/internal/telephony/GsmCdmaPhone;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/gsm/GsmMmiCode;->mSc:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/gsm/GsmMmiCode;->mSia:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/gsm/GsmMmiCode;->mSib:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/gsm/GsmMmiCode;->mSic:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/gsm/GsmMmiCode;->newFromDialString(Ljava/lang/String;Lcom/android/internal/telephony/GsmCdmaPhone;Lcom/android/internal/telephony/uicc/UiccCardApplication;)Lcom/android/internal/telephony/gsm/GsmMmiCode;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/gsm/GsmSMSDispatcher;->getFormat()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/gsm/GsmSMSDispatcher;->mGsmInboundSmsHandler:Lcom/android/internal/telephony/gsm/GsmInboundSmsHandler;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/gsm/SimTlv;->mHasValidTlvObject:Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/gsm/SmsCbHeader;->getGeographicalScope()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/gsm/SmsCbHeader;->getNumberOfPages()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/gsm/SmsCbHeader;->getPageIndex()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/gsm/SmsCbHeader;->getSerialNumber()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/gsm/SmsCbHeader;->getServiceCategory()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/gsm/SmsCbHeader;-><init>([B)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/gsm/SmsCbHeader;->mMessageIdentifier:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/gsm/SmsMessage$PduParser;->mCur:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/gsm/SmsMessage$PduParser;->mPdu:[B,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/gsm/SmsMessage;->getStatus()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/gsm/SmsMessage;->getSubmitPdu(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z[BIIII)Lcom/android/internal/telephony/gsm/SmsMessage$SubmitPdu;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/gsm/SmsMessage;->getSubmitPdu(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z[BIII)Lcom/android/internal/telephony/gsm/SmsMessage$SubmitPdu;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/gsm/SmsMessage;->getSubmitPdu(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZI)Lcom/android/internal/telephony/gsm/SmsMessage$SubmitPdu;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/gsm/SmsMessage;->isStatusReportMessage()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/gsm/UsimPhoneBookManager;->mFh:Lcom/android/internal/telephony/uicc/IccFileHandler;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ICarrierConfigLoader;->getConfigForSubId(ILjava/lang/String;)Landroid/os/PersistableBundle;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/IccCard;->getState()Lcom/android/internal/telephony/IccCardConstants$State;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/IccCard;->supplyNetworkDepersonalization(Ljava/lang/String;Landroid/os/Message;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/IccPhoneBookInterfaceManager;->DBG:Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/IccPhoneBookInterfaceManager;->mAdnCache:Lcom/android/internal/telephony/uicc/AdnRecordCache;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/IccPhoneBookInterfaceManager;->mPhone:Lcom/android/internal/telephony/Phone;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/IccProvider;->DBG:Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/IccProvider;->loadRecord(Lcom/android/internal/telephony/uicc/AdnRecord;Landroid/database/MatrixCursor;I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/IccProvider;->log(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/IccSmsInterfaceManager;->copyMessageToIccEf(Ljava/lang/String;I[B[B)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/IccSmsInterfaceManager;->disableCdmaBroadcastRange(II)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/IccSmsInterfaceManager;->disableGsmBroadcastRange(II)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/IccSmsInterfaceManager;->enableCdmaBroadcastRange(II)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/IccSmsInterfaceManager;->enableGsmBroadcastRange(II)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/IccSmsInterfaceManager;->enforceReceiveAndSend(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/IccSmsInterfaceManager;->filterDestAddress(Ljava/lang/String;)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/IccSmsInterfaceManager;->getAllMessagesFromIccEf(Ljava/lang/String;)Ljava/util/List;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/IccSmsInterfaceManager;->getImsSmsFormat()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/IccSmsInterfaceManager;->getPremiumSmsPermission(Ljava/lang/String;)I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/IccSmsInterfaceManager;->injectSmsPdu([BLjava/lang/String;Landroid/app/PendingIntent;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/IccSmsInterfaceManager;->isImsSmsSupported()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/IccSmsInterfaceManager;->mAppOps:Landroid/app/AppOpsManager;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/IccSmsInterfaceManager;->mCellBroadcastRangeManager:Lcom/android/internal/telephony/IccSmsInterfaceManager$CellBroadcastRangeManager;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/IccSmsInterfaceManager;->mHandler:Landroid/os/Handler;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/IccSmsInterfaceManager;->mPhone:Lcom/android/internal/telephony/Phone;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/IccSmsInterfaceManager;->sendData(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I[BLandroid/app/PendingIntent;Landroid/app/PendingIntent;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/IccSmsInterfaceManager;->sendStoredMultipartText(Ljava/lang/String;Landroid/net/Uri;Ljava/lang/String;Ljava/util/List;Ljava/util/List;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/IccSmsInterfaceManager;->sendStoredText(Ljava/lang/String;Landroid/net/Uri;Ljava/lang/String;Landroid/app/PendingIntent;Landroid/app/PendingIntent;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/IccSmsInterfaceManager;->setCdmaBroadcastConfig([Lcom/android/internal/telephony/cdma/CdmaSmsBroadcastConfigInfo;)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/IccSmsInterfaceManager;->setCellBroadcastConfig([Lcom/android/internal/telephony/gsm/SmsBroadcastConfigInfo;)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/IccSmsInterfaceManager;->setPremiumSmsPermission(Ljava/lang/String;I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/IccSmsInterfaceManager;->updateMessageOnIccEf(Ljava/lang/String;II[B)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsExternalCall;-><init>(Lcom/android/internal/telephony/Phone;Lcom/android/internal/telephony/imsphone/ImsExternalConnection;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsExternalConnection;->rebuildCapabilities()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsExternalConnection;->setActive()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhone$Cf;-><init>(Ljava/lang/String;ZLandroid/os/Message;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneCall;->attachFake(Lcom/android/internal/telephony/Connection;Lcom/android/internal/telephony/Call$State;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneCall;->attach(Lcom/android/internal/telephony/Connection;Lcom/android/internal/telephony/Call$State;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneCall;->getConnections()Ljava/util/ArrayList;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneCall;->getImsCall()Lcom/android/ims/ImsCall;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneCall;->hangup()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneCall;->merge(Lcom/android/internal/telephony/imsphone/ImsPhoneCall;Lcom/android/internal/telephony/Call$State;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneCall;->onHangupLocal()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneCallTracker;->addConnection(Lcom/android/internal/telephony/imsphone/ImsPhoneConnection;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneCallTracker;->clearDisconnected()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneCallTracker;->dial(Ljava/lang/String;ILandroid/os/Bundle;)Lcom/android/internal/telephony/Connection;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneCallTracker;->dialPendingMO()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneCallTracker;->findConnection(Lcom/android/ims/ImsCall;)Lcom/android/internal/telephony/imsphone/ImsPhoneConnection;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneCallTracker;->getEcbmInterface()Lcom/android/ims/ImsEcbm;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneCallTracker;->getUtInterface()Lcom/android/ims/ImsUtInterface;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneCallTracker;->handleEcmTimer(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneCallTracker;->loge(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneCallTracker;->log(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneCallTracker;->mAllowEmergencyVideoCalls:Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneCallTracker;->mBackgroundCall:Lcom/android/internal/telephony/imsphone/ImsPhoneCall;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneCallTracker;->mCallExpectedToResume:Lcom/android/ims/ImsCall;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneCallTracker;->mConnections:Ljava/util/ArrayList;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneCallTracker;->mForegroundCall:Lcom/android/internal/telephony/imsphone/ImsPhoneCall;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneCallTracker;->mHandoverCall:Lcom/android/internal/telephony/imsphone/ImsPhoneCall;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneCallTracker;->mImsCallListener:Lcom/android/ims/ImsCall$Listener;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneCallTracker;->mImsManager:Lcom/android/ims/ImsManager;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneCallTracker;->mOnHoldToneId:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneCallTracker;->mOnHoldToneStarted:Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneCallTracker;->mPendingMO:Lcom/android/internal/telephony/imsphone/ImsPhoneConnection;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneCallTracker;->mPendingUssd:Landroid/os/Message;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneCallTracker;->mPhone:Lcom/android/internal/telephony/imsphone/ImsPhone;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneCallTracker;->mRingingCall:Lcom/android/internal/telephony/imsphone/ImsPhoneCall;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneCallTracker;->mSwitchingFgAndBgCalls:Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneCallTracker;->mSyncHold:Ljava/lang/Object;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneCallTracker;->mUssdSession:Lcom/android/ims/ImsCall;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneCallTracker;->processCallStateChange(Lcom/android/ims/ImsCall;Lcom/android/internal/telephony/Call$State;I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneCallTracker;->processCallStateChange(Lcom/android/ims/ImsCall;Lcom/android/internal/telephony/Call$State;IZ)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneCallTracker;->removeConnection(Lcom/android/internal/telephony/imsphone/ImsPhoneConnection;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneCallTracker;->setVideoCallProvider(Lcom/android/internal/telephony/imsphone/ImsPhoneConnection;Lcom/android/ims/ImsCall;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneCallTracker;->switchAfterConferenceSuccess()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneCallTracker;->updatePhoneState()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneConnection;->acquireWakeLock()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneConnection;->createWakeLock(Landroid/content/Context;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneConnection;->getCall()Lcom/android/internal/telephony/imsphone/ImsPhoneCall;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneConnection;->getOwner()Lcom/android/internal/telephony/imsphone/ImsPhoneCallTracker;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneConnection;->isMultiparty()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneConnection;->mDisconnected:Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneConnection;->mImsCall:Lcom/android/ims/ImsCall;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneConnection;->mOwner:Lcom/android/internal/telephony/imsphone/ImsPhoneCallTracker;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneConnection;->mParent:Lcom/android/internal/telephony/imsphone/ImsPhoneCall;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneConnection;->onDisconnect()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneConnection;->update(Lcom/android/ims/ImsCall;Lcom/android/internal/telephony/Call$State;)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhone;->getActionFromCFAction(I)I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhone;->getBackgroundCall()Lcom/android/internal/telephony/imsphone/ImsPhoneCall;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhone;->getCallForwardingOption(ILandroid/os/Message;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhone;->getCallWaiting(Landroid/os/Message;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhone;->getConditionFromCFReason(I)I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhone;->getForegroundCall()Lcom/android/internal/telephony/imsphone/ImsPhoneCall;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhone;->getRingingCall()Lcom/android/internal/telephony/imsphone/ImsPhoneCall;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhone;->getServiceState()Landroid/telephony/ServiceState;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhone;->getState()Lcom/android/internal/telephony/PhoneConstants$State;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhone;->handleEnterEmergencyCallbackMode()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhone;->handleExitEmergencyCallbackMode()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhone;->handleInCallMmiCommands(Ljava/lang/String;)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhone;->isCfEnable(I)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhone;->isUtEnabled()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhone;->isValidCommandInterfaceCFAction(I)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhone;->isValidCommandInterfaceCFReason(I)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhone;->isVolteEnabled()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhone;->mCT:Lcom/android/internal/telephony/imsphone/ImsPhoneCallTracker;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneMmiCode;->getCLIRMode()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneMmiCode;->getDialingNumber()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneMmiCode;->getErrorMessage(Landroid/os/AsyncResult;)Ljava/lang/CharSequence;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneMmiCode;->getScString()Ljava/lang/CharSequence;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneMmiCode;->isActivate()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneMmiCode;->isDeactivate()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneMmiCode;->isEmptyOrNull(Ljava/lang/CharSequence;)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneMmiCode;->isErasure()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneMmiCode;->isRegister()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneMmiCode;->isSupportedOverImsPhone()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneMmiCode;->isTemporaryModeCLIR()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneMmiCode;->mContext:Landroid/content/Context;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneMmiCode;->mPhone:Lcom/android/internal/telephony/imsphone/ImsPhone;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneMmiCode;->newFromDialString(Ljava/lang/String;Lcom/android/internal/telephony/imsphone/ImsPhone;)Lcom/android/internal/telephony/imsphone/ImsPhoneMmiCode;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneMmiCode;->processCode()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhoneMmiCode;->serviceClassToCFString(I)Ljava/lang/CharSequence;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhone;->mPendingMMIs:Ljava/util/ArrayList;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhone;->mSS:Landroid/telephony/ServiceState;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhone;->notifyUnknownConnection(Lcom/android/internal/telephony/Connection;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhone;->onMMIDone(Lcom/android/internal/telephony/imsphone/ImsPhoneMmiCode;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhone;->sendErrorResponse(Landroid/os/Message;Ljava/lang/Throwable;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhone;->sendErrorResponse(Landroid/os/Message;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhone;->setCallForwardingOption(IILjava/lang/String;IILandroid/os/Message;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhone;->setCallWaiting(ZLandroid/os/Message;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhone;->setImsRegistered(Z)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhone;->setOnEcbModeExitResponse(Landroid/os/Handler;ILjava/lang/Object;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/imsphone/ImsPhone;->setServiceState(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/InboundSmsHandler$SmsBroadcastReceiver;->mDeleteWhereArgs:[Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/InboundSmsHandler$SmsBroadcastReceiver;->mDeleteWhere:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/InboundSmsHandler;->acknowledgeLastIncomingSms(ZILandroid/os/Message;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/InboundSmsHandler;->deleteFromRawTable(Ljava/lang/String;[Ljava/lang/String;I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/InboundSmsHandler;->dispatchIntent(Landroid/content/Intent;Ljava/lang/String;Ljava/lang/String;Landroid/os/Bundle;Landroid/content/BroadcastReceiver;Landroid/os/UserHandle;I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/InboundSmsHandler;->dispatchNormalMessage(Lcom/android/internal/telephony/SmsMessageBase;I)I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/InboundSmsHandler;->getPhone()Lcom/android/internal/telephony/Phone;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/InboundSmsHandler;->handleInjectSms(Landroid/os/AsyncResult;Z)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/InboundSmsHandler;->handleNewSms(Landroid/os/AsyncResult;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/InboundSmsHandler;->handleSmsWhitelisting(Landroid/content/ComponentName;Z)Landroid/os/Bundle;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/InboundSmsHandler;->isSkipNotifyFlagSet(I)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/InboundSmsHandler;->loge(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/InboundSmsHandler;->log(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/InboundSmsHandler;->mContext:Landroid/content/Context;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/InboundSmsHandler;->mDeliveringState:Lcom/android/internal/telephony/InboundSmsHandler$DeliveringState;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/InboundSmsHandler;->mIdleState:Lcom/android/internal/telephony/InboundSmsHandler$IdleState;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/InboundSmsHandler;->mPhone:Lcom/android/internal/telephony/Phone;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/InboundSmsHandler;->mResolver:Landroid/content/ContentResolver;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/InboundSmsHandler;->mUserManager:Landroid/os/UserManager;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/InboundSmsHandler;->mWaitingState:Lcom/android/internal/telephony/InboundSmsHandler$WaitingState;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/InboundSmsHandler;->mWakeLock:Landroid/os/PowerManager$WakeLock;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/InboundSmsHandler;->mWapPush:Lcom/android/internal/telephony/WapPushOverSms;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/InboundSmsHandler;->processMessagePart(Lcom/android/internal/telephony/InboundSmsTracker;)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/InboundSmsHandler;->showNewMessageNotification()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/InboundSmsTracker;->getFormat()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/InboundSmsTracker;->getIndexOffset()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/IntRangeManager;->mRanges:Ljava/util/ArrayList;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/IPhoneSubInfo;->getDeviceId(Ljava/lang/String;)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ITelephony$Stub;->DESCRIPTOR:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ITelephony$Stub;->TRANSACTION_dial:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ITelephony;->handlePinMmiForSubscriber(ILjava/lang/String;)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ITelephony;->iccCloseLogicalChannel(II)Z,是,"【小米移动APP】这个方法是我们核心业务的技术实现方案,我们需要调用该方法通过APDU指令与SIM卡进行写卡读卡操作,将三大运营商的SIM卡数据远程写入到米粉卡当中,主要用于用户对于米粉卡进行远程激活使用，如果API不被支持，我们将受到灾难性影响。
【全球上网】同上",,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ITelephony;->iccTransmitApduLogicalChannel(IIIIIIILjava/lang/String;)Ljava/lang/String;,是,"【小米移动APP】这个方法是我们核心业务的技术实现方案,我们需要调用该方法通过APDU指令与SIM卡进行写卡读卡操作,将三大运营商的SIM卡数据远程写入到米粉卡当中,主要用于用户对于米粉卡进行远程激活使用，如果API不被支持，我们将受到灾难性影响。
【全球上网】同上",,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ITelephony;->isRadioOnForSubscriber(ILjava/lang/String;)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ITelephony;->isRadioOn(Ljava/lang/String;)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ITelephonyRegistry;->notifyCallStateForAllSubs(ILjava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/OperatorInfo;->CREATOR:Landroid/os/Parcelable$Creator;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/OperatorInfo;->getOperatorAlphaLong()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/OperatorInfo;->getOperatorAlphaShort()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/OperatorInfo;->getOperatorNumeric()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/OperatorInfo;->getState()Lcom/android/internal/telephony/OperatorInfo$State;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/OperatorInfo;-><init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/android/internal/telephony/OperatorInfo$State;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/OperatorInfo;-><init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/OperatorInfo;->mOperatorAlphaLong:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/OperatorInfo;->mOperatorAlphaShort:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/OperatorInfo;->mOperatorNumeric:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/OperatorInfo;->mState:Lcom/android/internal/telephony/OperatorInfo$State;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/OperatorInfo;->rilStateToState(Ljava/lang/String;)Lcom/android/internal/telephony/OperatorInfo$State;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Phone;->dispose()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/PhoneFactory;->calculatePreferredNetworkType(Landroid/content/Context;I)I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/PhoneFactory;->getDefaultSubscription()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/PhoneFactory;->getPhones()[Lcom/android/internal/telephony/Phone;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Phone;->getCallTracker()Lcom/android/internal/telephony/CallTracker;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Phone;->getDataConnectionState()Lcom/android/internal/telephony/PhoneConstants$DataState;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Phone;->getIccFileHandler()Lcom/android/internal/telephony/uicc/IccFileHandler;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Phone;->getImsPhone()Lcom/android/internal/telephony/Phone;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Phone;->getIsimRecords()Lcom/android/internal/telephony/uicc/IsimRecords;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Phone;->getMsisdn()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Phone;->getNai()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Phone;->getPhoneId()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Phone;->getServiceStateTracker()Lcom/android/internal/telephony/ServiceStateTracker;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Phone;->getSystemProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Phone;->getUiccCard()Lcom/android/internal/telephony/uicc/UiccCard;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Phone;->getVideoState(Lcom/android/internal/telephony/Call;)I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/PhoneInternalInterface;->PREFERRED_NT_MODE:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Phone;->isUtEnabled()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Phone;->isVideoEnabled()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Phone;->isVolteEnabled()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Phone;->isWifiCallingEnabled()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Phone;->mCi:Lcom/android/internal/telephony/CommandsInterface;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Phone;->mContext:Landroid/content/Context;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Phone;->mIccRecords:Ljava/util/concurrent/atomic/AtomicReference;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Phone;->mImsPhone:Lcom/android/internal/telephony/Phone;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Phone;->mNotifier:Lcom/android/internal/telephony/PhoneNotifier;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Phone;->mPhoneId:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Phone;->mSmsStorageMonitor:Lcom/android/internal/telephony/SmsStorageMonitor;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Phone;->mUiccApplication:Ljava/util/concurrent/atomic/AtomicReference;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Phone;->mUiccController:Lcom/android/internal/telephony/uicc/UiccController;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Phone;->needsOtaServiceProvisioning()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Phone;->notifyOtaspChanged(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/PhoneSubInfoController;->getDefaultSubscription()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/PhoneSubInfoController;->getPhone(I)Lcom/android/internal/telephony/Phone;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/PhoneSubInfoController;->loge(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/PhoneSubInfoController;->mContext:Landroid/content/Context;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/PhoneSwitcher;->activate(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/PhoneSwitcher;->deactivate(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/PhoneSwitcher;->log(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/PhoneSwitcher;->mMaxDataAttachModemCount:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ProxyController;->completeRadioCapabilityTransaction()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ProxyController;->getInstance()Lcom/android/internal/telephony/ProxyController;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ProxyController;->logd(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ProxyController;->mOldRadioAccessFamily:[I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ProxyController;->mRadioCapabilitySessionId:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ProxyController;->mSetRadioAccessFamilyStatus:[I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ProxyController;->mUniqueIdGenerator:Ljava/util/concurrent/atomic/AtomicInteger;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ProxyController;->sendRadioCapabilityRequest(IIIILjava/lang/String;II)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ProxyController;->sProxyController:Lcom/android/internal/telephony/ProxyController;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/RadioCapability;->getRadioAccessFamily()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/RetryManager;->log(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/RetryManager;->mApnType:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/RetryManager;->mFailFastInterApnDelay:J,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/RetryManager;->mInterApnDelay:J,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/RetryManager;->mPhone:Lcom/android/internal/telephony/Phone;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/RIL;->acquireWakeLock(Lcom/android/internal/telephony/RILRequest;I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/RIL;->clearRequestList(IZ)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/RIL;->clearWakeLock(I)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/RIL;->decrementWakeLock(Lcom/android/internal/telephony/RILRequest;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/RIL;->getResponseForTimedOutRILRequest(Lcom/android/internal/telephony/RILRequest;)Ljava/lang/Object;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/RIL;->hangupForegroundResumeBackground(Landroid/os/Message;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/RIL;->hangupWaitingOrBackground(Landroid/os/Message;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/RIL;->invokeOemRilRequestRaw([BLandroid/os/Message;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/RIL;->makeStaticRadioCapability()Lcom/android/internal/telephony/RadioCapability;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/RIL;->mRequestList:Landroid/util/SparseArray;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/RIL;->mTestingEmergencyCall:Ljava/util/concurrent/atomic/AtomicBoolean;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/RIL;->notifyRegistrantsRilConnectionChanged(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->fixUnknownMcc(Ljava/lang/String;I)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->getCurrentDataConnectionState()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->getDesiredPowerState()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->getPhoneId()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->getSystemProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->isConcurrentVoiceAndDataAllowed()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->isGprsConsistent(II)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->isImsRegistered()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->isInHomeSidNid(II)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->isInvalidOperatorNumeric(Ljava/lang/String;)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->loge(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->log(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->mCi:Lcom/android/internal/telephony/CommandsInterface;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->mCr:Landroid/content/ContentResolver;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->mCurDataSpn:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->mCurPlmn:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->mCurShowPlmn:Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->mCurShowSpn:Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->mCurSpn:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->mDefaultRoamingIndicator:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->mDeviceShuttingDown:Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->mEmergencyOnly:Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->mIccRecords:Lcom/android/internal/telephony/uicc/IccRecords;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->mIntentReceiver:Landroid/content/BroadcastReceiver;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->mIsSubscriptionFromRuim:Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->mMaxDataCalls:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->mNewMaxDataCalls:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->mNewReasonDataDenied:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->mNewSS:Landroid/telephony/ServiceState;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->mOnSubscriptionsChangedListener:Lcom/android/internal/telephony/ServiceStateTracker$SstSubscriptionsChangedListener;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->mPhone:Lcom/android/internal/telephony/GsmCdmaPhone;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->mPreferredNetworkType:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->mReasonDataDenied:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->mReportedGprsNoReg:Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->mRoamingIndicator:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->mSpnUpdatePending:Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->mSS:Landroid/telephony/ServiceState;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->mStartedGprsRegCheck:Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->mSubId:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->mSubscriptionController:Lcom/android/internal/telephony/SubscriptionController;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->mSubscriptionManager:Landroid/telephony/SubscriptionManager;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->mUiccApplcation:Lcom/android/internal/telephony/uicc/UiccCardApplication;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->mUiccController:Lcom/android/internal/telephony/uicc/UiccController;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->notifySignalStrength()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->pollState()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->reRegisterNetwork(Landroid/os/Message;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->setOperatorIdd(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->setRoamingType(Landroid/telephony/ServiceState;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->setSignalStrengthDefaultValues()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->updateOtaspState()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->updatePhoneObject()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->updateRoamingState()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->updateSpnDisplay()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/ServiceStateTracker;->useDataRegStateForDataOnlyDevices()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/sip/SipPhone$SipCall;->hold()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/sip/SipPhone$SipCall;->switchWith(Lcom/android/internal/telephony/sip/SipPhone$SipCall;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/sip/SipPhone$SipCall;->unhold()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/sip/SipPhone;->loge(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/sip/SipPhone;->log(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/sip/SipPhone;->mBackgroundCall:Lcom/android/internal/telephony/sip/SipPhone$SipCall;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/sip/SipPhone;->mForegroundCall:Lcom/android/internal/telephony/sip/SipPhone$SipCall;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Sms7BitEncodingTranslator;->DBG:Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Sms7BitEncodingTranslator;->mTranslationTableCDMA:Landroid/util/SparseIntArray;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Sms7BitEncodingTranslator;->mTranslationTableCommon:Landroid/util/SparseIntArray;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/Sms7BitEncodingTranslator;->mTranslationTableGSM:Landroid/util/SparseIntArray;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SmsApplication$SmsApplicationData;->mApplicationName:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SmsApplication;->configurePreferredActivity(Landroid/content/pm/PackageManager;Landroid/content/ComponentName;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SmsApplication;->getDefaultRespondViaMessageApplication(Landroid/content/Context;Z)Landroid/content/ComponentName;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SmsApplication;->getSmsApplicationData(Ljava/lang/String;Landroid/content/Context;)Lcom/android/internal/telephony/SmsApplication$SmsApplicationData;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SmsApplication;->setDefaultApplication(Ljava/lang/String;Landroid/content/Context;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SmsApplication;->shouldWriteMessageForPackage(Ljava/lang/String;Landroid/content/Context;)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SmsController;->copyMessageToIccEfForSubscriber(ILjava/lang/String;I[B[B)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SmsController;->disableCellBroadcastForSubscriber(III)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SmsController;->disableCellBroadcastRangeForSubscriber(IIII)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SmsController;->enableCellBroadcastForSubscriber(III)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SmsController;->enableCellBroadcastRangeForSubscriber(IIII)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SmsController;->getAllMessagesFromIccEfForSubscriber(ILjava/lang/String;)Ljava/util/List;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SmsController;->getIccSmsInterfaceManager(I)Lcom/android/internal/telephony/IccSmsInterfaceManager;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SmsController;->getImsSmsFormatForSubscriber(I)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SmsController;->getPreferredSmsSubscription()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SmsController;->isImsSmsSupportedForSubscriber(I)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SmsController;->sendDataForSubscriber(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;I[BLandroid/app/PendingIntent;Landroid/app/PendingIntent;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SmsController;->sendErrorInPendingIntent(Landroid/app/PendingIntent;I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SmsController;->sendErrorInPendingIntents(Ljava/util/List;I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SmsController;->updateMessageOnIccEfForSubscriber(ILjava/lang/String;II[B)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SMSDispatcher$ConfirmDialogListener;->mNegativeButton:Landroid/widget/Button;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SMSDispatcher$ConfirmDialogListener;->mPositiveButton:Landroid/widget/Button;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SMSDispatcher$ConfirmDialogListener;->mRememberUndoInstruction:Landroid/widget/TextView;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SMSDispatcher$MultipartSmsSender;->sendSmsByCarrierApp(Ljava/lang/String;Lcom/android/internal/telephony/SMSDispatcher$MultipartSmsSenderCallback;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SMSDispatcher$SmsTracker;->mAppInfo:Landroid/content/pm/PackageInfo;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SMSDispatcher$SmsTracker;->mDestAddress:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SMSDispatcher$SmsTracker;->mMessageUri:Landroid/net/Uri;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SMSDispatcher$SmsTracker;->mPersistMessage:Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SMSDispatcher$SmsTracker;->mTimestamp:J,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SMSDispatcher$SmsTracker;->onFailed(Landroid/content/Context;II)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SMSDispatcher$SmsTracker;->onSent(Landroid/content/Context;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SMSDispatcher$SmsTracker;->updateSentMessageStatus(Landroid/content/Context;I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SMSDispatcher;->calculateLength(Ljava/lang/CharSequence;Z)Lcom/android/internal/telephony/GsmAlphabet$TextEncodingDetails;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SMSDispatcher;->checkCallerIsPhoneOrCarrierApp()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SMSDispatcher;->dispose()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SMSDispatcher;->getCarrierAppPackageName()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SMSDispatcher;->getMultipartMessageText(Ljava/util/ArrayList;)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SMSDispatcher;->getNextConcatenatedRef()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SMSDispatcher;->getSubId()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SMSDispatcher;->handleConfirmShortCode(Z[Lcom/android/internal/telephony/SMSDispatcher$SmsTracker;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SMSDispatcher;->mCi:Lcom/android/internal/telephony/CommandsInterface;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SMSDispatcher;->mTelephonyManager:Landroid/telephony/TelephonyManager;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SMSDispatcher;->processSendSmsResponse(Lcom/android/internal/telephony/SMSDispatcher$SmsTracker;II)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SMSDispatcher;->sendSubmitPdu(Lcom/android/internal/telephony/SMSDispatcher$SmsTracker;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SmsMessageBase;->mIsMwi:Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SmsMessageBase;->mMessageBody:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SmsMessageBase;->mMessageRef:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SmsMessageBase;->mMwiDontStore:Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SmsMessageBase;->mMwiSense:Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SmsMessageBase;->mOriginatingAddress:Lcom/android/internal/telephony/SmsAddress;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SmsMessageBase;->mScAddress:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SmsMessageBase;->mUserDataHeader:Lcom/android/internal/telephony/SmsHeader;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SmsPermissions;->log(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SmsPermissions;->mAppOps:Landroid/app/AppOpsManager;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SmsPermissions;->mContext:Landroid/content/Context;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SmsPermissions;->mPhone:Lcom/android/internal/telephony/Phone;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SmsResponse;->mAckPdu:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SmsResponse;->mErrorCode:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SmsResponse;->mMessageRef:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SmsStorageMonitor;->mCi:Lcom/android/internal/telephony/CommandsInterface;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SmsUsageMonitor;->check(Ljava/lang/String;I)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SmsUsageMonitor;-><init>(Landroid/content/Context;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SubscriptionController;->broadcastDefaultDataSubIdChanged(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SubscriptionController;->colorArr:[I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SubscriptionController;->enforceModifyPhoneState(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SubscriptionController;->getActiveSubInfoCount(Ljava/lang/String;)I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SubscriptionController;->getActiveSubscriptionInfo(ILjava/lang/String;)Landroid/telephony/SubscriptionInfo;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SubscriptionController;->getActiveSubscriptionInfoList(Ljava/lang/String;)Ljava/util/List;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SubscriptionController;->getDefaultDataSubId()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SubscriptionController;->getDefaultSmsSubId()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SubscriptionController;->getDefaultSubId()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SubscriptionController;->getDefaultVoiceSubId()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SubscriptionController;->getInstance()Lcom/android/internal/telephony/SubscriptionController;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SubscriptionController;->getPhoneId(I)I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SubscriptionController;->getSubId(I)[I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SubscriptionController;->getSubIdUsingPhoneId(I)I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SubscriptionController;->getSubInfo(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SubscriptionController;->getSubInfoRecord(Landroid/database/Cursor;)Landroid/telephony/SubscriptionInfo;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SubscriptionController;->isActiveSubId(I)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SubscriptionController;->isSubInfoReady()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SubscriptionController;->logd(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SubscriptionController;->logdl(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SubscriptionController;->loge(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SubscriptionController;->mContext:Landroid/content/Context;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SubscriptionController;->mDefaultPhoneId:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SubscriptionController;->mLock:Ljava/lang/Object;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SubscriptionController;->notifySubscriptionInfoChanged()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SubscriptionController;->setDefaultDataSubId(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SubscriptionController;->setDefaultFallbackSubId(II)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SubscriptionController;->setDefaultSmsSubId(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SubscriptionController;->setDefaultVoiceSubId(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SubscriptionController;->setPlmnSpn(IZLjava/lang/String;ZLjava/lang/String;)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SubscriptionController;->validateSubId(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SubscriptionInfoUpdater;->broadcastSimStateChanged(ILjava/lang/String;Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SubscriptionInfoUpdater;->isAllIccIdQueryDone()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SubscriptionInfoUpdater;->logd(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SubscriptionInfoUpdater;->mCurrentlyActiveUserId:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SubscriptionInfoUpdater;->sContext:Landroid/content/Context;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SubscriptionInfoUpdater;->sIccId:[Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/SubscriptionInfoUpdater;->SUPPORTED_MODEM_COUNT:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/TelephonyCapabilities;->supportsAdn(I)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/AdnRecord;->buildAdnString(I)[B,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/AdnRecordCache;->extensionEfForEf(I)I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/AdnRecordCache;->getRecordsIfLoaded(I)Ljava/util/ArrayList;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/AdnRecordCache;->mAdnLikeWaiters:Landroid/util/SparseArray;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/AdnRecordCache;->mFh:Lcom/android/internal/telephony/uicc/IccFileHandler;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/AdnRecordCache;->mUserWriteResponse:Landroid/util/SparseArray;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/AdnRecordCache;->mUsimPhoneBookManager:Lcom/android/internal/telephony/gsm/UsimPhoneBookManager;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/AdnRecordCache;->reset()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/AdnRecordCache;->sendErrorResponse(Landroid/os/Message;Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/AdnRecordCache;->updateAdnByIndex(ILcom/android/internal/telephony/uicc/AdnRecord;ILjava/lang/String;Landroid/os/Message;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/AdnRecord;->CREATOR:Landroid/os/Parcelable$Creator;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/AdnRecord;->getEmails()[Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/AdnRecord;->getNumber()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/AdnRecord;-><init>([B)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/AdnRecord;-><init>(II[B)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/AdnRecord;-><init>(IILjava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/AdnRecord;-><init>(IILjava/lang/String;Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/AdnRecord;-><init>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/AdnRecord;-><init>(Ljava/lang/String;Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/AdnRecord;->isEmpty()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/AdnRecordLoader;->getEFPath(I)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/AdnRecordLoader;-><init>(Lcom/android/internal/telephony/uicc/IccFileHandler;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/AdnRecordLoader;->loadFromEF(IIILandroid/os/Message;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/AdnRecordLoader;->mFh:Lcom/android/internal/telephony/uicc/IccFileHandler;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/AdnRecordLoader;->updateEF(Lcom/android/internal/telephony/uicc/AdnRecord;IIILjava/lang/String;Landroid/os/Message;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/AdnRecord;->mAlphaTag:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/AdnRecord;->mEfid:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/AdnRecord;->mEmails:[Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/AdnRecord;->mExtRecord:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/AdnRecord;->mNumber:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/AdnRecord;->mRecordNumber:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/AdnRecord;->setEmails([Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IccCardApplicationStatus;->AppTypeFromRILInt(I)Lcom/android/internal/telephony/uicc/IccCardApplicationStatus$AppType;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IccCardApplicationStatus;->app_type:Lcom/android/internal/telephony/uicc/IccCardApplicationStatus$AppType;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IccCardApplicationStatus;-><init>()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IccCardStatus$CardState;->isCardPresent()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IccCardStatus;->mApplications:[Lcom/android/internal/telephony/uicc/IccCardApplicationStatus;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IccCardStatus;->mCdmaSubscriptionAppIndex:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IccCardStatus;->mGsmUmtsSubscriptionAppIndex:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IccCardStatus;->mImsSubscriptionAppIndex:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IccCardStatus;->mUniversalPinState:Lcom/android/internal/telephony/uicc/IccCardStatus$PinState;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IccFileHandler$LoadLinearFixedContext;-><init>(IILandroid/os/Message;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IccFileHandler$LoadLinearFixedContext;->mCountRecords:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IccFileHandler$LoadLinearFixedContext;->mRecordNum:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IccFileHandler$LoadLinearFixedContext;->mRecordSize:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IccFileHandler$LoadLinearFixedContext;->results:Ljava/util/ArrayList;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IccFileHandler;->getEFLinearRecordSize(ILandroid/os/Message;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IccFileHandler;->getEFLinearRecordSize(ILjava/lang/String;Landroid/os/Message;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IccFileHandler;->getEFPath(I)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IccFileHandler;->loadEFLinearFixedAll(ILandroid/os/Message;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IccFileHandler;->loadEFLinearFixedAll(ILjava/lang/String;Landroid/os/Message;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IccFileHandler;->loadEFLinearFixed(IILandroid/os/Message;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IccFileHandler;->loadEFLinearFixed(ILjava/lang/String;ILandroid/os/Message;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IccFileHandler;->mAid:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IccFileHandler;->mCi:Lcom/android/internal/telephony/CommandsInterface;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IccFileHandler;->mParentApp:Lcom/android/internal/telephony/uicc/UiccCardApplication;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IccFileHandler;->updateEFLinearFixed(II[BLjava/lang/String;Landroid/os/Message;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IccFileHandler;->updateEFLinearFixed(ILjava/lang/String;I[BLjava/lang/String;Landroid/os/Message;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IccFileHandler;->updateEFTransparent(I[BLandroid/os/Message;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IccRefreshResponse;->aid:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IccRefreshResponse;->efId:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IccRefreshResponse;-><init>()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IccServiceTable;->getTag()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IccServiceTable;->mServiceTable:[B,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IccUtils;->hexCharToInt(C)I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IsimRecords;->getIsimDomain()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IsimRecords;->getIsimImpi()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IsimRecords;->getIsimImpu()[Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IsimUiccRecords;->auth_rsp:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IsimUiccRecords;->fetchIsimRecords()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IsimUiccRecords;->isimTlvToString([B)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IsimUiccRecords;->log(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IsimUiccRecords;->mIsimDomain:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IsimUiccRecords;->mIsimImpi:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IsimUiccRecords;->mIsimImpu:[Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IsimUiccRecords;->mIsimIst:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/IsimUiccRecords;->mIsimPcscf:[Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/UiccPhoneBookController;->getDefaultSubscription()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/UiccPhoneBookController;->getIccPhoneBookInterfaceManager(I)Lcom/android/internal/telephony/IccPhoneBookInterfaceManager;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/UiccPhoneBookController;-><init>()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/RuimRecords;->fetchRuimRecords()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/RuimRecords;->getAssetLanguages(Landroid/content/Context;)[Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/RuimRecords;->getCsimSpnDisplayCondition()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/RuimRecords;->getMdn()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/RuimRecords;->getMdnNumber()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/RuimRecords;->getRUIMOperatorNumeric()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/RuimRecords;->loge(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/RuimRecords;->log(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/RuimRecords;->mEFli:[B,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/RuimRecords;->mEFpl:[B,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/RuimRecords;->mMin:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/RuimRecords;->mNai:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/RuimRecords;->onGetCSimEprlDone(Landroid/os/AsyncResult;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/SIMRecords;->fetchSimRecords()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/SIMRecords;->getExtFromEf(I)I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/SIMRecords;->getMsisdnNumber()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/SIMRecords;->getOperatorNumeric()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/SIMRecords;->getSpnFsm(ZLandroid/os/AsyncResult;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/SIMRecords;->getVoiceMailNumber()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/SIMRecords;->isCphsMailboxEnabled()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/SIMRecords;->loge(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/SIMRecords;->log(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/SIMRecords;->logv(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/SIMRecords;->mEfCff:[B,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/SIMRecords;->mEfCfis:[B,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/SIMRecords;->mEfCPHS_MWI:[B,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/SIMRecords;->mEfLi:[B,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/SIMRecords;->mEfMWIS:[B,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/SIMRecords;->mEfPl:[B,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/SIMRecords;->mUsimServiceTable:Lcom/android/internal/telephony/uicc/UsimServiceTable;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/SIMRecords;->mVmConfig:Lcom/android/internal/telephony/uicc/VoiceMailConstants;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/SIMRecords;->setVoiceCallForwardingFlag(IZLjava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/UiccCardApplication;->dispose()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/UiccCardApplication;->getAuthContext()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/UiccCardApplication;->getPersoSubState()Lcom/android/internal/telephony/uicc/IccCardApplicationStatus$PersoSubState;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/UiccCardApplication;->getPhoneId()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/UiccCardApplication;->getPin1State()Lcom/android/internal/telephony/uicc/IccCardStatus$PinState;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/UiccCardApplication;->loge(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/UiccCardApplication;->log(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/UiccCardApplication;->mAid:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/UiccCardApplication;->mAppState:Lcom/android/internal/telephony/uicc/IccCardApplicationStatus$AppState;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/UiccCardApplication;->mAppType:Lcom/android/internal/telephony/uicc/IccCardApplicationStatus$AppType;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/UiccCardApplication;->mCi:Lcom/android/internal/telephony/CommandsInterface;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/UiccCardApplication;->mDestroyed:Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/UiccCardApplication;->mLock:Ljava/lang/Object;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/UiccCardApplication;->mPersoSubState:Lcom/android/internal/telephony/uicc/IccCardApplicationStatus$PersoSubState;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/UiccCardApplication;->mPin1State:Lcom/android/internal/telephony/uicc/IccCardStatus$PinState;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/UiccCardApplication;->registerForReady(Landroid/os/Handler;ILjava/lang/Object;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/UiccCardApplication;->update(Lcom/android/internal/telephony/uicc/IccCardApplicationStatus;Landroid/content/Context;Lcom/android/internal/telephony/CommandsInterface;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/UiccCard;->getApplicationByType(I)Lcom/android/internal/telephony/uicc/UiccCardApplication;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/UiccCard;->getCarrierPackageNamesForIntent(Landroid/content/pm/PackageManager;Landroid/content/Intent;)Ljava/util/List;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/UiccCard;->getIccId()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/UiccCard;->getOperatorBrandOverride()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/UiccCard;->isApplicationOnIcc(Lcom/android/internal/telephony/uicc/IccCardApplicationStatus$AppType;)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/UiccCard;->loge(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/UiccCard;->log(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/UiccCard;->mCardState:Lcom/android/internal/telephony/uicc/IccCardStatus$CardState;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/UiccCard;->mLock:Ljava/lang/Object;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/UiccCard;->mPhoneId:I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/UiccCarrierPrivilegeRules$TLV;->length:Ljava/lang/Integer;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/UiccCarrierPrivilegeRules$TLV;->value:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/UiccCarrierPrivilegeRules;->mLoadedCallback:Landroid/os/Message;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/UiccCarrierPrivilegeRules;->mState:Ljava/util/concurrent/atomic/AtomicInteger;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/UiccController;->getIccFileHandler(II)Lcom/android/internal/telephony/uicc/IccFileHandler;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/UiccController;->getIccRecords(II)Lcom/android/internal/telephony/uicc/IccRecords;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/UiccController;->getUiccCardApplication(II)Lcom/android/internal/telephony/uicc/UiccCardApplication;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/UiccController;->log(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/UiccController;->mCis:[Lcom/android/internal/telephony/CommandsInterface;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/UsimServiceTable;->isAvailable(Lcom/android/internal/telephony/uicc/UsimServiceTable$UsimService;)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/uicc/VoiceMailConstants;-><init>()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/UUSInfo;->getDcs()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/UUSInfo;->getType()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/UUSInfo;->getUserData()[B,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/WakeLockStateMachine;->log(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/WakeLockStateMachine;->mContext:Landroid/content/Context;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/WakeLockStateMachine;->mIdleState:Lcom/android/internal/telephony/WakeLockStateMachine$IdleState;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/WakeLockStateMachine;->mPhone:Lcom/android/internal/telephony/Phone;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/WapPushOverSms;->isWapPushForMms([BLcom/android/internal/telephony/InboundSmsHandler;)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/WapPushOverSms;->mContext:Landroid/content/Context;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/WapPushOverSms;->mWapPushManager:Lcom/android/internal/telephony/IWapPushManager;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/WspTypeDecoder;->decodeXWapApplicationId(I)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/WspTypeDecoder;->getContentParameters()Ljava/util/HashMap;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/WspTypeDecoder;->mWspData:[B,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/telephony/WspTypeDecoder;->seekXWapApplicationId(II)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/util/ArrayUtils;->appendElement(Ljava/lang/Class;[Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/util/ArrayUtils;->newUnpaddedArray(Ljava/lang/Class;I)[Ljava/lang/Object;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/util/ArrayUtils;->newUnpaddedIntArray(I)[I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/util/ArrayUtils;->removeElement(Ljava/lang/Class;[Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/util/AsyncChannel;->connected(Landroid/content/Context;Landroid/os/Handler;Landroid/os/Messenger;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/util/AsyncChannel;->replyToMessage(Landroid/os/Message;IIILjava/lang/Object;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/util/AsyncChannel;->replyToMessage(Landroid/os/Message;II)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/util/AsyncChannel;->replyToMessage(Landroid/os/Message;ILjava/lang/Object;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/util/AsyncChannel;->sendMessage(II)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/util/AsyncChannel;->sendMessageSynchronously(III)Landroid/os/Message;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/util/AsyncChannel;->sendMessageSynchronously(Landroid/os/Message;)Landroid/os/Message;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/util/GrowingArrayUtils;->append([III)[I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/util/GrowingArrayUtils;->append([Ljava/lang/Object;ILjava/lang/Object;)[Ljava/lang/Object;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/util/HexDump;->toHexString([BZ)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/util/IndentingPrintWriter;->decreaseIndent()Lcom/android/internal/util/IndentingPrintWriter;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/util/IndentingPrintWriter;->increaseIndent()Lcom/android/internal/util/IndentingPrintWriter;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/util/IndentingPrintWriter;-><init>(Ljava/io/Writer;Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/util/MemInfoReader;->getCachedSize()J,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/util/MemInfoReader;->getFreeSize()J,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/util/Preconditions;->checkArgumentInRange(IIILjava/lang/String;)I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/util/Preconditions;->checkArgument(ZLjava/lang/Object;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/util/Preconditions;->checkState(ZLjava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/util/State;->exit()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/util/StateMachine;->addState(Lcom/android/internal/util/State;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/util/StateMachine;->dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/util/StateMachine;-><init>(Ljava/lang/String;Landroid/os/Handler;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/util/StateMachine;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/util/StateMachine;->sendMessage(IIILjava/lang/Object;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/util/StateMachine;->sendMessage(II)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/util/StateMachine;->setInitialState(Lcom/android/internal/util/State;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/util/StateMachine;->start()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/util/StateMachine;->transitionTo(Lcom/android/internal/util/IState;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/view/IInputConnectionWrapper;->mLock:Ljava/lang/Object;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/view/menu/ActionMenu;-><init>(Landroid/content/Context;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/view/menu/ActionMenuItem;-><init>(Landroid/content/Context;IIIILjava/lang/CharSequence;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/view/menu/ActionMenuItemView;->hasText()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/view/menu/MenuBuilder;->addMenuPresenter(Lcom/android/internal/view/menu/MenuPresenter;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/view/menu/MenuBuilder;->getNonActionItems()Ljava/util/ArrayList;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/view/menu/MenuBuilder;->removeMenuPresenter(Lcom/android/internal/view/menu/MenuPresenter;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/view/menu/MenuBuilder;->setDefaultShowAsAction(I)Lcom/android/internal/view/menu/MenuBuilder;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/view/menu/MenuBuilder;->startDispatchingItemsChanged()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/view/menu/MenuBuilder;->stopDispatchingItemsChanged()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/view/menu/MenuItemImpl;->isActionButton()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/view/menu/MenuItemImpl;->requestsActionButton()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/view/menu/MenuItemImpl;->requiresActionButton()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/view/menu/MenuPopupHelper;->getPopup()Lcom/android/internal/view/menu/MenuPopup;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/view/menu/MenuPopupHelper;-><init>(Landroid/content/Context;Lcom/android/internal/view/menu/MenuBuilder;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/view/menu/MenuPopupHelper;->mForceShowIcon:Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/view/menu/MenuPopupHelper;->setAnchorView(Landroid/view/View;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/view/menu/MenuPopupHelper;->setGravity(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/view/menu/MenuPopupHelper;->tryShow()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/view/menu/MenuPresenter$Callback;->onOpenSubMenu(Lcom/android/internal/view/menu/MenuBuilder;)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/widget/AbsActionBarView;->dismissPopupMenus()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/widget/ActionBarContextView;-><init>(Landroid/content/Context;Landroid/util/AttributeSet;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/widget/ActionBarOverlayLayout;-><init>(Landroid/content/Context;Landroid/util/AttributeSet;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/widget/CachingIconView;-><init>(Landroid/content/Context;Landroid/util/AttributeSet;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/widget/IRemoteViewsFactory$Stub;->asInterface(Landroid/os/IBinder;)Lcom/android/internal/widget/IRemoteViewsFactory;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/widget/IRemoteViewsFactory;->getCount()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/widget/IRemoteViewsFactory;->getItemId(I)J,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/widget/IRemoteViewsFactory;->getLoadingView()Landroid/widget/RemoteViews;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/widget/IRemoteViewsFactory;->getViewAt(I)Landroid/widget/RemoteViews;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/widget/IRemoteViewsFactory;->getViewTypeCount()I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/widget/IRemoteViewsFactory;->hasStableIds()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/widget/IRemoteViewsFactory;->isCreated()Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/widget/IRemoteViewsFactory;->onDataSetChanged()V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/widget/LinearLayoutWithDefaultTouchRecepient;->setDefaultTouchRecepient(Landroid/view/View;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/widget/LockPatternUtils;->isLockPasswordEnabled(I)Z,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/widget/LockPatternUtils;->setOwnerInfoEnabled(ZI)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/widget/LockPatternUtils;->setOwnerInfo(Ljava/lang/String;I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/widget/NumericTextView;-><init>(Landroid/content/Context;Landroid/util/AttributeSet;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/widget/PreferenceImageView;-><init>(Landroid/content/Context;Landroid/util/AttributeSet;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/widget/RecyclerView$RecycledViewPool$ScrapData;->mScrapHeap:Ljava/util/ArrayList;,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/widget/ScrollBarUtils;->getThumbLength(IIII)I,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/widget/ScrollingTabContainerView;->animateToTab(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/widget/ScrollingTabContainerView;->animateToVisibility(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/internal/widget/ScrollingTabContainerView;->updateTab(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/org/bouncycastle/asn1/ASN1InputStream;-><init>(Ljava/io/InputStream;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/org/bouncycastle/asn1/DEREncodableVector;-><init>()V,,,,,,,,,,,,,,,,,,,
Lcom/android/org/bouncycastle/asn1/DERInteger;-><init>(Ljava/math/BigInteger;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/org/bouncycastle/asn1/DERObjectIdentifier;-><init>(Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/org/bouncycastle/asn1/DEROctetString;-><init>([B)V,,,,,,,,,,,,,,,,,,,
Lcom/android/org/bouncycastle/asn1/DEROutputStream;-><init>(Ljava/io/OutputStream;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/org/bouncycastle/asn1/DERSet;-><init>(Lcom/android/org/bouncycastle/asn1/ASN1EncodableVector;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/org/bouncycastle/asn1/x509/DigestInfo;-><init>(Lcom/android/org/bouncycastle/asn1/x509/AlgorithmIdentifier;[B)V,,,,,,,,,,,,,,,,,,,
Lcom/android/org/bouncycastle/asn1/x509/X509Name;->CN:Lcom/android/org/bouncycastle/asn1/ASN1ObjectIdentifier;,,,,,,,,,,,,,,,,,,,
Lcom/android/org/bouncycastle/asn1/x509/X509Name;->getOIDs()Ljava/util/Vector;,,,,,,,,,,,,,,,,,,,
Lcom/android/org/bouncycastle/asn1/x509/X509Name;->getValues()Ljava/util/Vector;,,,,,,,,,,,,,,,,,,,
Lcom/android/org/bouncycastle/asn1/x509/X509Name;-><init>(Lcom/android/org/bouncycastle/asn1/ASN1Sequence;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/org/conscrypt/AbstractConscryptSocket;->getChannelId()[B,,,,,,,,,,,,,,,,,,,
Lcom/android/org/conscrypt/AbstractConscryptSocket;->getHostname()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/org/conscrypt/AbstractConscryptSocket;->getHostnameOrIP()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/org/conscrypt/AbstractConscryptSocket;->getNpnSelectedProtocol()[B,,,,,,,,,,,,,,,,,,,
Lcom/android/org/conscrypt/AbstractConscryptSocket;->getSoWriteTimeout()I,,,,,,,,,,,,,,,,,,,
Lcom/android/org/conscrypt/AbstractConscryptSocket;->setChannelIdEnabled(Z)V,,,,,,,,,,,,,,,,,,,
Lcom/android/org/conscrypt/AbstractConscryptSocket;->setChannelIdPrivateKey(Ljava/security/PrivateKey;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/org/conscrypt/AbstractConscryptSocket;->setHandshakeTimeout(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/org/conscrypt/AbstractConscryptSocket;->setNpnProtocols([B)V,,,,,,,,,,,,,,,,,,,
Lcom/android/org/conscrypt/AbstractConscryptSocket;->setSoWriteTimeout(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/org/conscrypt/OpenSSLSocketImpl;->getChannelId()[B,,,,,,,,,,,,,,,,,,,
Lcom/android/org/conscrypt/OpenSSLSocketImpl;->getHostname()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/org/conscrypt/OpenSSLSocketImpl;->getHostnameOrIP()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/android/org/conscrypt/OpenSSLSocketImpl;->getSoWriteTimeout()I,,,,,,,,,,,,,,,,,,,
Lcom/android/org/conscrypt/OpenSSLSocketImpl;->setChannelIdEnabled(Z)V,,,,,,,,,,,,,,,,,,,
Lcom/android/org/conscrypt/OpenSSLSocketImpl;->setChannelIdPrivateKey(Ljava/security/PrivateKey;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/org/conscrypt/OpenSSLSocketImpl;->setHandshakeTimeout(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/org/conscrypt/OpenSSLSocketImpl;->setSoWriteTimeout(I)V,,,,,,,,,,,,,,,,,,,
Lcom/android/org/conscrypt/SSLParametersImpl;->getX509TrustManager()Ljavax/net/ssl/X509TrustManager;,,,,,,,,,,,,,,,,,,,
Lcom/android/org/conscrypt/SSLParametersImpl;->setEnabledProtocols([Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lcom/android/server/net/NetlinkTracker;->clearLinkProperties()V,,,,,,,,,,,,,,,,,,,
Lcom/android/server/net/NetlinkTracker;->getLinkProperties()Landroid/net/LinkProperties;,,,,,,,,,,,,,,,,,,,
Lcom/android/server/net/NetlinkTracker;-><init>(Ljava/lang/String;Lcom/android/server/net/NetlinkTracker$Callback;)V,,,,,,,,,,,,,,,,,,,
Lcom/google/android/collect/Sets;->newArraySet([Ljava/lang/Object;)Landroid/util/ArraySet;,,,,,,,,,,,,,,,,,,,
Lcom/google/android/mms/ContentType;->isSupportedAudioType(Ljava/lang/String;)Z,,,,,,,,,,,,,,,,,,,
Lcom/google/android/mms/ContentType;->isSupportedImageType(Ljava/lang/String;)Z,,,,,,,,,,,,,,,,,,,
Lcom/google/android/mms/ContentType;->isSupportedVideoType(Ljava/lang/String;)Z,,,,,,,,,,,,,,,,,,,
Lcom/google/android/mms/MmsException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V,,,,,,,,,,,,,,,,,,,
Lcom/google/android/mms/pdu/AcknowledgeInd;->setReportAllowed(I)V,,,,,,,,,,,,,,,,,,,
Lcom/google/android/mms/pdu/DeliveryInd;->getDate()J,,,,,,,,,,,,,,,,,,,
Lcom/google/android/mms/pdu/EncodedStringValue;->extract(Ljava/lang/String;)[Lcom/google/android/mms/pdu/EncodedStringValue;,,,,,,,,,,,,,,,,,,,
Lcom/google/android/mms/pdu/MultimediaMessagePdu;->addTo(Lcom/google/android/mms/pdu/EncodedStringValue;)V,,,,,,,,,,,,,,,,,,,
Lcom/google/android/mms/pdu/MultimediaMessagePdu;->setDate(J)V,,,,,,,,,,,,,,,,,,,
Lcom/google/android/mms/pdu/MultimediaMessagePdu;->setPriority(I)V,,,,,,,,,,,,,,,,,,,
Lcom/google/android/mms/pdu/NotifyRespInd;->setReportAllowed(I)V,,,,,,,,,,,,,,,,,,,
Lcom/google/android/mms/pdu/PduBody;->getPartIndex(Lcom/google/android/mms/pdu/PduPart;)I,,,,,,,,,,,,,,,,,,,
Lcom/google/android/mms/pdu/PduBody;->removePart(I)Lcom/google/android/mms/pdu/PduPart;,,,,,,,,,,,,,,,,,,,
Lcom/google/android/mms/pdu/PduPart;->getDataLength()I,,,,,,,,,,,,,,,,,,,
Lcom/google/android/mms/pdu/SendReq;->setCc([Lcom/google/android/mms/pdu/EncodedStringValue;)V,,,,,,,,,,,,,,,,,,,
Lcom/google/android/mms/util/AbstractCache;->get(Ljava/lang/Object;)Ljava/lang/Object;,,,,,,,,,,,,,,,,,,,
Lcom/google/android/mms/util/DownloadDrmHelper;->modifyDrmFwLockFileExtension(Ljava/lang/String;)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lcom/google/android/mms/util/SqliteWrapper;->requery(Landroid/content/Context;Landroid/database/Cursor;)Z,,,,,,,,,,,,,,,,,,,
Ljava/io/Console;->encoding()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Ljava/io/FileDescriptor;->isSocket$()Z,,,,,,,,,,,,,,,,,,,
Ljava/io/File;->filePath:Ljava/nio/file/Path;,,,,,,,,,,,,,,,,,,,
Ljava/io/FileInputStream;->fd:Ljava/io/FileDescriptor;,,,,,,,,,,,,,,,,,,,
Ljava/io/FileOutputStream;->fd:Ljava/io/FileDescriptor;,,,,,,,,,,,,,,,,,,,
Ljava/io/File;->path:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Ljava/io/File;->prefixLength:I,,,,,,,,,,,,,,,,,,,
Ljava/io/File;->status:Ljava/io/File$PathStatus;,,,,,,,,,,,,,,,,,,,
Ljava/io/ObjectOutputStream;->protocol:I,,,,,,,,,,,,,,,,,,,
Ljava/io/RandomAccessFile;->fd:Ljava/io/FileDescriptor;,,,,,,,,,,,,,,,,,,,
Ljava/lang/Class;->clinitThreadId:I,,,,,,,,,,,,,,,,,,,
Ljava/lang/Class;->status:I,,,,,,,,,,,,,,,,,,,
Ljava/lang/Enum;->getSharedConstants(Ljava/lang/Class;)[Ljava/lang/Enum;,,,,,,,,,,,,,,,,,,,
Ljava/lang/Enum;->name:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Ljava/lang/Enum;->ordinal:I,,,,,,,,,,,,,,,,,,,
Ljava/lang/invoke/SerializedLambda;->getCapturedArgCount()I,,,,,,,,,,,,,,,,,,,
Ljava/lang/invoke/SerializedLambda;->getCapturingClass()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Ljava/lang/invoke/SerializedLambda;->getInstantiatedMethodType()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Ljava/lang/invoke/SerializedLambda;-><init>(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V,,,,,,,,,,,,,,,,,,,
Ljava/lang/reflect/Constructor;->serializationCopy(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Constructor;,,,,,,,,,,,,,,,,,,,
Ljava/lang/reflect/Parameter;-><init>(Ljava/lang/String;ILjava/lang/reflect/Executable;I)V,,,,,,,,,,,,,,,,,,,
Ljava/lang/reflect/Proxy;->invoke(Ljava/lang/reflect/Proxy;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;,,,,,,,,,,,,,,,,,,,
Ljava/lang/ref/Reference;->getReferent()Ljava/lang/Object;,,,,,,,,,,,,,,,,,,,
Ljava/lang/ref/ReferenceQueue;->add(Ljava/lang/ref/Reference;)V,,,,,,,,,,,,,,,,,,,
Ljava/lang/Runtime;-><init>()V,,,,,,,,,,,,,,,,,,,
Ljava/lang/String;->getCharsNoCheck(II[CI)V,,,,,,,,,,,,,,,,,,,
Ljava/lang/String;->hash:I,,,,,,,,,,,,,,,,,,,
Ljava/lang/String;->indexOf([CII[CIII)I,,,,,,,,,,,,,,,,,,,
Ljava/lang/String;->lastIndexOf([CII[CIII)I,,,,,,,,,,,,,,,,,,,
Ljava/lang/System;-><init>()V,,,,,,,,,,,,,,,,,,,
Ljava/lang/System;->log(CLjava/lang/String;Ljava/lang/Throwable;)V,,,,,,,,,,,,,,,,,,,
Ljava/lang/Thread;->dispatchUncaughtException(Ljava/lang/Throwable;)V,,,,,,,,,,,,,,,,,,,
Ljava/lang/ThreadGroup;->add(Ljava/lang/Thread;)V,,,,,,,,,,,,,,,,,,,
Ljava/lang/ThreadGroup;->mainThreadGroup:Ljava/lang/ThreadGroup;,,,,,,,,,,,,,,,,,,,
Ljava/lang/ThreadGroup;->name:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Ljava/lang/ThreadGroup;->threadTerminated(Ljava/lang/Thread;)V,,,,,,,,,,,,,,,,,,,
Ljava/lang/Thread;-><init>(Ljava/lang/ThreadGroup;Ljava/lang/String;IZ)V,,,,,,,,,,,,,,,,,,,
Ljava/lang/ThreadLocal;->getMap(Ljava/lang/Thread;)Ljava/lang/ThreadLocal$ThreadLocalMap;,,,,,,,,,,,,,,,,,,,
Ljava/lang/Throwable;->nativeFillInStackTrace()Ljava/lang/Object;,,,,,,,,,,,,,,,,,,,
Ljava/lang/Throwable;->suppressedExceptions:Ljava/util/List;,,,,,,,,,,,,,,,,,,,
Ljava/net/HttpCookie;->assignors:Ljava/util/Map;,,,,,,,,,,,,,,,,,,,
Ljava/net/HttpCookie;->comment:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Ljava/net/HttpCookie;->commentURL:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Ljava/net/HttpCookie;->domain:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Ljava/net/HttpCookie;->header:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Ljava/net/HttpCookie;->maxAge:J,,,,,,,,,,,,,,,,,,,
Ljava/net/HttpCookie;->name:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Ljava/net/HttpCookie;->path:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Ljava/net/HttpCookie;->portlist:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Ljava/net/HttpCookie;->secure:Z,,,,,,,,,,,,,,,,,,,
Ljava/net/HttpCookie;->toDiscard:Z,,,,,,,,,,,,,,,,,,,
Ljava/net/HttpCookie;->tspecials:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Ljava/net/HttpCookie;->value:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Ljava/net/HttpCookie;->version:I,,,,,,,,,,,,,,,,,,,
Ljava/net/Inet4Address;->ALL:Ljava/net/InetAddress;,,,,,,,,,,,,,,,,,,,
Ljava/net/Inet4Address;->ANY:Ljava/net/InetAddress;,,,,,,,,,,,,,,,,,,,
Ljava/net/Inet4Address;-><init>()V,,,,,,,,,,,,,,,,,,,
Ljava/net/Inet6Address$Inet6AddressHolder;->ipaddress:[B,,,,,,,,,,,,,,,,,,,
Ljava/net/Inet6Address$Inet6AddressHolder;->scope_id:I,,,,,,,,,,,,,,,,,,,
Ljava/net/Inet6Address$Inet6AddressHolder;->scope_id_set:Z,,,,,,,,,,,,,,,,,,,
Ljava/net/Inet6Address$Inet6AddressHolder;->scope_ifname:Ljava/net/NetworkInterface;,,,,,,,,,,,,,,,,,,,
Ljava/net/Inet6Address;->ANY:Ljava/net/InetAddress;,,,,,,,,,,,,,,,,,,,
Ljava/net/Inet6Address;->holder6:Ljava/net/Inet6Address$Inet6AddressHolder;,,,,,,,,,,,,,,,,,,,
Ljava/net/Inet6Address;-><init>()V,,,,,,,,,,,,,,,,,,,
Ljava/net/InetAddress$InetAddressHolder;->address:I,,,,,,,,,,,,,,,,,,,
Ljava/net/InetAddress$InetAddressHolder;->family:I,,,,,,,,,,,,,,,,,,,
Ljava/net/InetAddress$InetAddressHolder;->originalHostName:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Ljava/net/InterfaceAddress;-><init>()V,,,,,,,,,,,,,,,,,,,
Ljava/net/Proxy;-><init>()V,,,,,,,,,,,,,,,,,,,
Ljava/net/ServerSocket;->factory:Ljava/net/SocketImplFactory;,,,,,,,,,,,,,,,,,,,
Ljava/net/Socket;->factory:Ljava/net/SocketImplFactory;,,,,,,,,,,,,,,,,,,,
Ljava/net/URI;->query:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Ljava/net/URL;->protocol:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Ljava/nio/Buffer;->capacity:I,,,,,,,,,,,,,,,,,,,
Ljava/nio/ByteBuffer;->hb:[B,,,,,,,,,,,,,,,,,,,
Ljava/nio/ByteBuffer;->isReadOnly:Z,,,,,,,,,,,,,,,,,,,
Ljava/nio/ByteBuffer;->offset:I,,,,,,,,,,,,,,,,,,,
Ljava/nio/CharBuffer;->toString(II)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Ljava/nio/charset/Charset;->defaultCharset:Ljava/nio/charset/Charset;,,,,,,,,,,,,,,,,,,,
Ljava/nio/charset/CharsetEncoder;->canEncode(Ljava/nio/CharBuffer;)Z,,,,,,,,,,,,,,,,,,,
Ljava/nio/DirectByteBuffer;-><init>(JI)V,,,,,,,,,,,,,,,,,,,
Ljava/nio/file/FileTreeWalker;->followLinks:Z,,,,,,,,,,,,,,,,,,,
Ljava/nio/file/FileTreeWalker;->linkOptions:[Ljava/nio/file/LinkOption;,,,,,,,,,,,,,,,,,,,
Ljava/nio/file/FileTreeWalker;->maxDepth:I,,,,,,,,,,,,,,,,,,,
Ljava/security/KeyPairGenerator;->getInstance(Lsun/security/jca/GetInstance$Instance;Ljava/lang/String;)Ljava/security/KeyPairGenerator;,,,,,,,,,,,,,,,,,,,
Ljava/text/DateFormat;->is24Hour:Ljava/lang/Boolean;,,,,,,,,,,,,,,,,,,,
Ljava/text/DecimalFormatSymbols;->getPercentString()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Ljava/text/NumberFormat;->getInstance(Ljava/util/Locale;I)Ljava/text/NumberFormat;,,,,,,,,,,,,,,,,,,,
Ljava/time/Duration;->toSeconds()Ljava/math/BigDecimal;,,,,,,,,,,,,,,,,,,,
Ljava/time/OffsetDateTime;-><init>(Ljava/time/LocalDateTime;Ljava/time/ZoneOffset;)V,,,,,,,,,,,,,,,,,,,
Ljava/time/ZoneId;->of(Ljava/lang/String;Z)Ljava/time/ZoneId;,,,,,,,,,,,,,,,,,,,
Ljava/util/ArrayList$SubList;->offset:I,,,,,,,,,,,,,,,,,,,
Ljava/util/concurrent/ThreadPoolExecutor;->allowCoreThreadTimeOut:Z,,,,,,,,,,,,,,,,,,,
Ljava/util/concurrent/ThreadPoolExecutor;->defaultHandler:Ljava/util/concurrent/RejectedExecutionHandler;,,,,,,,,,,,,,,,,,,,
Ljava/util/concurrent/ThreadPoolExecutor;->mainLock:Ljava/util/concurrent/locks/ReentrantLock;,,,,,,,,,,,,,,,,,,,
Ljava/util/HashMap$Node;->key:Ljava/lang/Object;,,,,,,,,,,,,,,,,,,,
Ljava/util/HashMap$Node;->next:Ljava/util/HashMap$Node;,,,,,,,,,,,,,,,,,,,
Ljava/util/HashMap$Node;->value:Ljava/lang/Object;,,,,,,,,,,,,,,,,,,,
Ljava/util/LinkedHashMap;->accessOrder:Z,,,,,,,,,,,,,,,,,,,
Ljava/util/logging/Handler;->sealed:Z,,,,,,,,,,,,,,,,,,,
Ljava/util/logging/LogManager;->getFormatterProperty(Ljava/lang/String;Ljava/util/logging/Formatter;)Ljava/util/logging/Formatter;,,,,,,,,,,,,,,,,,,,
Ljava/util/Random;->seedUniquifier()J,,,,,,,,,,,,,,,,,,,
Ljava/util/regex/Matcher;->appendPos:I,,,,,,,,,,,,,,,,,,,
Ljava/util/UUID;->leastSigBits:J,,,,,,,,,,,,,,,,,,,
Ljava/util/UUID;->mostSigBits:J,,,,,,,,,,,,,,,,,,,
Ljava/util/Vector;->elementData(I)Ljava/lang/Object;,,,,,,,,,,,,,,,,,,,
Ljava/util/zip/Deflater;->buf:[B,,,,,,,,,,,,,,,,,,,
Ljava/util/zip/Deflater;->finished:Z,,,,,,,,,,,,,,,,,,,
Ljava/util/zip/Deflater;->finish:Z,,,,,,,,,,,,,,,,,,,
Ljava/util/zip/Deflater;->len:I,,,,,,,,,,,,,,,,,,,
Ljava/util/zip/Deflater;->level:I,,,,,,,,,,,,,,,,,,,
Ljava/util/zip/Deflater;->off:I,,,,,,,,,,,,,,,,,,,
Ljava/util/zip/Deflater;->setParams:Z,,,,,,,,,,,,,,,,,,,
Ljava/util/zip/Deflater;->strategy:I,,,,,,,,,,,,,,,,,,,
Ljava/util/zip/Inflater;->buf:[B,,,,,,,,,,,,,,,,,,,
Ljava/util/zip/Inflater;->finished:Z,,,,,,,,,,,,,,,,,,,
Ljava/util/zip/Inflater;->len:I,,,,,,,,,,,,,,,,,,,
Ljava/util/zip/Inflater;->needDict:Z,,,,,,,,,,,,,,,,,,,
Ljava/util/zip/Inflater;->off:I,,,,,,,,,,,,,,,,,,,
Ljava/util/zip/ZipEntry;-><init>(Ljava/lang/String;Ljava/lang/String;JJJII[BJ)V,,,,,,,,,,,,,,,,,,,
Ljava/util/zip/ZipEntry;->method:I,,,,,,,,,,,,,,,,,,,
Ljava/util/zip/ZipFile$ZipEntryIterator;->nextElement()Ljava/util/zip/ZipEntry;,,,,,,,,,,,,,,,,,,,
Ljava/util/zip/ZipFile;->jzfile:J,,,,,,,,,,,,,,,,,,,
Ljava/util/zip/ZipInputStream;->flag:I,,,,,,,,,,,,,,,,,,,
Ljava/util/zip/ZipInputStream;->tmpbuf:[B,,,,,,,,,,,,,,,,,,,
Ljava/util/zip/ZipOutputStream;->method:I,,,,,,,,,,,,,,,,,,,
Ljava/util/zip/ZipOutputStream;->names:Ljava/util/HashSet;,,,,,,,,,,,,,,,,,,,
Ljavax/microedition/khronos/egl/EGL10;->eglReleaseThread()Z,,,,,,,,,,,,,,,,,,,
Lorg/apache/http/conn/ssl/SSLSocketFactory;->createKeyManagers(Ljava/security/KeyStore;Ljava/lang/String;)[Ljavax/net/ssl/KeyManager;,,,,,,,,,,,,,,,,,,,
Lorg/apache/http/conn/ssl/SSLSocketFactory;->createTrustManagers(Ljava/security/KeyStore;)[Ljavax/net/ssl/TrustManager;,,,,,,,,,,,,,,,,,,,
Lorg/apache/http/conn/ssl/SSLSocketFactory;->nameResolver:Lorg/apache/http/conn/scheme/HostNameResolver;,,,,,,,,,,,,,,,,,,,
Lsun/misc/Unsafe;->copyMemoryFromPrimitiveArray(Ljava/lang/Object;JJJ)V,,,,,,,,,,,,,,,,,,,
Lsun/misc/Unsafe;->copyMemoryToPrimitiveArray(JLjava/lang/Object;JJ)V,,,,,,,,,,,,,,,,,,,
Lsun/misc/Unsafe;->getAndAddInt(Ljava/lang/Object;JI)I,,,,,,,,,,,,,,,,,,,
Lsun/misc/Unsafe;->getAndAddLong(Ljava/lang/Object;JJ)J,,,,,,,,,,,,,,,,,,,
Lsun/misc/Unsafe;->getAndSetInt(Ljava/lang/Object;JI)I,,,,,,,,,,,,,,,,,,,
Lsun/misc/Unsafe;->getAndSetLong(Ljava/lang/Object;JJ)J,,,,,,,,,,,,,,,,,,,
Lsun/misc/Unsafe;->INVALID_FIELD_OFFSET:I,,,,,,,,,,,,,,,,,,,
Lsun/net/util/IPAddressUtil;->isIPv4LiteralAddress(Ljava/lang/String;)Z,,,,,,,,,,,,,,,,,,,
Lsun/net/util/IPAddressUtil;->isIPv6LiteralAddress(Ljava/lang/String;)Z,,,,,,,,,,,,,,,,,,,
Lsun/net/www/URLConnection;-><init>(Ljava/net/URL;)V,,,,,,,,,,,,,,,,,,,
Lsun/net/www/URLConnection;->setProperties(Lsun/net/www/MessageHeader;)V,,,,,,,,,,,,,,,,,,,
Lsun/nio/fs/BasicFileAttributesHolder;->get()Ljava/nio/file/attribute/BasicFileAttributes;,,,,,,,,,,,,,,,,,,,
Lsun/security/jca/GetInstance$Instance;->impl:Ljava/lang/Object;,,,,,,,,,,,,,,,,,,,
Lsun/security/jca/GetInstance$Instance;->provider:Ljava/security/Provider;,,,,,,,,,,,,,,,,,,,
Lsun/security/jca/GetInstance;->getInstance(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/String;)Lsun/security/jca/GetInstance$Instance;,,,,,,,,,,,,,,,,,,,
Lsun/security/jca/GetInstance;->getInstance(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;Ljava/security/Provider;)Lsun/security/jca/GetInstance$Instance;,,,,,,,,,,,,,,,,,,,
Lsun/security/jca/GetInstance;->getInstance(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;)Lsun/security/jca/GetInstance$Instance;,,,,,,,,,,,,,,,,,,,
Lsun/security/jca/JCAUtil;->getSecureRandom()Ljava/security/SecureRandom;,,,,,,,,,,,,,,,,,,,
Lsun/security/jca/ProviderConfig;->argument:Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lsun/security/jca/ProviderConfig;->CL_STRING:[Ljava/lang/Class;,,,,,,,,,,,,,,,,,,,
Lsun/security/jca/ProviderConfig;->disableLoad()V,,,,,,,,,,,,,,,,,,,
Lsun/security/jca/ProviderConfig;->hasArgument()Z,,,,,,,,,,,,,,,,,,,
Lsun/security/jca/Providers;->startJarVerification()Ljava/lang/Object;,,,,,,,,,,,,,,,,,,,
Lsun/security/jca/Providers;->stopJarVerification(Ljava/lang/Object;)V,,,,,,,,,,,,,,,,,,,
Lsun/security/pkcs/PKCS9Attributes;->getAttribute(Ljava/lang/String;)Lsun/security/pkcs/PKCS9Attribute;,,,,,,,,,,,,,,,,,,,
Lsun/security/pkcs/SignerInfo;->getEncryptedDigest()[B,,,,,,,,,,,,,,,,,,,
Lsun/security/timestamp/TimestampToken;->getDate()Ljava/util/Date;,,,,,,,,,,,,,,,,,,,
Lsun/security/util/Cache;->newHardMemoryCache(I)Lsun/security/util/Cache;,,,,,,,,,,,,,,,,,,,
Lsun/security/util/DerInputStream;->getUTF8String()Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lsun/security/util/DerOutputStream;-><init>(I)V,,,,,,,,,,,,,,,,,,,
Lsun/security/util/DerValue;->getPositiveBigInteger()Ljava/math/BigInteger;,,,,,,,,,,,,,,,,,,,
Lsun/security/util/ManifestDigester$Entry;->digestWorkaround(Ljava/security/MessageDigest;)[B,,,,,,,,,,,,,,,,,,,
Lsun/security/util/PropertyExpander;->expand(Ljava/lang/String;)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lsun/security/util/ResourcesMgr;->getString(Ljava/lang/String;)Ljava/lang/String;,,,,,,,,,,,,,,,,,,,
Lsun/security/x509/AlgorithmId;->encode()[B,,,,,,,,,,,,,,,,,,,
Lsun/security/x509/CertificateExtensions;->get(Ljava/lang/String;)Lsun/security/x509/Extension;,,,,,,,,,,,,,,,,,,,
Lsun/security/x509/CRLNumberExtension;->get(Ljava/lang/String;)Ljava/math/BigInteger;,,,,,,,,,,,,,,,,,,,
Lsun/security/x509/KeyUsageExtension;->get(Ljava/lang/String;)Ljava/lang/Boolean;,,,,,,,,,,,,,,,,,,,
Lsun/security/x509/NetscapeCertTypeExtension;->get(Ljava/lang/String;)Ljava/lang/Boolean;,,,,,,,,,,,,,,,,,,,
Lsun/security/x509/SubjectAlternativeNameExtension;->get(Ljava/lang/String;)Lsun/security/x509/GeneralNames;,,,,,,,,,,,,,,,,,,,
Lsun/security/x509/X500Name;-><init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lsun/security/x509/X500Name;-><init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V,,,,,,,,,,,,,,,,,,,
Lsun/util/calendar/AbstractCalendar;->getDayOfWeekDateOnOrBefore(JI)J,,,,,,,,,,,,,,,,,,,
Lsun/util/calendar/AbstractCalendar;->getEras()[Lsun/util/calendar/Era;,,,,,,,,,,,,,,,,,,,
Lsun/util/calendar/AbstractCalendar;->getTimeOfDayValue(Lsun/util/calendar/CalendarDate;)J,,,,,,,,,,,,,,,,,,,
Lsun/util/calendar/BaseCalendar$Date;->getNormalizedYear()I,,,,,,,,,,,,,,,,,,,
Lsun/util/calendar/BaseCalendar$Date;->setNormalizedYear(I)V,,,,,,,,,,,,,,,,,,,
Lsun/util/calendar/CalendarDate;->getTimeOfDay()J,,,,,,,,,,,,,,,,,,,
Lsun/util/calendar/CalendarDate;->setDate(III)Lsun/util/calendar/CalendarDate;,,,,,,,,,,,,,,,,,,,
Lsun/util/calendar/CalendarDate;->setDayOfMonth(I)Lsun/util/calendar/CalendarDate;,,,,,,,,,,,,,,,,,,,
Lsun/util/calendar/CalendarDate;->setHours(I)Lsun/util/calendar/CalendarDate;,,,,,,,,,,,,,,,,,,,
Lsun/util/calendar/CalendarDate;->setMillis(I)Lsun/util/calendar/CalendarDate;,,,,,,,,,,,,,,,,,,,
Lsun/util/calendar/CalendarDate;->setMinutes(I)Lsun/util/calendar/CalendarDate;,,,,,,,,,,,,,,,,,,,
Lsun/util/calendar/CalendarDate;->setSeconds(I)Lsun/util/calendar/CalendarDate;,,,,,,,,,,,,,,,,,,,
Lsun/util/calendar/CalendarSystem;->getGregorianCalendar()Lsun/util/calendar/Gregorian;,,,,,,,,,,,,,,,,,,,
Lsun/util/calendar/CalendarSystem;->getTime(Lsun/util/calendar/CalendarDate;)J,,,,,,,,,,,,,,,,,,,
Lsun/util/calendar/CalendarSystem;->newCalendarDate(Ljava/util/TimeZone;)Lsun/util/calendar/CalendarDate;,,,,,,,,,,,,,,,,,,,
Lsun/util/calendar/CalendarSystem;->validate(Lsun/util/calendar/CalendarDate;)Z,,,,,,,,,,,,,,,,,,,
Lsun/util/calendar/CalendarUtils;->floorDivide(II)I,,,,,,,,,,,,,,,,,,,
Lsun/util/calendar/CalendarUtils;->floorDivide(JJ)J,,,,,,,,,,,,,,,,,,,
Lsun/util/calendar/CalendarUtils;->mod(II)I,,,,,,,,,,,,,,,,,,,
Lsun/util/calendar/CalendarUtils;->mod(JJ)J,,,,,,,,,,,,,,,,,,,
Lsun/util/calendar/Era;-><init>(Ljava/lang/String;Ljava/lang/String;JZ)V,,,,,,,,,,,,,,,,,,,
Lsun/util/calendar/ImmutableGregorianDate;->unsupported()V,,,,,,,,,,,,,,,,,,,
Lsun/util/calendar/LocalGregorianCalendar$Date;->getNormalizedYear()I,,,,,,,,,,,,,,,,,,,
Lsun/util/calendar/LocalGregorianCalendar$Date;->setEra(Lsun/util/calendar/Era;)Lsun/util/calendar/LocalGregorianCalendar$Date;,,,,,,,,,,,,,,,,,,,
Lsun/util/calendar/LocalGregorianCalendar$Date;->setNormalizedYear(I)V,,,,,,,,,,,,,,,,,,,
Lsun/util/calendar/LocalGregorianCalendar$Date;->setYear(I)Lsun/util/calendar/LocalGregorianCalendar$Date;,,,,,,,,,,,,,,,,,,,
Lsun/util/calendar/LocalGregorianCalendar;->newCalendarDate(Ljava/util/TimeZone;)Lsun/util/calendar/LocalGregorianCalendar$Date;,,,,,,,,,,,,,,,,,,,
Lsun/util/calendar/LocalGregorianCalendar;->normalize(Lsun/util/calendar/CalendarDate;)Z,,,,,,,,,,,,,,,,,,,
Lsun/util/calendar/LocalGregorianCalendar;->validate(Lsun/util/calendar/CalendarDate;)Z,,,,,,,,,,,,,,,,,,,